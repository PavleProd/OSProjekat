GAS LISTING /tmp/cc5ao3if.s 			page 1


   1              		.file	"kernel.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN6Kernel10popSppSpieEv
   9              	_ZN6Kernel10popSppSpieEv:
  10              	.LFB43:
  11              		.file 1 "src/kernel.cpp"
   1:src/kernel.cpp **** #include "../h/kernel.h"
   2:src/kernel.cpp **** #include "../h/PCB.h"
   3:src/kernel.cpp **** #include "../h/MemoryAllocator.h"
   4:src/kernel.cpp **** #include "../h/console.h"
   5:src/kernel.cpp **** #include "../h/Scheduler.h"
   6:src/kernel.cpp **** #include "../h/SCB.h"
   7:src/kernel.cpp **** #include "../h/SleepingProcesses.h"
   8:src/kernel.cpp **** #include "../h/CCB.h"
   9:src/kernel.cpp **** #include "../h/syscall_c.h"
  10:src/kernel.cpp **** void Kernel::popSppSpie() {
  12              		.loc 1 10 27
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  11:src/kernel.cpp ****     asm volatile("csrw sepc, ra"); // da bi se funkcija vratila u wrapper
  20              		.loc 1 11 5
  21              		.loc 1 11 34 is_stmt 0
  22              	#APP
  23              	# 11 "src/kernel.cpp" 1
  12              	    asm volatile("sret");
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 12 5 is_stmt 1
  27              		.loc 1 12 25 is_stmt 0
  28              	# 12 "src/kernel.cpp" 1
  13              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 13 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE43:
  42              		.align	2
  43              		.globl	interruptHandler
  45              	interruptHandler:
  46              	.LFB44:
  14:src/kernel.cpp **** 
GAS LISTING /tmp/cc5ao3if.s 			page 2


  15:src/kernel.cpp **** extern "C" void interruptHandler() { // extern C da kompajler ne bi menjao ime funkcije
  47              		.loc 1 15 36 is_stmt 1
  48              		.cfi_startproc
  49 0020 130101FA 		addi	sp,sp,-96
  50              		.cfi_def_cfa_offset 96
  51 0024 233C1104 		sd	ra,88(sp)
  52 0028 23388104 		sd	s0,80(sp)
  53 002c 23349104 		sd	s1,72(sp)
  54 0030 23302105 		sd	s2,64(sp)
  55              		.cfi_offset 1, -8
  56              		.cfi_offset 8, -16
  57              		.cfi_offset 9, -24
  58              		.cfi_offset 18, -32
  59 0034 13040106 		addi	s0,sp,96
  60              		.cfi_def_cfa 8, 0
  16:src/kernel.cpp ****     size_t volatile scause = Kernel::r_scause();
  61              		.loc 1 16 5
  62              	.LBB45:
  63              	.LBB46:
  64              		.file 2 "src/../h/kernel.h"
   1:src/../h/kernel.h **** #ifndef KERNEL_H
   2:src/../h/kernel.h **** #define KERNEL_H
   3:src/../h/kernel.h **** 
   4:src/../h/kernel.h **** #include "hw.h"
   5:src/../h/kernel.h **** 
   6:src/../h/kernel.h **** class Kernel {
   7:src/../h/kernel.h **** public:
   8:src/../h/kernel.h ****     // postavlja code u registar a0
   9:src/../h/kernel.h ****     static size_t setCode(size_t code) {
  10:src/../h/kernel.h ****         return code;
  11:src/../h/kernel.h ****     }
  12:src/../h/kernel.h **** 
  13:src/../h/kernel.h ****     // kodovi po kojima se prepoznaju sistemski pozivi
  14:src/../h/kernel.h ****     enum sysCallCodes {
  15:src/../h/kernel.h ****         mem_alloc = 0x01,
  16:src/../h/kernel.h ****         mem_free = 0x02,
  17:src/../h/kernel.h ****         thread_create = 0x11,
  18:src/../h/kernel.h ****         thread_exit = 0x12,
  19:src/../h/kernel.h ****         thread_dispatch = 0x13,
  20:src/../h/kernel.h ****         thread_start = 0x14,
  21:src/../h/kernel.h ****         sem_open = 0x21,
  22:src/../h/kernel.h ****         sem_close = 0x22,
  23:src/../h/kernel.h ****         sem_wait = 0x23,
  24:src/../h/kernel.h ****         sem_signal = 0x24,
  25:src/../h/kernel.h ****         time_sleep = 0x31,
  26:src/../h/kernel.h ****         getc = 0x41,
  27:src/../h/kernel.h ****         putc = 0x42,
  28:src/../h/kernel.h ****         userMode = 0x43
  29:src/../h/kernel.h ****     };
  30:src/../h/kernel.h **** 
  31:src/../h/kernel.h ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  32:src/../h/kernel.h ****     static void popSppSpie();
  33:src/../h/kernel.h **** 
  34:src/../h/kernel.h ****     // cita registar scause (uzrok nastanka prekida)
  35:src/../h/kernel.h ****     static size_t r_scause() {
  36:src/../h/kernel.h ****         size_t volatile scause;
  65              		.loc 2 36 9
GAS LISTING /tmp/cc5ao3if.s 			page 3


  37:src/../h/kernel.h ****         __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  66              		.loc 2 37 9
  67              		.loc 2 37 76 is_stmt 0
  68              	#APP
  69              	# 37 "src/../h/kernel.h" 1
  38              	        return scause;
  70              		csrr a5, scause
  71              	# 0 "" 2
  72              	#NO_APP
  73 003c 2330F4FC 		sd	a5,-64(s0)
  74              		.loc 2 38 9 is_stmt 1
  75              		.loc 2 38 16 is_stmt 0
  76 0040 833704FC 		ld	a5,-64(s0)
  77              	.LBE46:
  78              	.LBE45:
  79              		.loc 1 16 47
  80 0044 233CF4FC 		sd	a5,-40(s0)
  17:src/kernel.cpp ****     size_t volatile sepc = Kernel::r_sepc();
  81              		.loc 1 17 5 is_stmt 1
  82              	.LBB47:
  83              	.LBB48:
  39:src/../h/kernel.h ****     }
  40:src/../h/kernel.h **** 
  41:src/../h/kernel.h ****     // upisuje u registar scause (uzrok nastanka prekida)
  42:src/../h/kernel.h ****     static void w_scause(size_t scause) {
  43:src/../h/kernel.h ****         __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  44:src/../h/kernel.h ****     }
  45:src/../h/kernel.h **** 
  46:src/../h/kernel.h ****     // cita registar sepc
  47:src/../h/kernel.h ****     static size_t r_sepc() {
  48:src/../h/kernel.h ****         size_t volatile sepc;
  84              		.loc 2 48 9
  49:src/../h/kernel.h ****         __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
  85              		.loc 2 49 9
  86              		.loc 2 49 68 is_stmt 0
  87              	#APP
  88              	# 49 "src/../h/kernel.h" 1
  50              	        return sepc;
  89              		csrr a5, sepc
  90              	# 0 "" 2
  91              	#NO_APP
  92 004c 233CF4FA 		sd	a5,-72(s0)
  93              		.loc 2 50 9 is_stmt 1
  94              		.loc 2 50 16 is_stmt 0
  95 0050 833784FB 		ld	a5,-72(s0)
  96              	.LBE48:
  97              	.LBE47:
  98              		.loc 1 17 43
  99 0054 2338F4FC 		sd	a5,-48(s0)
  18:src/kernel.cpp ****     size_t volatile sstatus = Kernel::r_sstatus();
 100              		.loc 1 18 5 is_stmt 1
 101              	.LBB49:
 102              	.LBB50:
  51:src/../h/kernel.h ****     }
  52:src/../h/kernel.h **** 
  53:src/../h/kernel.h ****     // upisuje u registar sepc
  54:src/../h/kernel.h ****     static void w_sepc(size_t sepc) {
GAS LISTING /tmp/cc5ao3if.s 			page 4


  55:src/../h/kernel.h ****         __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
  56:src/../h/kernel.h ****     }
  57:src/../h/kernel.h **** 
  58:src/../h/kernel.h ****     // read register stvec
  59:src/../h/kernel.h ****     static size_t r_stvec() {
  60:src/../h/kernel.h ****         size_t volatile stvec;
  61:src/../h/kernel.h ****         __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
  62:src/../h/kernel.h ****         return stvec;
  63:src/../h/kernel.h ****     }
  64:src/../h/kernel.h **** 
  65:src/../h/kernel.h ****     // write register stvec
  66:src/../h/kernel.h ****     static void w_stvec(size_t stvec) {
  67:src/../h/kernel.h ****         __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  68:src/../h/kernel.h ****     }
  69:src/../h/kernel.h **** 
  70:src/../h/kernel.h ****     // read register stval
  71:src/../h/kernel.h ****     static size_t r_stval() {
  72:src/../h/kernel.h ****         size_t volatile stval;
  73:src/../h/kernel.h ****         __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
  74:src/../h/kernel.h ****         return stval;
  75:src/../h/kernel.h ****     }
  76:src/../h/kernel.h **** 
  77:src/../h/kernel.h ****     // write register stval
  78:src/../h/kernel.h ****     static void w_stval(size_t stval) {
  79:src/../h/kernel.h ****         __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
  80:src/../h/kernel.h ****     }
  81:src/../h/kernel.h **** 
  82:src/../h/kernel.h ****     enum BitMaskSip
  83:src/../h/kernel.h ****     {
  84:src/../h/kernel.h ****         SIP_SSIE = (1 << 1), // da li su dozvoljeni softverski prekidi
  85:src/../h/kernel.h ****         SIP_SEIE = (1 << 9), // da li su dozvoljeni spoljasnji hardverski prekidi
  86:src/../h/kernel.h ****     };
  87:src/../h/kernel.h **** 
  88:src/../h/kernel.h ****     // postavljanje odredjenih bitova (BitMaskSip) u registar sip
  89:src/../h/kernel.h ****     static void ms_sip(size_t mask) {
  90:src/../h/kernel.h ****         __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
  91:src/../h/kernel.h ****     }
  92:src/../h/kernel.h **** 
  93:src/../h/kernel.h ****     // brisanje odredjenih bitova (BitMaskSip) iz registra sip
  94:src/../h/kernel.h ****     static void mc_sip(size_t mask) {
  95:src/../h/kernel.h ****         __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
  96:src/../h/kernel.h ****     }
  97:src/../h/kernel.h **** 
  98:src/../h/kernel.h ****     // citanje iz registra sip
  99:src/../h/kernel.h ****     static size_t r_sip() {
 100:src/../h/kernel.h ****         size_t volatile sip;
 101:src/../h/kernel.h ****         __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 102:src/../h/kernel.h ****         return sip;
 103:src/../h/kernel.h ****     }
 104:src/../h/kernel.h **** 
 105:src/../h/kernel.h ****     // upis u registar sip
 106:src/../h/kernel.h ****     static void w_sip(size_t sip) {
 107:src/../h/kernel.h ****         __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 108:src/../h/kernel.h ****     }
 109:src/../h/kernel.h **** 
 110:src/../h/kernel.h ****     enum BitMaskSstatus
 111:src/../h/kernel.h ****     {
GAS LISTING /tmp/cc5ao3if.s 			page 5


 112:src/../h/kernel.h ****         SSTATUS_SIE = (1 << 1), // ako je 0 - maskiranje spoljasnjih prekida u sistemskom rezimu
 113:src/../h/kernel.h ****         SSTATUS_SPIE = (1 << 5), // prethodna vrednost sie
 114:src/../h/kernel.h ****         SSTATUS_SPP = (1 << 8), // u kom rezimu se desio prekid
 115:src/../h/kernel.h ****     };
 116:src/../h/kernel.h **** 
 117:src/../h/kernel.h ****     // mask set register sstatus
 118:src/../h/kernel.h ****     static void ms_sstatus(size_t mask) {
 119:src/../h/kernel.h ****         __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 120:src/../h/kernel.h ****     }
 121:src/../h/kernel.h **** 
 122:src/../h/kernel.h ****     // mask clear register sstatus
 123:src/../h/kernel.h ****     static void mc_sstatus(size_t mask) {
 124:src/../h/kernel.h ****         __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 125:src/../h/kernel.h ****     }
 126:src/../h/kernel.h **** 
 127:src/../h/kernel.h ****     // read register sstatus
 128:src/../h/kernel.h ****     static size_t r_sstatus() {
 129:src/../h/kernel.h ****         size_t volatile sstatus;
 103              		.loc 2 129 9
 130:src/../h/kernel.h ****         __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 104              		.loc 2 130 9
 105              		.loc 2 130 80 is_stmt 0
 106              	#APP
 107              	# 130 "src/../h/kernel.h" 1
 131              	        return sstatus;
 108              		csrr a5, sstatus
 109              	# 0 "" 2
 110              	#NO_APP
 111 005c 2338F4FA 		sd	a5,-80(s0)
 112              		.loc 2 131 9 is_stmt 1
 113              		.loc 2 131 16 is_stmt 0
 114 0060 833704FB 		ld	a5,-80(s0)
 115              	.LBE50:
 116              	.LBE49:
 117              		.loc 1 18 49
 118 0064 2334F4FC 		sd	a5,-56(s0)
  19:src/kernel.cpp ****     if(scause == 9 || scause == 8) { // sistemski poziv iz korisnickog(8) ili sistemskog(9) rezima
 119              		.loc 1 19 5 is_stmt 1
 120              	.LBB51:
 121              		.loc 1 19 15 is_stmt 0
 122 0068 033784FD 		ld	a4,-40(s0)
 123              		.loc 1 19 20
 124 006c 93079000 		li	a5,9
 125 0070 6308F704 		beq	a4,a5,.L4
 126              		.loc 1 19 30 discriminator 2
 127 0074 033784FD 		ld	a4,-40(s0)
 128              		.loc 1 19 20 discriminator 2
 129 0078 93078000 		li	a5,8
 130 007c 6302F704 		beq	a4,a5,.L4
 131              	.LBE51:
  20:src/kernel.cpp ****         sepc += 4; // da bi se sret vratio na pravo mesto
  21:src/kernel.cpp ****         size_t volatile code = PCB::running->registers[10]; // a0
  22:src/kernel.cpp ****         switch(code) {
  23:src/kernel.cpp ****             case Kernel::sysCallCodes::mem_alloc: // mem_alloc(size_t size) a1 - size
  24:src/kernel.cpp ****             {
  25:src/kernel.cpp ****                 size_t size = PCB::running->registers[11];
  26:src/kernel.cpp ****                 size = MemoryAllocator::blocksInSize(size);
GAS LISTING /tmp/cc5ao3if.s 			page 6


  27:src/kernel.cpp **** 
  28:src/kernel.cpp ****                 PCB::running->registers[10] = (size_t)MemoryAllocator::mem_alloc(size);
  29:src/kernel.cpp ****                 break;
  30:src/kernel.cpp ****             }
  31:src/kernel.cpp ****             case Kernel::sysCallCodes::mem_free: // mem_free(void* memSegment) a1 - memSegment
  32:src/kernel.cpp ****             {
  33:src/kernel.cpp ****                 void* memSegment = (void*)PCB::running->registers[11];
  34:src/kernel.cpp ****                 PCB::running->registers[10] = (size_t)MemoryAllocator::mem_free(memSegment);
  35:src/kernel.cpp ****                 break;
  36:src/kernel.cpp ****             }
  37:src/kernel.cpp ****             case Kernel::sysCallCodes::thread_dispatch:
  38:src/kernel.cpp ****             {
  39:src/kernel.cpp ****                 PCB::timeSliceCounter = 0;
  40:src/kernel.cpp ****                 PCB::dispatch();
  41:src/kernel.cpp ****                 break;
  42:src/kernel.cpp ****             }
  43:src/kernel.cpp ****             case Kernel::sysCallCodes::thread_exit:
  44:src/kernel.cpp ****             {
  45:src/kernel.cpp ****                 PCB::running->finished = true;
  46:src/kernel.cpp ****                 PCB::timeSliceCounter = 0;
  47:src/kernel.cpp ****                 PCB::dispatch();
  48:src/kernel.cpp ****                 PCB::running->registers[10] = (size_t)0;
  49:src/kernel.cpp ****                 break;
  50:src/kernel.cpp ****             }
  51:src/kernel.cpp ****             case Kernel::sysCallCodes::thread_start: // a1 - handle
  52:src/kernel.cpp ****             {
  53:src/kernel.cpp ****                 PCB **handle = (PCB **) PCB::running->registers[11];
  54:src/kernel.cpp ****                 Scheduler::put(*handle);
  55:src/kernel.cpp ****                 break;
  56:src/kernel.cpp ****             }
  57:src/kernel.cpp ****             case Kernel::sysCallCodes::thread_create: // a1 - handle a2 - startRoutine a3 - arg a4 
  58:src/kernel.cpp ****             {
  59:src/kernel.cpp ****                 // argumenti
  60:src/kernel.cpp ****                 PCB::processMain main = (PCB::processMain)PCB::running->registers[12];
  61:src/kernel.cpp ****                 void *arg = (void*)PCB::running->registers[13];
  62:src/kernel.cpp **** 
  63:src/kernel.cpp ****                 PCB **handle = (PCB**)PCB::running->registers[11];
  64:src/kernel.cpp ****                 *handle = PCB::createProccess(main, arg);
  65:src/kernel.cpp **** 
  66:src/kernel.cpp ****                 // stavljamo handle u a0 (verovatno vec jeste ali za svaki slucaj)
  67:src/kernel.cpp ****                 PCB::running->registers[10] = (size_t)handle;
  68:src/kernel.cpp **** 
  69:src/kernel.cpp ****                 if(*handle == nullptr) break;
  70:src/kernel.cpp ****                 // dodeljujemo alociran stek procesu
  71:src/kernel.cpp ****                 size_t* stack = (size_t*)PCB::running->registers[14];
  72:src/kernel.cpp ****                 (*handle)->stack = stack;
  73:src/kernel.cpp ****                 (*handle)->registers[2] = (size_t)&stack[DEFAULT_STACK_SIZE]; // sp(x2)
  74:src/kernel.cpp **** 
  75:src/kernel.cpp ****                 break;
  76:src/kernel.cpp ****             }
  77:src/kernel.cpp ****             case Kernel::sysCallCodes::sem_open: // a1 = handle a2 = init
  78:src/kernel.cpp ****             {
  79:src/kernel.cpp ****                 SCB **handle = (SCB**) PCB::running->registers[11];
  80:src/kernel.cpp ****                 size_t init = (int) PCB::running->registers[12];
  81:src/kernel.cpp **** 
  82:src/kernel.cpp ****                 (*handle) = SCB::createSemaphore(init);
  83:src/kernel.cpp **** 
GAS LISTING /tmp/cc5ao3if.s 			page 7


  84:src/kernel.cpp ****                 PCB::running->registers[10] = (size_t)handle;
  85:src/kernel.cpp ****                 break;
  86:src/kernel.cpp ****             }
  87:src/kernel.cpp ****             case Kernel::sysCallCodes::sem_wait: // a1 = sem
  88:src/kernel.cpp ****             {
  89:src/kernel.cpp ****                 SCB* sem = (SCB*) PCB::running->registers[11];
  90:src/kernel.cpp **** 
  91:src/kernel.cpp ****                 PCB::running->registers[10] = sem->wait(); // 0 ako se ispravno probudila, -2 ako s
  92:src/kernel.cpp ****                 break;
  93:src/kernel.cpp ****             }
  94:src/kernel.cpp ****             case Kernel::sysCallCodes::sem_signal: // a1 = sem
  95:src/kernel.cpp ****             {
  96:src/kernel.cpp ****                 SCB* sem = (SCB*) PCB::running->registers[11];
  97:src/kernel.cpp **** 
  98:src/kernel.cpp ****                 sem->signal();
  99:src/kernel.cpp ****                 break;
 100:src/kernel.cpp ****             }
 101:src/kernel.cpp ****             case Kernel::sysCallCodes::sem_close: // a1 = sem
 102:src/kernel.cpp ****             {
 103:src/kernel.cpp ****                 SCB* sem = (SCB*) PCB::running->registers[11];
 104:src/kernel.cpp **** 
 105:src/kernel.cpp ****                 sem->signalClosing();
 106:src/kernel.cpp ****                 delete sem; // destruktor ce signalizirati svim procesima da je obrisan
 107:src/kernel.cpp **** 
 108:src/kernel.cpp ****                 break;
 109:src/kernel.cpp ****             }
 110:src/kernel.cpp ****             case Kernel::sysCallCodes::time_sleep: // a1 = time
 111:src/kernel.cpp ****             {
 112:src/kernel.cpp ****                 size_t time = (size_t)PCB::running->registers[11];
 113:src/kernel.cpp ****                 PCB::running->timeSleeping = time;
 114:src/kernel.cpp ****                 SleepingProcesses::putToSleep(PCB::running);
 115:src/kernel.cpp ****                 break;
 116:src/kernel.cpp ****             }
 117:src/kernel.cpp ****             case Kernel::sysCallCodes::putc: // a1 = character
 118:src/kernel.cpp ****             {
 119:src/kernel.cpp ****                 char character = PCB::running->registers[11];
 120:src/kernel.cpp ****                 CCB::outputBuffer.pushBack(character);
 121:src/kernel.cpp ****                 CCB::semOutput->signal();
 122:src/kernel.cpp ****                 break;
 123:src/kernel.cpp ****             }
 124:src/kernel.cpp ****             case Kernel::sysCallCodes::getc:
 125:src/kernel.cpp ****             {
 126:src/kernel.cpp ****                 CCB::semInput->signal();
 127:src/kernel.cpp ****                 while(CCB::inputBuffer.peekFront() == 0) {
 128:src/kernel.cpp ****                     CCB::inputBufferEmpty->wait();
 129:src/kernel.cpp ****                 }
 130:src/kernel.cpp **** 
 131:src/kernel.cpp ****                 PCB::running->registers[10] = CCB::inputBuffer.popFront();
 132:src/kernel.cpp ****                 break;
 133:src/kernel.cpp ****             }
 134:src/kernel.cpp ****             case Kernel::sysCallCodes::userMode:
 135:src/kernel.cpp ****             {
 136:src/kernel.cpp ****                 sstatus = sstatus & ~Kernel::BitMaskSstatus::SSTATUS_SPP;
 137:src/kernel.cpp ****                 break;
 138:src/kernel.cpp ****             }
 139:src/kernel.cpp ****             default:
 140:src/kernel.cpp ****                 break;
GAS LISTING /tmp/cc5ao3if.s 			page 8


 141:src/kernel.cpp ****         }
 142:src/kernel.cpp ****         Kernel::w_sepc(sepc);
 143:src/kernel.cpp ****         Kernel::w_sstatus(sstatus);
 144:src/kernel.cpp ****         return;
 145:src/kernel.cpp ****     }
 146:src/kernel.cpp ****     else if(scause == (1UL << 63 | 1)) { // softverski prekid od tajmera
 132              		.loc 1 146 10 is_stmt 1
 133              	.LBB89:
 134              	.LBB52:
 135              		.loc 1 146 20 is_stmt 0
 136 0080 033784FD 		ld	a4,-40(s0)
 137              		.loc 1 146 10
 138 0084 9307F0FF 		li	a5,-1
 139 0088 9397F703 		slli	a5,a5,63
 140 008c 93871700 		addi	a5,a5,1
 141 0090 630EF72C 		beq	a4,a5,.L29
 142              	.LBE52:
 143              	.LBE89:
 147:src/kernel.cpp ****         PCB::timeSliceCounter++;
 148:src/kernel.cpp ****         SleepingProcesses::wakeUp(); // budi uspavane procese ako su postojali, ako ne smanjuje per
 149:src/kernel.cpp ****         if(PCB::timeSliceCounter >= PCB::running->timeSlice) {
 150:src/kernel.cpp ****             PCB::timeSliceCounter = 0;
 151:src/kernel.cpp ****             PCB::dispatch(); // vrsimo promenu konteksta ako je istekao time slice procesa
 152:src/kernel.cpp ****             Kernel::w_sepc(sepc);
 153:src/kernel.cpp ****             Kernel::w_sstatus(sstatus);
 154:src/kernel.cpp ****         }
 155:src/kernel.cpp ****         Kernel::mc_sip(Kernel::SIP_SSIE); // postavljamo SSIE na 0 jer smo obradili softverski prek
 156:src/kernel.cpp ****     }
 157:src/kernel.cpp ****     else if(scause == (1UL << 63 | 9)) { // spoljasnji prekid od konzole
 144              		.loc 1 157 10 is_stmt 1
 145              	.LBB90:
 146              	.LBB62:
 147              	.LBB53:
 148              		.loc 1 157 20 is_stmt 0
 149 0094 033784FD 		ld	a4,-40(s0)
 150              		.loc 1 157 10
 151 0098 9307F0FF 		li	a5,-1
 152 009c 9397F703 		slli	a5,a5,63
 153 00a0 93879700 		addi	a5,a5,9
 154 00a4 6304F732 		beq	a4,a5,.L30
 155              	.L3:
 156              	.LBE53:
 157              	.LBE62:
 158              	.LBE90:
 158:src/kernel.cpp ****         size_t code = plic_claim();
 159:src/kernel.cpp ****         if(code == CONSOLE_IRQ) {
 160:src/kernel.cpp ****             if(*(char*)CONSOLE_STATUS & CONSOLE_TX_STATUS_BIT) { // putc
 161:src/kernel.cpp ****                 //if(CCB::semOutput->getSemValue() == 0) plic_complete(code);
 162:src/kernel.cpp ****             }
 163:src/kernel.cpp ****             if(*(char*)CONSOLE_STATUS & CONSOLE_RX_STATUS_BIT) { // getc
 164:src/kernel.cpp ****                 //if(CCB::semInput->getSemValue() == 0) plic_complete(code);
 165:src/kernel.cpp ****             }
 166:src/kernel.cpp ****         }
 167:src/kernel.cpp ****         else {
 168:src/kernel.cpp **** 
 169:src/kernel.cpp ****         }
 170:src/kernel.cpp ****         plic_complete(code);
GAS LISTING /tmp/cc5ao3if.s 			page 9


 171:src/kernel.cpp **** 
 172:src/kernel.cpp **** 
 173:src/kernel.cpp ****     }
 174:src/kernel.cpp ****     else { // neka vrsta greske, neocekivan skok na prekidnu rutinu
 175:src/kernel.cpp ****     }
 176:src/kernel.cpp **** 
 177:src/kernel.cpp **** }
 159              		.loc 1 177 1
 160 00a8 83308105 		ld	ra,88(sp)
 161              		.cfi_remember_state
 162              		.cfi_restore 1
 163 00ac 03340105 		ld	s0,80(sp)
 164              		.cfi_restore 8
 165              		.cfi_def_cfa 2, 96
 166 00b0 83348104 		ld	s1,72(sp)
 167              		.cfi_restore 9
 168 00b4 03390104 		ld	s2,64(sp)
 169              		.cfi_restore 18
 170 00b8 13010106 		addi	sp,sp,96
 171              		.cfi_def_cfa_offset 0
 172 00bc 67800000 		jr	ra
 173              	.L4:
 174              		.cfi_restore_state
 175              	.LBB91:
 176              	.LBB63:
  20:src/kernel.cpp ****         size_t volatile code = PCB::running->registers[10]; // a0
 177              		.loc 1 20 9 is_stmt 1
  20:src/kernel.cpp ****         size_t volatile code = PCB::running->registers[10]; // a0
 178              		.loc 1 20 14 is_stmt 0
 179 00c0 833704FD 		ld	a5,-48(s0)
 180 00c4 93874700 		addi	a5,a5,4
 181 00c8 2338F4FC 		sd	a5,-48(s0)
  21:src/kernel.cpp ****         switch(code) {
 182              		.loc 1 21 9 is_stmt 1
  21:src/kernel.cpp ****         switch(code) {
 183              		.loc 1 21 46 is_stmt 0
 184 00cc 97070000 		la	a5,_ZN3PCB7runningE
 184      83B70700 
 185 00d4 03B50700 		ld	a0,0(a5)
 186 00d8 03378501 		ld	a4,24(a0)
  21:src/kernel.cpp ****         switch(code) {
 187              		.loc 1 21 25
 188 00dc 83370705 		ld	a5,80(a4)
 189 00e0 2334F4FA 		sd	a5,-88(s0)
  22:src/kernel.cpp ****             case Kernel::sysCallCodes::mem_alloc: // mem_alloc(size_t size) a1 - size
 190              		.loc 1 22 9 is_stmt 1
 191              	.LBB64:
  22:src/kernel.cpp ****             case Kernel::sysCallCodes::mem_alloc: // mem_alloc(size_t size) a1 - size
 192              		.loc 1 22 16 is_stmt 0
 193 00e4 833784FA 		ld	a5,-88(s0)
 194 00e8 93063004 		li	a3,67
 195 00ec 63E2F604 		bgtu	a5,a3,.L7
 196 00f0 93972700 		slli	a5,a5,2
 197 00f4 97060000 		lla	a3,.L9
 197      93860600 
 198 00fc B387D700 		add	a5,a5,a3
 199 0100 83A70700 		lw	a5,0(a5)
GAS LISTING /tmp/cc5ao3if.s 			page 10


 200 0104 B387D700 		add	a5,a5,a3
 201 0108 67800700 		jr	a5
 202              		.section	.rodata
 203              		.align	2
 204              		.align	2
 205              	.L9:
 206 0000 00000000 		.word	.L7-.L9
 207 0004 00000000 		.word	.L22-.L9
 208 0008 00000000 		.word	.L21-.L9
 209 000c 00000000 		.word	.L7-.L9
 210 0010 00000000 		.word	.L7-.L9
 211 0014 00000000 		.word	.L7-.L9
 212 0018 00000000 		.word	.L7-.L9
 213 001c 00000000 		.word	.L7-.L9
 214 0020 00000000 		.word	.L7-.L9
 215 0024 00000000 		.word	.L7-.L9
 216 0028 00000000 		.word	.L7-.L9
 217 002c 00000000 		.word	.L7-.L9
 218 0030 00000000 		.word	.L7-.L9
 219 0034 00000000 		.word	.L7-.L9
 220 0038 00000000 		.word	.L7-.L9
 221 003c 00000000 		.word	.L7-.L9
 222 0040 00000000 		.word	.L7-.L9
 223 0044 00000000 		.word	.L20-.L9
 224 0048 00000000 		.word	.L19-.L9
 225 004c 00000000 		.word	.L18-.L9
 226 0050 00000000 		.word	.L17-.L9
 227 0054 00000000 		.word	.L7-.L9
 228 0058 00000000 		.word	.L7-.L9
 229 005c 00000000 		.word	.L7-.L9
 230 0060 00000000 		.word	.L7-.L9
 231 0064 00000000 		.word	.L7-.L9
 232 0068 00000000 		.word	.L7-.L9
 233 006c 00000000 		.word	.L7-.L9
 234 0070 00000000 		.word	.L7-.L9
 235 0074 00000000 		.word	.L7-.L9
 236 0078 00000000 		.word	.L7-.L9
 237 007c 00000000 		.word	.L7-.L9
 238 0080 00000000 		.word	.L7-.L9
 239 0084 00000000 		.word	.L16-.L9
 240 0088 00000000 		.word	.L15-.L9
 241 008c 00000000 		.word	.L14-.L9
 242 0090 00000000 		.word	.L13-.L9
 243 0094 00000000 		.word	.L7-.L9
 244 0098 00000000 		.word	.L7-.L9
 245 009c 00000000 		.word	.L7-.L9
 246 00a0 00000000 		.word	.L7-.L9
 247 00a4 00000000 		.word	.L7-.L9
 248 00a8 00000000 		.word	.L7-.L9
 249 00ac 00000000 		.word	.L7-.L9
 250 00b0 00000000 		.word	.L7-.L9
 251 00b4 00000000 		.word	.L7-.L9
 252 00b8 00000000 		.word	.L7-.L9
 253 00bc 00000000 		.word	.L7-.L9
 254 00c0 00000000 		.word	.L7-.L9
 255 00c4 00000000 		.word	.L12-.L9
 256 00c8 00000000 		.word	.L7-.L9
GAS LISTING /tmp/cc5ao3if.s 			page 11


 257 00cc 00000000 		.word	.L7-.L9
 258 00d0 00000000 		.word	.L7-.L9
 259 00d4 00000000 		.word	.L7-.L9
 260 00d8 00000000 		.word	.L7-.L9
 261 00dc 00000000 		.word	.L7-.L9
 262 00e0 00000000 		.word	.L7-.L9
 263 00e4 00000000 		.word	.L7-.L9
 264 00e8 00000000 		.word	.L7-.L9
 265 00ec 00000000 		.word	.L7-.L9
 266 00f0 00000000 		.word	.L7-.L9
 267 00f4 00000000 		.word	.L7-.L9
 268 00f8 00000000 		.word	.L7-.L9
 269 00fc 00000000 		.word	.L7-.L9
 270 0100 00000000 		.word	.L7-.L9
 271 0104 00000000 		.word	.L11-.L9
 272 0108 00000000 		.word	.L10-.L9
 273 010c 00000000 		.word	.L8-.L9
 274              		.text
 275              	.L22:
 276              	.LBB65:
  23:src/kernel.cpp ****             {
 277              		.loc 1 23 13 is_stmt 1
  24:src/kernel.cpp ****                 size_t size = PCB::running->registers[11];
 278              		.loc 1 24 13
 279              	.LBB66:
  25:src/kernel.cpp ****                 size = MemoryAllocator::blocksInSize(size);
 280              		.loc 1 25 17
  25:src/kernel.cpp ****                 size = MemoryAllocator::blocksInSize(size);
 281              		.loc 1 25 24 is_stmt 0
 282 010c 03358705 		ld	a0,88(a4)
 283              	.LVL0:
  26:src/kernel.cpp **** 
 284              		.loc 1 26 17 is_stmt 1
 285              	.LBB67:
 286              	.LBB68:
 287              		.file 3 "src/../h/MemoryAllocator.h"
   1:src/../h/MemoryAllocator.h **** #ifndef PROJECT_BASE_MEMORYALLOCATOR_H
   2:src/../h/MemoryAllocator.h **** #define PROJECT_BASE_MEMORYALLOCATOR_H
   3:src/../h/MemoryAllocator.h **** 
   4:src/../h/MemoryAllocator.h **** #include "hw.h"
   5:src/../h/MemoryAllocator.h **** 
   6:src/../h/MemoryAllocator.h **** class MemoryAllocator {
   7:src/../h/MemoryAllocator.h **** public:
   8:src/../h/MemoryAllocator.h ****     /*
   9:src/../h/MemoryAllocator.h ****     Alocira (najmanje) size bajtova memorije, zaokruženo i poravnato na blokove veličine MEM_BLOC
  10:src/../h/MemoryAllocator.h ****     Svaki alocirani segment ima zaglavlje sa velicinom tog segmenta(vraca se adresa nakon tog zagla
  11:src/../h/MemoryAllocator.h **** 
  12:src/../h/MemoryAllocator.h ****     Vraća:
  13:src/../h/MemoryAllocator.h ****     pokazivač na alocirani deo memorije u slučaju uspeha, nullptr u slučaju neuspeha
  14:src/../h/MemoryAllocator.h **** 
  15:src/../h/MemoryAllocator.h ****     Radi se po algoritmu first fit(alociramo prvi segment koji je >= size). Ako je preostao prostor
  16:src/../h/MemoryAllocator.h ****     jednog bloka, taj preostali prostor se pridruzuje ovom koji smo sad alocirali(jer nema poente d
  17:src/../h/MemoryAllocator.h ****     */
  18:src/../h/MemoryAllocator.h ****     static void* mem_alloc(size_t size);
  19:src/../h/MemoryAllocator.h ****     /*
  20:src/../h/MemoryAllocator.h ****     Oslobađa prostor prethodno zauzet pomoću mem_alloc.
  21:src/../h/MemoryAllocator.h ****     Vraća 0 u slučaju uspeha, BAD_POINTER  flag ako je dostavljen los pokazivac.
GAS LISTING /tmp/cc5ao3if.s 			page 12


  22:src/../h/MemoryAllocator.h ****     Ako je moguce, spaja dva susedna slobodna segmenta u jedan veci
  23:src/../h/MemoryAllocator.h ****     */
  24:src/../h/MemoryAllocator.h ****     static int mem_free(void* memSegment);
  25:src/../h/MemoryAllocator.h **** 
  26:src/../h/MemoryAllocator.h ****     enum memFreeFlags {
  27:src/../h/MemoryAllocator.h ****         BAD_POINTER = -1 // nije koriscen pokazviac iz mem_alloc
  28:src/../h/MemoryAllocator.h ****     };
  29:src/../h/MemoryAllocator.h **** 
  30:src/../h/MemoryAllocator.h ****     // Vraca minimalan potreban broj blokova za alokaciju memorije velicine size bajtova
  31:src/../h/MemoryAllocator.h ****     static inline size_t sizeInBlocks(size_t size) {
  32:src/../h/MemoryAllocator.h ****         return (size / MEM_BLOCK_SIZE) + (size % MEM_BLOCK_SIZE > 0);
  33:src/../h/MemoryAllocator.h ****     }
  34:src/../h/MemoryAllocator.h **** 
  35:src/../h/MemoryAllocator.h ****     // Vraca velicinu numOfBlocks blokova u bajtovima
  36:src/../h/MemoryAllocator.h ****     static inline size_t blocksInSize(size_t numOfBlocks) {
  37:src/../h/MemoryAllocator.h ****         return numOfBlocks * MEM_BLOCK_SIZE;
 288              		.loc 3 37 9
 289              	.LBE68:
 290              	.LBE67:
  28:src/kernel.cpp ****                 break;
 291              		.loc 1 28 17
  28:src/kernel.cpp ****                 break;
 292              		.loc 1 28 81 is_stmt 0
 293 0110 13156500 		slli	a0,a0,6
 294              	.LVL1:
 295 0114 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 295      E7800000 
 296              	.LVL2:
  28:src/kernel.cpp ****                 break;
 297              		.loc 1 28 31
 298 011c 97070000 		la	a5,_ZN3PCB7runningE
 298      83B70700 
 299 0124 83B70700 		ld	a5,0(a5)
 300 0128 83B78701 		ld	a5,24(a5)
  28:src/kernel.cpp ****                 break;
 301              		.loc 1 28 45
 302 012c 23B8A704 		sd	a0,80(a5)
  29:src/kernel.cpp ****             }
 303              		.loc 1 29 17 is_stmt 1
 304              	.L7:
 305              	.LBE66:
 306              	.LBE65:
 307              	.LBE64:
 142:src/kernel.cpp ****         Kernel::w_sstatus(sstatus);
 308              		.loc 1 142 9
 142:src/kernel.cpp ****         Kernel::w_sstatus(sstatus);
 309              		.loc 1 142 23 is_stmt 0
 310 0130 833704FD 		ld	a5,-48(s0)
 311              	.LVL3:
 312              	.LBB83:
 313              	.LBB84:
  55:src/../h/kernel.h ****     }
 314              		.loc 2 55 9 is_stmt 1
  55:src/../h/kernel.h ****     }
 315              		.loc 2 55 69 is_stmt 0
 316              	#APP
 317              	# 55 "src/../h/kernel.h" 1
GAS LISTING /tmp/cc5ao3if.s 			page 13


 318              		csrw sepc, a5
 319              	# 0 "" 2
 320              	.LVL4:
 321              	#NO_APP
 322              	.LBE84:
 323              	.LBE83:
 143:src/kernel.cpp ****         return;
 324              		.loc 1 143 9 is_stmt 1
 143:src/kernel.cpp ****         return;
 325              		.loc 1 143 26 is_stmt 0
 326 0138 833784FC 		ld	a5,-56(s0)
 327              	.LVL5:
 328              	.LBB85:
 329              	.LBB86:
 132:src/../h/kernel.h ****     }
 133:src/../h/kernel.h **** 
 134:src/../h/kernel.h ****     // write register sstatus
 135:src/../h/kernel.h ****     static void w_sstatus(size_t sstatus) {
 136:src/../h/kernel.h ****         __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 330              		.loc 2 136 9 is_stmt 1
 331              		.loc 2 136 81 is_stmt 0
 332              	#APP
 333              	# 136 "src/../h/kernel.h" 1
 137              	    }
 334              		csrw sstatus, a5
 335              	# 0 "" 2
 336              	.LVL6:
 337              	#NO_APP
 338              	.LBE86:
 339              	.LBE85:
 144:src/kernel.cpp ****     }
 340              		.loc 1 144 9 is_stmt 1
 341 0140 6FF09FF6 		j	.L3
 342              	.L21:
 343              	.LBB87:
 344              	.LBB82:
  31:src/kernel.cpp ****             {
 345              		.loc 1 31 13
  32:src/kernel.cpp ****                 void* memSegment = (void*)PCB::running->registers[11];
 346              		.loc 1 32 13
 347              	.LBB69:
  33:src/kernel.cpp ****                 PCB::running->registers[10] = (size_t)MemoryAllocator::mem_free(memSegment);
 348              		.loc 1 33 17
 349              	.LVL7:
  34:src/kernel.cpp ****                 break;
 350              		.loc 1 34 17
  34:src/kernel.cpp ****                 break;
 351              		.loc 1 34 80 is_stmt 0
 352 0144 03358705 		ld	a0,88(a4)
 353 0148 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 353      E7800000 
 354              	.LVL8:
  34:src/kernel.cpp ****                 break;
 355              		.loc 1 34 31
 356 0150 97070000 		la	a5,_ZN3PCB7runningE
 356      83B70700 
 357 0158 83B70700 		ld	a5,0(a5)
GAS LISTING /tmp/cc5ao3if.s 			page 14


 358 015c 83B78701 		ld	a5,24(a5)
  34:src/kernel.cpp ****                 break;
 359              		.loc 1 34 45
 360 0160 23B8A704 		sd	a0,80(a5)
  35:src/kernel.cpp ****             }
 361              		.loc 1 35 17 is_stmt 1
 362 0164 6FF0DFFC 		j	.L7
 363              	.L18:
 364              	.LBE69:
  37:src/kernel.cpp ****             {
 365              		.loc 1 37 13
  38:src/kernel.cpp ****                 PCB::timeSliceCounter = 0;
 366              		.loc 1 38 13
  39:src/kernel.cpp ****                 PCB::dispatch();
 367              		.loc 1 39 17
  39:src/kernel.cpp ****                 PCB::dispatch();
 368              		.loc 1 39 39 is_stmt 0
 369 0168 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 369      83B70700 
 370 0170 23B00700 		sd	zero,0(a5)
  40:src/kernel.cpp ****                 break;
 371              		.loc 1 40 17 is_stmt 1
  40:src/kernel.cpp ****                 break;
 372              		.loc 1 40 30 is_stmt 0
 373 0174 97000000 		call	_ZN3PCB8dispatchEv@plt
 373      E7800000 
 374              	.LVL9:
  41:src/kernel.cpp ****             }
 375              		.loc 1 41 17 is_stmt 1
 376 017c 6FF05FFB 		j	.L7
 377              	.L19:
  43:src/kernel.cpp ****             {
 378              		.loc 1 43 13
  44:src/kernel.cpp ****                 PCB::running->finished = true;
 379              		.loc 1 44 13
  45:src/kernel.cpp ****                 PCB::timeSliceCounter = 0;
 380              		.loc 1 45 17
  45:src/kernel.cpp ****                 PCB::timeSliceCounter = 0;
 381              		.loc 1 45 40 is_stmt 0
 382 0180 93071000 		li	a5,1
 383 0184 2304F502 		sb	a5,40(a0)
  46:src/kernel.cpp ****                 PCB::dispatch();
 384              		.loc 1 46 17 is_stmt 1
  46:src/kernel.cpp ****                 PCB::dispatch();
 385              		.loc 1 46 39 is_stmt 0
 386 0188 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 386      83B70700 
 387 0190 23B00700 		sd	zero,0(a5)
  47:src/kernel.cpp ****                 PCB::running->registers[10] = (size_t)0;
 388              		.loc 1 47 17 is_stmt 1
  47:src/kernel.cpp ****                 PCB::running->registers[10] = (size_t)0;
 389              		.loc 1 47 30 is_stmt 0
 390 0194 97000000 		call	_ZN3PCB8dispatchEv@plt
 390      E7800000 
 391              	.LVL10:
  48:src/kernel.cpp ****                 break;
 392              		.loc 1 48 17 is_stmt 1
GAS LISTING /tmp/cc5ao3if.s 			page 15


  48:src/kernel.cpp ****                 break;
 393              		.loc 1 48 31 is_stmt 0
 394 019c 97070000 		la	a5,_ZN3PCB7runningE
 394      83B70700 
 395 01a4 83B70700 		ld	a5,0(a5)
 396 01a8 83B78701 		ld	a5,24(a5)
  48:src/kernel.cpp ****                 break;
 397              		.loc 1 48 45
 398 01ac 23B80704 		sd	zero,80(a5)
  49:src/kernel.cpp ****             }
 399              		.loc 1 49 17 is_stmt 1
 400 01b0 6FF01FF8 		j	.L7
 401              	.L17:
  51:src/kernel.cpp ****             {
 402              		.loc 1 51 13
  52:src/kernel.cpp ****                 PCB **handle = (PCB **) PCB::running->registers[11];
 403              		.loc 1 52 13
 404              	.LBB70:
  53:src/kernel.cpp ****                 Scheduler::put(*handle);
 405              		.loc 1 53 17
  53:src/kernel.cpp ****                 Scheduler::put(*handle);
 406              		.loc 1 53 67 is_stmt 0
 407 01b4 83378705 		ld	a5,88(a4)
 408              	.LVL11:
  54:src/kernel.cpp ****                 break;
 409              		.loc 1 54 17 is_stmt 1
  54:src/kernel.cpp ****                 break;
 410              		.loc 1 54 31 is_stmt 0
 411 01b8 03B50700 		ld	a0,0(a5)
 412 01bc 97000000 		call	_ZN9Scheduler3putEP3PCB@plt
 412      E7800000 
 413              	.LVL12:
  55:src/kernel.cpp ****             }
 414              		.loc 1 55 17 is_stmt 1
 415 01c4 6FF0DFF6 		j	.L7
 416              	.L20:
 417              	.LBE70:
  57:src/kernel.cpp ****             {
 418              		.loc 1 57 13
  58:src/kernel.cpp ****                 // argumenti
 419              		.loc 1 58 13
 420              	.LBB71:
  60:src/kernel.cpp ****                 void *arg = (void*)PCB::running->registers[13];
 421              		.loc 1 60 17
 422              	.LVL13:
  61:src/kernel.cpp **** 
 423              		.loc 1 61 17
  63:src/kernel.cpp ****                 *handle = PCB::createProccess(main, arg);
 424              		.loc 1 63 17
  63:src/kernel.cpp ****                 *handle = PCB::createProccess(main, arg);
 425              		.loc 1 63 65 is_stmt 0
 426 01c8 83348705 		ld	s1,88(a4)
 427              	.LVL14:
  64:src/kernel.cpp **** 
 428              		.loc 1 64 17 is_stmt 1
  64:src/kernel.cpp **** 
 429              		.loc 1 64 46 is_stmt 0
GAS LISTING /tmp/cc5ao3if.s 			page 16


 430 01cc 83358706 		ld	a1,104(a4)
 431 01d0 03350706 		ld	a0,96(a4)
 432 01d4 97000000 		call	_ZN3PCB14createProccessEPFvvEPv@plt
 432      E7800000 
 433              	.LVL15:
  64:src/kernel.cpp **** 
 434              		.loc 1 64 25
 435 01dc 23B0A400 		sd	a0,0(s1)
  67:src/kernel.cpp **** 
 436              		.loc 1 67 17 is_stmt 1
  67:src/kernel.cpp **** 
 437              		.loc 1 67 31 is_stmt 0
 438 01e0 97070000 		la	a5,_ZN3PCB7runningE
 438      83B70700 
 439 01e8 83B70700 		ld	a5,0(a5)
 440 01ec 03B78701 		ld	a4,24(a5)
  67:src/kernel.cpp **** 
 441              		.loc 1 67 45
 442 01f0 23389704 		sd	s1,80(a4)
  69:src/kernel.cpp ****                 // dodeljujemo alociran stek procesu
 443              		.loc 1 69 17 is_stmt 1
  69:src/kernel.cpp ****                 // dodeljujemo alociran stek procesu
 444              		.loc 1 69 20 is_stmt 0
 445 01f4 03B70400 		ld	a4,0(s1)
  69:src/kernel.cpp ****                 // dodeljujemo alociran stek procesu
 446              		.loc 1 69 17
 447 01f8 E30C07F2 		beqz	a4,.L7
  71:src/kernel.cpp ****                 (*handle)->stack = stack;
 448              		.loc 1 71 17 is_stmt 1
  71:src/kernel.cpp ****                 (*handle)->stack = stack;
 449              		.loc 1 71 56 is_stmt 0
 450 01fc 83B78701 		ld	a5,24(a5)
  71:src/kernel.cpp ****                 (*handle)->stack = stack;
 451              		.loc 1 71 68
 452 0200 83B70707 		ld	a5,112(a5)
 453              	.LVL16:
  72:src/kernel.cpp ****                 (*handle)->registers[2] = (size_t)&stack[DEFAULT_STACK_SIZE]; // sp(x2)
 454              		.loc 1 72 17 is_stmt 1
  72:src/kernel.cpp ****                 (*handle)->registers[2] = (size_t)&stack[DEFAULT_STACK_SIZE]; // sp(x2)
 455              		.loc 1 72 34 is_stmt 0
 456 0204 2334F700 		sd	a5,8(a4)
  73:src/kernel.cpp **** 
 457              		.loc 1 73 17 is_stmt 1
  73:src/kernel.cpp **** 
 458              		.loc 1 73 51 is_stmt 0
 459 0208 37870000 		li	a4,32768
 460 020c B387E700 		add	a5,a5,a4
 461              	.LVL17:
  73:src/kernel.cpp **** 
 462              		.loc 1 73 18
 463 0210 03B70400 		ld	a4,0(s1)
  73:src/kernel.cpp **** 
 464              		.loc 1 73 28
 465 0214 03378701 		ld	a4,24(a4)
  73:src/kernel.cpp **** 
 466              		.loc 1 73 41
 467 0218 2338F700 		sd	a5,16(a4)
GAS LISTING /tmp/cc5ao3if.s 			page 17


  75:src/kernel.cpp ****             }
 468              		.loc 1 75 17 is_stmt 1
 469 021c 6FF05FF1 		j	.L7
 470              	.LVL18:
 471              	.L16:
 472              	.LBE71:
  77:src/kernel.cpp ****             {
 473              		.loc 1 77 13
  78:src/kernel.cpp ****                 SCB **handle = (SCB**) PCB::running->registers[11];
 474              		.loc 1 78 13
 475              	.LBB72:
  79:src/kernel.cpp ****                 size_t init = (int) PCB::running->registers[12];
 476              		.loc 1 79 17
  79:src/kernel.cpp ****                 size_t init = (int) PCB::running->registers[12];
 477              		.loc 1 79 66 is_stmt 0
 478 0220 83348705 		ld	s1,88(a4)
 479              	.LVL19:
  80:src/kernel.cpp **** 
 480              		.loc 1 80 17 is_stmt 1
  80:src/kernel.cpp **** 
 481              		.loc 1 80 31 is_stmt 0
 482 0224 03290706 		lw	s2,96(a4)
 483              	.LVL20:
  82:src/kernel.cpp **** 
 484              		.loc 1 82 17 is_stmt 1
 485              	.LBB73:
 486              	.LBB74:
 487              		.file 4 "src/../h/SCB.h"
   1:src/../h/SCB.h **** #ifndef PROJECT_BASE_SCB_H
   2:src/../h/SCB.h **** #define PROJECT_BASE_SCB_H
   3:src/../h/SCB.h **** 
   4:src/../h/SCB.h **** #include "PCB.h"
   5:src/../h/SCB.h **** #include "Scheduler.h"
   6:src/../h/SCB.h **** 
   7:src/../h/SCB.h **** class SCB { // Semaphore Control Block
   8:src/../h/SCB.h **** public:
   9:src/../h/SCB.h ****     int getSemValue() const {
  10:src/../h/SCB.h ****         return semValue;
  11:src/../h/SCB.h ****     }
  12:src/../h/SCB.h **** 
  13:src/../h/SCB.h ****     // smanjuje vrednost semValue i ako ona padne manje od 0, blokira tekuci proces ako on treba da
  14:src/../h/SCB.h ****     // vraca 0 ako se nit uspesno probudila, -2 ako se probudila kad je semafor obrisan
  15:src/../h/SCB.h ****     int wait();
  16:src/../h/SCB.h **** 
  17:src/../h/SCB.h ****     // povecava vrednost semValue i ako je ona posle povecanja <= 0, odblokira proces ako treba da 
  18:src/../h/SCB.h ****     void signal();
  19:src/../h/SCB.h **** 
  20:src/../h/SCB.h ****     void prioritySignal();
  21:src/../h/SCB.h **** 
  22:src/../h/SCB.h ****     void* operator new(size_t size);
  23:src/../h/SCB.h ****     void operator delete(void* memSegment);
  24:src/../h/SCB.h **** 
  25:src/../h/SCB.h ****     static SCB* createSemaphore(int semValue = 1) {
  26:src/../h/SCB.h ****         return new SCB(semValue);
 488              		.loc 4 26 9
 489              		.loc 4 26 32 is_stmt 0
 490 0228 13058001 		li	a0,24
GAS LISTING /tmp/cc5ao3if.s 			page 18


 491 022c 97000000 		call	_ZN3SCBnwEm@plt
 491      E7800000 
 492              	.LVL21:
 493              	.LBB75:
 494              	.LBB76:
  27:src/../h/SCB.h ****     }
  28:src/../h/SCB.h **** 
  29:src/../h/SCB.h ****     // Pre zatvaranja svim procesima koji su cekali na semaforu signalizira da je semafor obrisan i
  30:src/../h/SCB.h ****     void signalClosing();
  31:src/../h/SCB.h **** private:
  32:src/../h/SCB.h ****     SCB(int semValue_ = 1) {
 495              		.loc 4 32 28
 496 0234 23300500 		sd	zero,0(a0)
 497 0238 23340500 		sd	zero,8(a0)
  33:src/../h/SCB.h ****         semValue = semValue_;
 498              		.loc 4 33 9 is_stmt 1
 499              		.loc 4 33 18 is_stmt 0
 500 023c 23282501 		sw	s2,16(a0)
 501              	.LVL22:
 502              	.LBE76:
 503              	.LBE75:
 504              	.LBE74:
 505              	.LBE73:
  82:src/kernel.cpp **** 
 506              		.loc 1 82 27
 507 0240 23B0A400 		sd	a0,0(s1)
  84:src/kernel.cpp ****                 break;
 508              		.loc 1 84 17 is_stmt 1
  84:src/kernel.cpp ****                 break;
 509              		.loc 1 84 31 is_stmt 0
 510 0244 97070000 		la	a5,_ZN3PCB7runningE
 510      83B70700 
 511 024c 83B70700 		ld	a5,0(a5)
 512 0250 83B78701 		ld	a5,24(a5)
  84:src/kernel.cpp ****                 break;
 513              		.loc 1 84 45
 514 0254 23B89704 		sd	s1,80(a5)
  85:src/kernel.cpp ****             }
 515              		.loc 1 85 17 is_stmt 1
 516 0258 6FF09FED 		j	.L7
 517              	.LVL23:
 518              	.L14:
 519              	.LBE72:
  87:src/kernel.cpp ****             {
 520              		.loc 1 87 13
  88:src/kernel.cpp ****                 SCB* sem = (SCB*) PCB::running->registers[11];
 521              		.loc 1 88 13
 522              	.LBB77:
  89:src/kernel.cpp **** 
 523              		.loc 1 89 17
  91:src/kernel.cpp ****                 break;
 524              		.loc 1 91 17
  91:src/kernel.cpp ****                 break;
 525              		.loc 1 91 56 is_stmt 0
 526 025c 03358705 		ld	a0,88(a4)
 527 0260 97000000 		call	_ZN3SCB4waitEv@plt
 527      E7800000 
GAS LISTING /tmp/cc5ao3if.s 			page 19


 528              	.LVL24:
  91:src/kernel.cpp ****                 break;
 529              		.loc 1 91 31
 530 0268 97070000 		la	a5,_ZN3PCB7runningE
 530      83B70700 
 531 0270 83B70700 		ld	a5,0(a5)
 532 0274 83B78701 		ld	a5,24(a5)
  91:src/kernel.cpp ****                 break;
 533              		.loc 1 91 45
 534 0278 23B8A704 		sd	a0,80(a5)
  92:src/kernel.cpp ****             }
 535              		.loc 1 92 17 is_stmt 1
 536 027c 6FF05FEB 		j	.L7
 537              	.L13:
 538              	.LBE77:
  94:src/kernel.cpp ****             {
 539              		.loc 1 94 13
  95:src/kernel.cpp ****                 SCB* sem = (SCB*) PCB::running->registers[11];
 540              		.loc 1 95 13
 541              	.LBB78:
  96:src/kernel.cpp **** 
 542              		.loc 1 96 17
 543              	.LVL25:
  98:src/kernel.cpp ****                 break;
 544              		.loc 1 98 17
  98:src/kernel.cpp ****                 break;
 545              		.loc 1 98 28 is_stmt 0
 546 0280 03358705 		ld	a0,88(a4)
 547 0284 97000000 		call	_ZN3SCB6signalEv@plt
 547      E7800000 
 548              	.LVL26:
  99:src/kernel.cpp ****             }
 549              		.loc 1 99 17 is_stmt 1
 550 028c 6FF05FEA 		j	.L7
 551              	.L15:
 552              	.LBE78:
 101:src/kernel.cpp ****             {
 553              		.loc 1 101 13
 102:src/kernel.cpp ****                 SCB* sem = (SCB*) PCB::running->registers[11];
 554              		.loc 1 102 13
 555              	.LBB79:
 103:src/kernel.cpp **** 
 556              		.loc 1 103 17
 103:src/kernel.cpp **** 
 557              		.loc 1 103 61 is_stmt 0
 558 0290 83348705 		ld	s1,88(a4)
 559              	.LVL27:
 105:src/kernel.cpp ****                 delete sem; // destruktor ce signalizirati svim procesima da je obrisan
 560              		.loc 1 105 17 is_stmt 1
 105:src/kernel.cpp ****                 delete sem; // destruktor ce signalizirati svim procesima da je obrisan
 561              		.loc 1 105 35 is_stmt 0
 562 0294 13850400 		mv	a0,s1
 563 0298 97000000 		call	_ZN3SCB13signalClosingEv@plt
 563      E7800000 
 564              	.LVL28:
 106:src/kernel.cpp **** 
 565              		.loc 1 106 17 is_stmt 1
GAS LISTING /tmp/cc5ao3if.s 			page 20


 106:src/kernel.cpp **** 
 566              		.loc 1 106 27 is_stmt 0
 567 02a0 E38804E8 		beqz	s1,.L7
 106:src/kernel.cpp **** 
 568              		.loc 1 106 24 discriminator 1
 569 02a4 13850400 		mv	a0,s1
 570 02a8 97000000 		call	_ZN3SCBdlEPv@plt
 570      E7800000 
 571              	.LVL29:
 572 02b0 6FF01FE8 		j	.L7
 573              	.LVL30:
 574              	.L12:
 575              	.LBE79:
 110:src/kernel.cpp ****             {
 576              		.loc 1 110 13 is_stmt 1
 111:src/kernel.cpp ****                 size_t time = (size_t)PCB::running->registers[11];
 577              		.loc 1 111 13
 578              	.LBB80:
 112:src/kernel.cpp ****                 PCB::running->timeSleeping = time;
 579              		.loc 1 112 17
 112:src/kernel.cpp ****                 PCB::running->timeSleeping = time;
 580              		.loc 1 112 24 is_stmt 0
 581 02b4 83378705 		ld	a5,88(a4)
 582              	.LVL31:
 113:src/kernel.cpp ****                 SleepingProcesses::putToSleep(PCB::running);
 583              		.loc 1 113 17 is_stmt 1
 113:src/kernel.cpp ****                 SleepingProcesses::putToSleep(PCB::running);
 584              		.loc 1 113 44 is_stmt 0
 585 02b8 2338F502 		sd	a5,48(a0)
 114:src/kernel.cpp ****                 break;
 586              		.loc 1 114 17 is_stmt 1
 114:src/kernel.cpp ****                 break;
 587              		.loc 1 114 46 is_stmt 0
 588 02bc 97000000 		call	_ZN17SleepingProcesses10putToSleepEP3PCB@plt
 588      E7800000 
 589              	.LVL32:
 115:src/kernel.cpp ****             }
 590              		.loc 1 115 17 is_stmt 1
 591 02c4 6FF0DFE6 		j	.L7
 592              	.L10:
 593              	.LBE80:
 117:src/kernel.cpp ****             {
 594              		.loc 1 117 13
 118:src/kernel.cpp ****                 char character = PCB::running->registers[11];
 595              		.loc 1 118 13
 596              	.LBB81:
 119:src/kernel.cpp ****                 CCB::outputBuffer.pushBack(character);
 597              		.loc 1 119 17
 598              	.LVL33:
 120:src/kernel.cpp ****                 CCB::semOutput->signal();
 599              		.loc 1 120 17
 120:src/kernel.cpp ****                 CCB::semOutput->signal();
 600              		.loc 1 120 43 is_stmt 0
 601 02c8 83458705 		lbu	a1,88(a4)
 602 02cc 17050000 		la	a0,_ZN3CCB12outputBufferE
 602      03350500 
 603 02d4 97000000 		call	_ZN8IOBuffer8pushBackEc@plt
GAS LISTING /tmp/cc5ao3if.s 			page 21


 603      E7800000 
 604              	.LVL34:
 121:src/kernel.cpp ****                 break;
 605              		.loc 1 121 17 is_stmt 1
 121:src/kernel.cpp ****                 break;
 606              		.loc 1 121 39 is_stmt 0
 607 02dc 97070000 		la	a5,_ZN3CCB9semOutputE
 607      83B70700 
 608 02e4 03B50700 		ld	a0,0(a5)
 609 02e8 97000000 		call	_ZN3SCB6signalEv@plt
 609      E7800000 
 610              	.LVL35:
 122:src/kernel.cpp ****             }
 611              		.loc 1 122 17 is_stmt 1
 612 02f0 6FF01FE4 		j	.L7
 613              	.L11:
 614              	.LBE81:
 124:src/kernel.cpp ****             {
 615              		.loc 1 124 13
 125:src/kernel.cpp ****                 CCB::semInput->signal();
 616              		.loc 1 125 13
 126:src/kernel.cpp ****                 while(CCB::inputBuffer.peekFront() == 0) {
 617              		.loc 1 126 17
 126:src/kernel.cpp ****                 while(CCB::inputBuffer.peekFront() == 0) {
 618              		.loc 1 126 38 is_stmt 0
 619 02f4 97070000 		la	a5,_ZN3CCB8semInputE
 619      83B70700 
 620 02fc 03B50700 		ld	a0,0(a5)
 621 0300 97000000 		call	_ZN3SCB6signalEv@plt
 621      E7800000 
 622              	.LVL36:
 623              	.L24:
 127:src/kernel.cpp ****                     CCB::inputBufferEmpty->wait();
 624              		.loc 1 127 17 is_stmt 1
 127:src/kernel.cpp ****                     CCB::inputBufferEmpty->wait();
 625              		.loc 1 127 52
 127:src/kernel.cpp ****                     CCB::inputBufferEmpty->wait();
 626              		.loc 1 127 49 is_stmt 0
 627 0308 17050000 		la	a0,_ZN3CCB11inputBufferE
 627      03350500 
 628 0310 97000000 		call	_ZN8IOBuffer9peekFrontEv@plt
 628      E7800000 
 629              	.LVL37:
 127:src/kernel.cpp ****                     CCB::inputBufferEmpty->wait();
 630              		.loc 1 127 52
 631 0318 631E0500 		bnez	a0,.L23
 128:src/kernel.cpp ****                 }
 632              		.loc 1 128 21 is_stmt 1
 128:src/kernel.cpp ****                 }
 633              		.loc 1 128 48 is_stmt 0
 634 031c 97070000 		la	a5,_ZN3CCB16inputBufferEmptyE
 634      83B70700 
 635 0324 03B50700 		ld	a0,0(a5)
 636 0328 97000000 		call	_ZN3SCB4waitEv@plt
 636      E7800000 
 637              	.LVL38:
 127:src/kernel.cpp ****                     CCB::inputBufferEmpty->wait();
GAS LISTING /tmp/cc5ao3if.s 			page 22


 638              		.loc 1 127 17
 639 0330 6FF09FFD 		j	.L24
 640              	.L23:
 131:src/kernel.cpp ****                 break;
 641              		.loc 1 131 17 is_stmt 1
 131:src/kernel.cpp ****                 break;
 642              		.loc 1 131 72 is_stmt 0
 643 0334 17050000 		la	a0,_ZN3CCB11inputBufferE
 643      03350500 
 644 033c 97000000 		call	_ZN8IOBuffer8popFrontEv@plt
 644      E7800000 
 645              	.LVL39:
 131:src/kernel.cpp ****                 break;
 646              		.loc 1 131 31
 647 0344 97070000 		la	a5,_ZN3PCB7runningE
 647      83B70700 
 648 034c 83B70700 		ld	a5,0(a5)
 649 0350 83B78701 		ld	a5,24(a5)
 131:src/kernel.cpp ****                 break;
 650              		.loc 1 131 45
 651 0354 23B8A704 		sd	a0,80(a5)
 132:src/kernel.cpp ****             }
 652              		.loc 1 132 17 is_stmt 1
 653 0358 6FF09FDD 		j	.L7
 654              	.L8:
 134:src/kernel.cpp ****             {
 655              		.loc 1 134 13
 135:src/kernel.cpp ****                 sstatus = sstatus & ~Kernel::BitMaskSstatus::SSTATUS_SPP;
 656              		.loc 1 135 13
 136:src/kernel.cpp ****                 break;
 657              		.loc 1 136 17
 136:src/kernel.cpp ****                 break;
 658              		.loc 1 136 27 is_stmt 0
 659 035c 833784FC 		ld	a5,-56(s0)
 136:src/kernel.cpp ****                 break;
 660              		.loc 1 136 35
 661 0360 93F7F7EF 		andi	a5,a5,-257
 136:src/kernel.cpp ****                 break;
 662              		.loc 1 136 25
 663 0364 2334F4FC 		sd	a5,-56(s0)
 137:src/kernel.cpp ****             }
 664              		.loc 1 137 17 is_stmt 1
 665 0368 6FF09FDC 		j	.L7
 666              	.L29:
 667              	.LBE82:
 668              	.LBE87:
 669              	.LBE63:
 670              	.LBB88:
 147:src/kernel.cpp ****         SleepingProcesses::wakeUp(); // budi uspavane procese ako su postojali, ako ne smanjuje per
 671              		.loc 1 147 9
 147:src/kernel.cpp ****         SleepingProcesses::wakeUp(); // budi uspavane procese ako su postojali, ako ne smanjuje per
 672              		.loc 1 147 30 is_stmt 0
 673 036c 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 673      83B40400 
 674 0374 83B70400 		ld	a5,0(s1)
 675 0378 93871700 		addi	a5,a5,1
 676 037c 23B0F400 		sd	a5,0(s1)
GAS LISTING /tmp/cc5ao3if.s 			page 23


 148:src/kernel.cpp ****         if(PCB::timeSliceCounter >= PCB::running->timeSlice) {
 677              		.loc 1 148 9 is_stmt 1
 148:src/kernel.cpp ****         if(PCB::timeSliceCounter >= PCB::running->timeSlice) {
 678              		.loc 1 148 34 is_stmt 0
 679 0380 97000000 		call	_ZN17SleepingProcesses6wakeUpEv@plt
 679      E7800000 
 680              	.LVL40:
 149:src/kernel.cpp ****             PCB::timeSliceCounter = 0;
 681              		.loc 1 149 9 is_stmt 1
 149:src/kernel.cpp ****             PCB::timeSliceCounter = 0;
 682              		.loc 1 149 51 is_stmt 0
 683 0388 97070000 		la	a5,_ZN3PCB7runningE
 683      83B70700 
 684 0390 83B70700 		ld	a5,0(a5)
 685 0394 03B70704 		ld	a4,64(a5)
 149:src/kernel.cpp ****             PCB::timeSliceCounter = 0;
 686              		.loc 1 149 34
 687 0398 83B70400 		ld	a5,0(s1)
 149:src/kernel.cpp ****             PCB::timeSliceCounter = 0;
 688              		.loc 1 149 9
 689 039c 63F8E700 		bleu	a4,a5,.L31
 690              	.L26:
 155:src/kernel.cpp ****     }
 691              		.loc 1 155 9 is_stmt 1
 692              	.LVL41:
 693              	.LBB55:
 694              	.LBB56:
  95:src/../h/kernel.h ****     }
 695              		.loc 2 95 9
  95:src/../h/kernel.h ****     }
 696              		.loc 2 95 68 is_stmt 0
 697 03a0 93072000 		li	a5,2
 698              	#APP
 699              	# 95 "src/../h/kernel.h" 1
  96:src/../h/kernel.h **** 
 700              		csrc sip, a5
 701              	# 0 "" 2
 702              		.loc 2 96 5
 703              	#NO_APP
 704 03a8 6FF01FD0 		j	.L3
 705              	.LVL42:
 706              	.L31:
 707              	.LBE56:
 708              	.LBE55:
 150:src/kernel.cpp ****             PCB::dispatch(); // vrsimo promenu konteksta ako je istekao time slice procesa
 709              		.loc 1 150 13 is_stmt 1
 150:src/kernel.cpp ****             PCB::dispatch(); // vrsimo promenu konteksta ako je istekao time slice procesa
 710              		.loc 1 150 35 is_stmt 0
 711 03ac 23B00400 		sd	zero,0(s1)
 151:src/kernel.cpp ****             Kernel::w_sepc(sepc);
 712              		.loc 1 151 13 is_stmt 1
 151:src/kernel.cpp ****             Kernel::w_sepc(sepc);
 713              		.loc 1 151 26 is_stmt 0
 714 03b0 97000000 		call	_ZN3PCB8dispatchEv@plt
 714      E7800000 
 715              	.LVL43:
 152:src/kernel.cpp ****             Kernel::w_sstatus(sstatus);
GAS LISTING /tmp/cc5ao3if.s 			page 24


 716              		.loc 1 152 13 is_stmt 1
 152:src/kernel.cpp ****             Kernel::w_sstatus(sstatus);
 717              		.loc 1 152 27 is_stmt 0
 718 03b8 833704FD 		ld	a5,-48(s0)
 719              	.LVL44:
 720              	.LBB57:
 721              	.LBB58:
  55:src/../h/kernel.h ****     }
 722              		.loc 2 55 9 is_stmt 1
  55:src/../h/kernel.h ****     }
 723              		.loc 2 55 69 is_stmt 0
 724              	#APP
 725              	# 55 "src/../h/kernel.h" 1
 726              		csrw sepc, a5
 727              	# 0 "" 2
 728              	.LVL45:
 729              	#NO_APP
 730              	.LBE58:
 731              	.LBE57:
 153:src/kernel.cpp ****         }
 732              		.loc 1 153 13 is_stmt 1
 153:src/kernel.cpp ****         }
 733              		.loc 1 153 30 is_stmt 0
 734 03c0 833784FC 		ld	a5,-56(s0)
 735              	.LVL46:
 736              	.LBB59:
 737              	.LBB60:
 136:src/../h/kernel.h ****     }
 738              		.loc 2 136 9 is_stmt 1
 136:src/../h/kernel.h ****     }
 739              		.loc 2 136 81 is_stmt 0
 740              	#APP
 741              	# 136 "src/../h/kernel.h" 1
 742              		csrw sstatus, a5
 743              	# 0 "" 2
 744              		.loc 2 137 5
 745              	#NO_APP
 746 03c8 6FF09FFD 		j	.L26
 747              	.LVL47:
 748              	.L30:
 749              	.LBE60:
 750              	.LBE59:
 751              	.LBB61:
 752              	.LBB54:
 158:src/kernel.cpp ****         if(code == CONSOLE_IRQ) {
 753              		.loc 1 158 9 is_stmt 1
 158:src/kernel.cpp ****         if(code == CONSOLE_IRQ) {
 754              		.loc 1 158 33 is_stmt 0
 755 03cc 97000000 		call	plic_claim@plt
 755      E7800000 
 756              	.LVL48:
 159:src/kernel.cpp ****             if(*(char*)CONSOLE_STATUS & CONSOLE_TX_STATUS_BIT) { // putc
 757              		.loc 1 159 9 is_stmt 1
 170:src/kernel.cpp **** 
 758              		.loc 1 170 9
 170:src/kernel.cpp **** 
 759              		.loc 1 170 22 is_stmt 0
GAS LISTING /tmp/cc5ao3if.s 			page 25


 760 03d4 97000000 		call	plic_complete@plt
 760      E7800000 
 761              	.LVL49:
 762              	.LBE54:
 763 03dc 6FF0DFCC 		j	.L3
 764              	.LBE61:
 765              	.LBE88:
 766              	.LBE91:
 767              		.cfi_endproc
 768              	.LFE44:
 770              	.Letext0:
 771              		.file 5 "src/../h/hw.h"
 772              		.file 6 "src/../h/PCB.h"
 773              		.file 7 "src/../h/Scheduler.h"
 774              		.file 8 "src/../h/SleepingProcesses.h"
 775              		.file 9 "src/../h/CCB.h"
 776              		.file 10 "src/../h/syscall_c.h"
GAS LISTING /tmp/cc5ao3if.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 kernel.cpp
     /tmp/cc5ao3if.s:9      .text:0000000000000000 _ZN6Kernel10popSppSpieEv
     /tmp/cc5ao3if.s:13     .text:0000000000000000 .L0 
     /tmp/cc5ao3if.s:14     .text:0000000000000000 .L0 
     /tmp/cc5ao3if.s:15     .text:0000000000000004 .L0 
     /tmp/cc5ao3if.s:17     .text:0000000000000008 .L0 
     /tmp/cc5ao3if.s:19     .text:000000000000000c .L0 
     /tmp/cc5ao3if.s:21     .text:000000000000000c .L0 
      src/kernel.cpp:11     .text:000000000000000c .L0 
     /tmp/cc5ao3if.s:27     .text:0000000000000010 .L0 
      src/kernel.cpp:12     .text:0000000000000010 .L0 
     /tmp/cc5ao3if.s:33     .text:0000000000000014 .L0 
     /tmp/cc5ao3if.s:34     .text:0000000000000018 .L0 
     /tmp/cc5ao3if.s:35     .text:0000000000000018 .L0 
     /tmp/cc5ao3if.s:37     .text:000000000000001c .L0 
     /tmp/cc5ao3if.s:39     .text:0000000000000020 .L0 
     /tmp/cc5ao3if.s:45     .text:0000000000000020 interruptHandler
     /tmp/cc5ao3if.s:48     .text:0000000000000020 .L0 
     /tmp/cc5ao3if.s:49     .text:0000000000000020 .L0 
     /tmp/cc5ao3if.s:50     .text:0000000000000024 .L0 
     /tmp/cc5ao3if.s:55     .text:0000000000000034 .L0 
     /tmp/cc5ao3if.s:56     .text:0000000000000034 .L0 
     /tmp/cc5ao3if.s:57     .text:0000000000000034 .L0 
     /tmp/cc5ao3if.s:58     .text:0000000000000034 .L0 
     /tmp/cc5ao3if.s:60     .text:0000000000000038 .L0 
     /tmp/cc5ao3if.s:65     .text:0000000000000038 .L0 
     /tmp/cc5ao3if.s:66     .text:0000000000000038 .L0 
     /tmp/cc5ao3if.s:67     .text:0000000000000038 .L0 
   src/../h/kernel.h:37     .text:0000000000000038 .L0 
     /tmp/cc5ao3if.s:75     .text:0000000000000040 .L0 
     /tmp/cc5ao3if.s:76     .text:0000000000000040 .L0 
     /tmp/cc5ao3if.s:80     .text:0000000000000044 .L0 
     /tmp/cc5ao3if.s:84     .text:0000000000000048 .L0 
     /tmp/cc5ao3if.s:85     .text:0000000000000048 .L0 
     /tmp/cc5ao3if.s:86     .text:0000000000000048 .L0 
   src/../h/kernel.h:49     .text:0000000000000048 .L0 
     /tmp/cc5ao3if.s:94     .text:0000000000000050 .L0 
     /tmp/cc5ao3if.s:95     .text:0000000000000050 .L0 
     /tmp/cc5ao3if.s:99     .text:0000000000000054 .L0 
     /tmp/cc5ao3if.s:103    .text:0000000000000058 .L0 
     /tmp/cc5ao3if.s:104    .text:0000000000000058 .L0 
     /tmp/cc5ao3if.s:105    .text:0000000000000058 .L0 
   src/../h/kernel.h:130    .text:0000000000000058 .L0 
     /tmp/cc5ao3if.s:113    .text:0000000000000060 .L0 
     /tmp/cc5ao3if.s:114    .text:0000000000000060 .L0 
     /tmp/cc5ao3if.s:118    .text:0000000000000064 .L0 
     /tmp/cc5ao3if.s:121    .text:0000000000000068 .L0 
     /tmp/cc5ao3if.s:122    .text:0000000000000068 .L0 
     /tmp/cc5ao3if.s:124    .text:000000000000006c .L0 
     /tmp/cc5ao3if.s:127    .text:0000000000000074 .L0 
     /tmp/cc5ao3if.s:129    .text:0000000000000078 .L0 
     /tmp/cc5ao3if.s:135    .text:0000000000000080 .L0 
     /tmp/cc5ao3if.s:136    .text:0000000000000080 .L0 
     /tmp/cc5ao3if.s:138    .text:0000000000000084 .L0 
     /tmp/cc5ao3if.s:148    .text:0000000000000094 .L0 
     /tmp/cc5ao3if.s:149    .text:0000000000000094 .L0 
GAS LISTING /tmp/cc5ao3if.s 			page 27


     /tmp/cc5ao3if.s:151    .text:0000000000000098 .L0 
     /tmp/cc5ao3if.s:160    .text:00000000000000a8 .L0 
     /tmp/cc5ao3if.s:161    .text:00000000000000ac .L0 
     /tmp/cc5ao3if.s:162    .text:00000000000000ac .L0 
     /tmp/cc5ao3if.s:164    .text:00000000000000b0 .L0 
     /tmp/cc5ao3if.s:165    .text:00000000000000b0 .L0 
     /tmp/cc5ao3if.s:167    .text:00000000000000b4 .L0 
     /tmp/cc5ao3if.s:169    .text:00000000000000b8 .L0 
     /tmp/cc5ao3if.s:171    .text:00000000000000bc .L0 
     /tmp/cc5ao3if.s:174    .text:00000000000000c0 .L0 
     /tmp/cc5ao3if.s:178    .text:00000000000000c0 .L0 
     /tmp/cc5ao3if.s:179    .text:00000000000000c0 .L0 
     /tmp/cc5ao3if.s:183    .text:00000000000000cc .L0 
     /tmp/cc5ao3if.s:184    .text:00000000000000cc .L0 
     /tmp/cc5ao3if.s:188    .text:00000000000000dc .L0 
     /tmp/cc5ao3if.s:192    .text:00000000000000e4 .L0 
     /tmp/cc5ao3if.s:193    .text:00000000000000e4 .L0 
     /tmp/cc5ao3if.s:278    .text:000000000000010c .L0 
     /tmp/cc5ao3if.s:280    .text:000000000000010c .L0 
     /tmp/cc5ao3if.s:281    .text:000000000000010c .L0 
     /tmp/cc5ao3if.s:282    .text:000000000000010c .L0 
     /tmp/cc5ao3if.s:288    .text:0000000000000110 .L0 
     /tmp/cc5ao3if.s:291    .text:0000000000000110 .L0 
     /tmp/cc5ao3if.s:292    .text:0000000000000110 .L0 
     /tmp/cc5ao3if.s:293    .text:0000000000000110 .L0 
     /tmp/cc5ao3if.s:298    .text:000000000000011c .L0 
     /tmp/cc5ao3if.s:302    .text:000000000000012c .L0 
     /tmp/cc5ao3if.s:308    .text:0000000000000130 .L0 
     /tmp/cc5ao3if.s:309    .text:0000000000000130 .L0 
     /tmp/cc5ao3if.s:310    .text:0000000000000130 .L0 
     /tmp/cc5ao3if.s:315    .text:0000000000000134 .L0 
   src/../h/kernel.h:55     .text:0000000000000134 .L0 
     /tmp/cc5ao3if.s:325    .text:0000000000000138 .L0 
     /tmp/cc5ao3if.s:326    .text:0000000000000138 .L0 
     /tmp/cc5ao3if.s:331    .text:000000000000013c .L0 
   src/../h/kernel.h:136    .text:000000000000013c .L0 
     /tmp/cc5ao3if.s:341    .text:0000000000000140 .L0 
     /tmp/cc5ao3if.s:346    .text:0000000000000144 .L0 
     /tmp/cc5ao3if.s:348    .text:0000000000000144 .L0 
     /tmp/cc5ao3if.s:350    .text:0000000000000144 .L0 
     /tmp/cc5ao3if.s:351    .text:0000000000000144 .L0 
     /tmp/cc5ao3if.s:352    .text:0000000000000144 .L0 
     /tmp/cc5ao3if.s:356    .text:0000000000000150 .L0 
     /tmp/cc5ao3if.s:360    .text:0000000000000160 .L0 
     /tmp/cc5ao3if.s:362    .text:0000000000000164 .L0 
     /tmp/cc5ao3if.s:366    .text:0000000000000168 .L0 
     /tmp/cc5ao3if.s:367    .text:0000000000000168 .L0 
     /tmp/cc5ao3if.s:368    .text:0000000000000168 .L0 
     /tmp/cc5ao3if.s:369    .text:0000000000000168 .L0 
     /tmp/cc5ao3if.s:372    .text:0000000000000174 .L0 
     /tmp/cc5ao3if.s:373    .text:0000000000000174 .L0 
     /tmp/cc5ao3if.s:376    .text:000000000000017c .L0 
     /tmp/cc5ao3if.s:379    .text:0000000000000180 .L0 
     /tmp/cc5ao3if.s:380    .text:0000000000000180 .L0 
     /tmp/cc5ao3if.s:381    .text:0000000000000180 .L0 
     /tmp/cc5ao3if.s:382    .text:0000000000000180 .L0 
     /tmp/cc5ao3if.s:385    .text:0000000000000188 .L0 
GAS LISTING /tmp/cc5ao3if.s 			page 28


     /tmp/cc5ao3if.s:386    .text:0000000000000188 .L0 
     /tmp/cc5ao3if.s:389    .text:0000000000000194 .L0 
     /tmp/cc5ao3if.s:390    .text:0000000000000194 .L0 
     /tmp/cc5ao3if.s:393    .text:000000000000019c .L0 
     /tmp/cc5ao3if.s:394    .text:000000000000019c .L0 
     /tmp/cc5ao3if.s:398    .text:00000000000001ac .L0 
     /tmp/cc5ao3if.s:400    .text:00000000000001b0 .L0 
     /tmp/cc5ao3if.s:403    .text:00000000000001b4 .L0 
     /tmp/cc5ao3if.s:405    .text:00000000000001b4 .L0 
     /tmp/cc5ao3if.s:406    .text:00000000000001b4 .L0 
     /tmp/cc5ao3if.s:407    .text:00000000000001b4 .L0 
     /tmp/cc5ao3if.s:410    .text:00000000000001b8 .L0 
     /tmp/cc5ao3if.s:411    .text:00000000000001b8 .L0 
     /tmp/cc5ao3if.s:415    .text:00000000000001c4 .L0 
     /tmp/cc5ao3if.s:419    .text:00000000000001c8 .L0 
     /tmp/cc5ao3if.s:421    .text:00000000000001c8 .L0 
     /tmp/cc5ao3if.s:423    .text:00000000000001c8 .L0 
     /tmp/cc5ao3if.s:424    .text:00000000000001c8 .L0 
     /tmp/cc5ao3if.s:425    .text:00000000000001c8 .L0 
     /tmp/cc5ao3if.s:426    .text:00000000000001c8 .L0 
     /tmp/cc5ao3if.s:429    .text:00000000000001cc .L0 
     /tmp/cc5ao3if.s:430    .text:00000000000001cc .L0 
     /tmp/cc5ao3if.s:435    .text:00000000000001dc .L0 
     /tmp/cc5ao3if.s:437    .text:00000000000001e0 .L0 
     /tmp/cc5ao3if.s:438    .text:00000000000001e0 .L0 
     /tmp/cc5ao3if.s:442    .text:00000000000001f0 .L0 
     /tmp/cc5ao3if.s:444    .text:00000000000001f4 .L0 
     /tmp/cc5ao3if.s:445    .text:00000000000001f4 .L0 
     /tmp/cc5ao3if.s:447    .text:00000000000001f8 .L0 
     /tmp/cc5ao3if.s:449    .text:00000000000001fc .L0 
     /tmp/cc5ao3if.s:450    .text:00000000000001fc .L0 
     /tmp/cc5ao3if.s:452    .text:0000000000000200 .L0 
     /tmp/cc5ao3if.s:455    .text:0000000000000204 .L0 
     /tmp/cc5ao3if.s:456    .text:0000000000000204 .L0 
     /tmp/cc5ao3if.s:458    .text:0000000000000208 .L0 
     /tmp/cc5ao3if.s:459    .text:0000000000000208 .L0 
     /tmp/cc5ao3if.s:463    .text:0000000000000210 .L0 
     /tmp/cc5ao3if.s:465    .text:0000000000000214 .L0 
     /tmp/cc5ao3if.s:467    .text:0000000000000218 .L0 
     /tmp/cc5ao3if.s:469    .text:000000000000021c .L0 
     /tmp/cc5ao3if.s:474    .text:0000000000000220 .L0 
     /tmp/cc5ao3if.s:476    .text:0000000000000220 .L0 
     /tmp/cc5ao3if.s:477    .text:0000000000000220 .L0 
     /tmp/cc5ao3if.s:478    .text:0000000000000220 .L0 
     /tmp/cc5ao3if.s:481    .text:0000000000000224 .L0 
     /tmp/cc5ao3if.s:482    .text:0000000000000224 .L0 
     /tmp/cc5ao3if.s:488    .text:0000000000000228 .L0 
     /tmp/cc5ao3if.s:489    .text:0000000000000228 .L0 
     /tmp/cc5ao3if.s:490    .text:0000000000000228 .L0 
     /tmp/cc5ao3if.s:496    .text:0000000000000234 .L0 
     /tmp/cc5ao3if.s:499    .text:000000000000023c .L0 
     /tmp/cc5ao3if.s:500    .text:000000000000023c .L0 
     /tmp/cc5ao3if.s:507    .text:0000000000000240 .L0 
     /tmp/cc5ao3if.s:509    .text:0000000000000244 .L0 
     /tmp/cc5ao3if.s:510    .text:0000000000000244 .L0 
     /tmp/cc5ao3if.s:514    .text:0000000000000254 .L0 
     /tmp/cc5ao3if.s:516    .text:0000000000000258 .L0 
GAS LISTING /tmp/cc5ao3if.s 			page 29


     /tmp/cc5ao3if.s:521    .text:000000000000025c .L0 
     /tmp/cc5ao3if.s:523    .text:000000000000025c .L0 
     /tmp/cc5ao3if.s:524    .text:000000000000025c .L0 
     /tmp/cc5ao3if.s:525    .text:000000000000025c .L0 
     /tmp/cc5ao3if.s:526    .text:000000000000025c .L0 
     /tmp/cc5ao3if.s:530    .text:0000000000000268 .L0 
     /tmp/cc5ao3if.s:534    .text:0000000000000278 .L0 
     /tmp/cc5ao3if.s:536    .text:000000000000027c .L0 
     /tmp/cc5ao3if.s:540    .text:0000000000000280 .L0 
     /tmp/cc5ao3if.s:542    .text:0000000000000280 .L0 
     /tmp/cc5ao3if.s:544    .text:0000000000000280 .L0 
     /tmp/cc5ao3if.s:545    .text:0000000000000280 .L0 
     /tmp/cc5ao3if.s:546    .text:0000000000000280 .L0 
     /tmp/cc5ao3if.s:550    .text:000000000000028c .L0 
     /tmp/cc5ao3if.s:554    .text:0000000000000290 .L0 
     /tmp/cc5ao3if.s:556    .text:0000000000000290 .L0 
     /tmp/cc5ao3if.s:557    .text:0000000000000290 .L0 
     /tmp/cc5ao3if.s:558    .text:0000000000000290 .L0 
     /tmp/cc5ao3if.s:561    .text:0000000000000294 .L0 
     /tmp/cc5ao3if.s:562    .text:0000000000000294 .L0 
     /tmp/cc5ao3if.s:566    .text:00000000000002a0 .L0 
     /tmp/cc5ao3if.s:567    .text:00000000000002a0 .L0 
     /tmp/cc5ao3if.s:569    .text:00000000000002a4 .L0 
     /tmp/cc5ao3if.s:577    .text:00000000000002b4 .L0 
     /tmp/cc5ao3if.s:579    .text:00000000000002b4 .L0 
     /tmp/cc5ao3if.s:580    .text:00000000000002b4 .L0 
     /tmp/cc5ao3if.s:581    .text:00000000000002b4 .L0 
     /tmp/cc5ao3if.s:584    .text:00000000000002b8 .L0 
     /tmp/cc5ao3if.s:585    .text:00000000000002b8 .L0 
     /tmp/cc5ao3if.s:587    .text:00000000000002bc .L0 
     /tmp/cc5ao3if.s:588    .text:00000000000002bc .L0 
     /tmp/cc5ao3if.s:591    .text:00000000000002c4 .L0 
     /tmp/cc5ao3if.s:595    .text:00000000000002c8 .L0 
     /tmp/cc5ao3if.s:597    .text:00000000000002c8 .L0 
     /tmp/cc5ao3if.s:599    .text:00000000000002c8 .L0 
     /tmp/cc5ao3if.s:600    .text:00000000000002c8 .L0 
     /tmp/cc5ao3if.s:601    .text:00000000000002c8 .L0 
     /tmp/cc5ao3if.s:606    .text:00000000000002dc .L0 
     /tmp/cc5ao3if.s:607    .text:00000000000002dc .L0 
     /tmp/cc5ao3if.s:612    .text:00000000000002f0 .L0 
     /tmp/cc5ao3if.s:616    .text:00000000000002f4 .L0 
     /tmp/cc5ao3if.s:617    .text:00000000000002f4 .L0 
     /tmp/cc5ao3if.s:618    .text:00000000000002f4 .L0 
     /tmp/cc5ao3if.s:619    .text:00000000000002f4 .L0 
     /tmp/cc5ao3if.s:625    .text:0000000000000308 .L0 
     /tmp/cc5ao3if.s:626    .text:0000000000000308 .L0 
     /tmp/cc5ao3if.s:627    .text:0000000000000308 .L0 
     /tmp/cc5ao3if.s:631    .text:0000000000000318 .L0 
     /tmp/cc5ao3if.s:633    .text:000000000000031c .L0 
     /tmp/cc5ao3if.s:634    .text:000000000000031c .L0 
     /tmp/cc5ao3if.s:639    .text:0000000000000330 .L0 
     /tmp/cc5ao3if.s:642    .text:0000000000000334 .L0 
     /tmp/cc5ao3if.s:643    .text:0000000000000334 .L0 
     /tmp/cc5ao3if.s:647    .text:0000000000000344 .L0 
     /tmp/cc5ao3if.s:651    .text:0000000000000354 .L0 
     /tmp/cc5ao3if.s:653    .text:0000000000000358 .L0 
     /tmp/cc5ao3if.s:656    .text:000000000000035c .L0 
GAS LISTING /tmp/cc5ao3if.s 			page 30


     /tmp/cc5ao3if.s:657    .text:000000000000035c .L0 
     /tmp/cc5ao3if.s:658    .text:000000000000035c .L0 
     /tmp/cc5ao3if.s:659    .text:000000000000035c .L0 
     /tmp/cc5ao3if.s:661    .text:0000000000000360 .L0 
     /tmp/cc5ao3if.s:663    .text:0000000000000364 .L0 
     /tmp/cc5ao3if.s:665    .text:0000000000000368 .L0 
     /tmp/cc5ao3if.s:672    .text:000000000000036c .L0 
     /tmp/cc5ao3if.s:673    .text:000000000000036c .L0 
     /tmp/cc5ao3if.s:678    .text:0000000000000380 .L0 
     /tmp/cc5ao3if.s:679    .text:0000000000000380 .L0 
     /tmp/cc5ao3if.s:682    .text:0000000000000388 .L0 
     /tmp/cc5ao3if.s:683    .text:0000000000000388 .L0 
     /tmp/cc5ao3if.s:687    .text:0000000000000398 .L0 
     /tmp/cc5ao3if.s:689    .text:000000000000039c .L0 
     /tmp/cc5ao3if.s:695    .text:00000000000003a0 .L0 
     /tmp/cc5ao3if.s:696    .text:00000000000003a0 .L0 
     /tmp/cc5ao3if.s:697    .text:00000000000003a0 .L0 
     /tmp/cc5ao3if.s:704    .text:00000000000003a8 .L0 
     /tmp/cc5ao3if.s:710    .text:00000000000003ac .L0 
     /tmp/cc5ao3if.s:711    .text:00000000000003ac .L0 
     /tmp/cc5ao3if.s:713    .text:00000000000003b0 .L0 
     /tmp/cc5ao3if.s:714    .text:00000000000003b0 .L0 
     /tmp/cc5ao3if.s:717    .text:00000000000003b8 .L0 
     /tmp/cc5ao3if.s:718    .text:00000000000003b8 .L0 
     /tmp/cc5ao3if.s:723    .text:00000000000003bc .L0 
   src/../h/kernel.h:55     .text:00000000000003bc .L0 
     /tmp/cc5ao3if.s:733    .text:00000000000003c0 .L0 
     /tmp/cc5ao3if.s:734    .text:00000000000003c0 .L0 
     /tmp/cc5ao3if.s:739    .text:00000000000003c4 .L0 
   src/../h/kernel.h:136    .text:00000000000003c4 .L0 
     /tmp/cc5ao3if.s:746    .text:00000000000003c8 .L0 
     /tmp/cc5ao3if.s:754    .text:00000000000003cc .L0 
     /tmp/cc5ao3if.s:755    .text:00000000000003cc .L0 
     /tmp/cc5ao3if.s:758    .text:00000000000003d4 .L0 
     /tmp/cc5ao3if.s:759    .text:00000000000003d4 .L0 
     /tmp/cc5ao3if.s:760    .text:00000000000003d4 .L0 
     /tmp/cc5ao3if.s:767    .text:00000000000003e0 .L0 
     /tmp/cc5ao3if.s:777    .text:00000000000003e0 .L0 
     /tmp/cc5ao3if.s:184    .text:00000000000000cc .L0 
     /tmp/cc5ao3if.s:205    .rodata:0000000000000000 .L9
     /tmp/cc5ao3if.s:197    .text:00000000000000f4 .L0 
     /tmp/cc5ao3if.s:298    .text:000000000000011c .L0 
     /tmp/cc5ao3if.s:356    .text:0000000000000150 .L0 
     /tmp/cc5ao3if.s:369    .text:0000000000000168 .L0 
     /tmp/cc5ao3if.s:386    .text:0000000000000188 .L0 
     /tmp/cc5ao3if.s:394    .text:000000000000019c .L0 
     /tmp/cc5ao3if.s:438    .text:00000000000001e0 .L0 
     /tmp/cc5ao3if.s:510    .text:0000000000000244 .L0 
     /tmp/cc5ao3if.s:530    .text:0000000000000268 .L0 
     /tmp/cc5ao3if.s:602    .text:00000000000002cc .L0 
     /tmp/cc5ao3if.s:607    .text:00000000000002dc .L0 
     /tmp/cc5ao3if.s:619    .text:00000000000002f4 .L0 
     /tmp/cc5ao3if.s:627    .text:0000000000000308 .L0 
     /tmp/cc5ao3if.s:634    .text:000000000000031c .L0 
     /tmp/cc5ao3if.s:643    .text:0000000000000334 .L0 
     /tmp/cc5ao3if.s:647    .text:0000000000000344 .L0 
     /tmp/cc5ao3if.s:673    .text:000000000000036c .L0 
GAS LISTING /tmp/cc5ao3if.s 			page 31


     /tmp/cc5ao3if.s:683    .text:0000000000000388 .L0 
     /tmp/cc5ao3if.s:173    .text:00000000000000c0 .L4
     /tmp/cc5ao3if.s:666    .text:000000000000036c .L29
     /tmp/cc5ao3if.s:748    .text:00000000000003cc .L30
     /tmp/cc5ao3if.s:304    .text:0000000000000130 .L7
     /tmp/cc5ao3if.s:155    .text:00000000000000a8 .L3
     /tmp/cc5ao3if.s:640    .text:0000000000000334 .L23
     /tmp/cc5ao3if.s:623    .text:0000000000000308 .L24
     /tmp/cc5ao3if.s:706    .text:00000000000003ac .L31
     /tmp/cc5ao3if.s:690    .text:00000000000003a0 .L26
     /tmp/cc5ao3if.s:275    .text:000000000000010c .L22
     /tmp/cc5ao3if.s:342    .text:0000000000000144 .L21
     /tmp/cc5ao3if.s:416    .text:00000000000001c8 .L20
     /tmp/cc5ao3if.s:377    .text:0000000000000180 .L19
     /tmp/cc5ao3if.s:363    .text:0000000000000168 .L18
     /tmp/cc5ao3if.s:401    .text:00000000000001b4 .L17
     /tmp/cc5ao3if.s:471    .text:0000000000000220 .L16
     /tmp/cc5ao3if.s:551    .text:0000000000000290 .L15
     /tmp/cc5ao3if.s:518    .text:000000000000025c .L14
     /tmp/cc5ao3if.s:537    .text:0000000000000280 .L13
     /tmp/cc5ao3if.s:574    .text:00000000000002b4 .L12
     /tmp/cc5ao3if.s:613    .text:00000000000002f4 .L11
     /tmp/cc5ao3if.s:592    .text:00000000000002c8 .L10
     /tmp/cc5ao3if.s:654    .text:000000000000035c .L8
     /tmp/cc5ao3if.s:2731   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc5ao3if.s:4402   .debug_str:0000000000000a87 .LASF217
     /tmp/cc5ao3if.s:4092   .debug_str:0000000000000113 .LASF218
     /tmp/cc5ao3if.s:4498   .debug_str:0000000000000e01 .LASF219
     /tmp/cc5ao3if.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc5ao3if.s:770    .text:00000000000003e0 .Letext0
     /tmp/cc5ao3if.s:4054   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc5ao3if.s:4178   .debug_str:00000000000003bf .LASF0
     /tmp/cc5ao3if.s:4218   .debug_str:00000000000004e2 .LASF1
     /tmp/cc5ao3if.s:4336   .debug_str:00000000000008ba .LASF2
     /tmp/cc5ao3if.s:4344   .debug_str:0000000000000901 .LASF4
     /tmp/cc5ao3if.s:4194   .debug_str:0000000000000429 .LASF3
     /tmp/cc5ao3if.s:4068   .debug_str:000000000000003e .LASF5
     /tmp/cc5ao3if.s:4300   .debug_str:00000000000007b5 .LASF6
     /tmp/cc5ao3if.s:4288   .debug_str:0000000000000753 .LASF7
     /tmp/cc5ao3if.s:4208   .debug_str:00000000000004b2 .LASF8
     /tmp/cc5ao3if.s:4150   .debug_str:0000000000000306 .LASF9
     /tmp/cc5ao3if.s:4158   .debug_str:0000000000000345 .LASF10
     /tmp/cc5ao3if.s:4098   .debug_str:0000000000000139 .LASF11
     /tmp/cc5ao3if.s:4144   .debug_str:00000000000002cb .LASF12
     /tmp/cc5ao3if.s:4104   .debug_str:0000000000000171 .LASF13
     /tmp/cc5ao3if.s:4096   .debug_str:0000000000000129 .LASF14
     /tmp/cc5ao3if.s:4372   .debug_str:00000000000009bd .LASF15
     /tmp/cc5ao3if.s:4130   .debug_str:000000000000024d .LASF16
     /tmp/cc5ao3if.s:4362   .debug_str:0000000000000986 .LASF17
     /tmp/cc5ao3if.s:4374   .debug_str:00000000000009c9 .LASF70
     /tmp/cc5ao3if.s:4156   .debug_str:0000000000000338 .LASF32
     /tmp/cc5ao3if.s:4254   .debug_str:00000000000005fb .LASF18
     /tmp/cc5ao3if.s:4382   .debug_str:00000000000009f8 .LASF19
     /tmp/cc5ao3if.s:4370   .debug_str:00000000000009af .LASF20
     /tmp/cc5ao3if.s:4246   .debug_str:00000000000005ca .LASF21
     /tmp/cc5ao3if.s:4320   .debug_str:0000000000000835 .LASF22
     /tmp/cc5ao3if.s:4290   .debug_str:0000000000000766 .LASF23
GAS LISTING /tmp/cc5ao3if.s 			page 32


     /tmp/cc5ao3if.s:4324   .debug_str:0000000000000850 .LASF24
     /tmp/cc5ao3if.s:4316   .debug_str:0000000000000820 .LASF25
     /tmp/cc5ao3if.s:4500   .debug_str:0000000000000e17 .LASF26
     /tmp/cc5ao3if.s:4166   .debug_str:0000000000000383 .LASF27
     /tmp/cc5ao3if.s:4330   .debug_str:000000000000089b .LASF28
     /tmp/cc5ao3if.s:4184   .debug_str:00000000000003ea .LASF29
     /tmp/cc5ao3if.s:4250   .debug_str:00000000000005e7 .LASF30
     /tmp/cc5ao3if.s:4202   .debug_str:000000000000048e .LASF31
     /tmp/cc5ao3if.s:4318   .debug_str:000000000000082a .LASF33
     /tmp/cc5ao3if.s:4212   .debug_str:00000000000004cf .LASF34
     /tmp/cc5ao3if.s:4454   .debug_str:0000000000000cbd .LASF35
     /tmp/cc5ao3if.s:4430   .debug_str:0000000000000c15 .LASF36
     /tmp/cc5ao3if.s:4140   .debug_str:00000000000002a8 .LASF37
     /tmp/cc5ao3if.s:4400   .debug_str:0000000000000a7a .LASF38
     /tmp/cc5ao3if.s:4112   .debug_str:00000000000001aa .LASF39
     /tmp/cc5ao3if.s:4466   .debug_str:0000000000000d20 .LASF77
     /tmp/cc5ao3if.s:4190   .debug_str:0000000000000402 .LASF79
     /tmp/cc5ao3if.s:4168   .debug_str:000000000000038e .LASF95
     /tmp/cc5ao3if.s:4284   .debug_str:000000000000072b .LASF97
     /tmp/cc5ao3if.s:4424   .debug_str:0000000000000bf9 .LASF40
     /tmp/cc5ao3if.s:4312   .debug_str:00000000000007f4 .LASF42
     /tmp/cc5ao3if.s:4332   .debug_str:00000000000008a6 .LASF44
     /tmp/cc5ao3if.s:4314   .debug_str:000000000000080a .LASF46
     /tmp/cc5ao3if.s:4310   .debug_str:00000000000007ed .LASF41
     /tmp/cc5ao3if.s:4274   .debug_str:00000000000006c9 .LASF43
     /tmp/cc5ao3if.s:4272   .debug_str:00000000000006c2 .LASF45
     /tmp/cc5ao3if.s:4326   .debug_str:0000000000000859 .LASF47
     /tmp/cc5ao3if.s:4464   .debug_str:0000000000000d18 .LASF48
     /tmp/cc5ao3if.s:4352   .debug_str:0000000000000945 .LASF49
     /tmp/cc5ao3if.s:4264   .debug_str:0000000000000689 .LASF50
     /tmp/cc5ao3if.s:4228   .debug_str:000000000000054d .LASF51
     /tmp/cc5ao3if.s:4236   .debug_str:0000000000000581 .LASF52
     /tmp/cc5ao3if.s:4262   .debug_str:0000000000000674 .LASF53
     /tmp/cc5ao3if.s:4496   .debug_str:0000000000000df9 .LASF54
     /tmp/cc5ao3if.s:4134   .debug_str:0000000000000268 .LASF55
     /tmp/cc5ao3if.s:4368   .debug_str:00000000000009a8 .LASF56
     /tmp/cc5ao3if.s:4298   .debug_str:00000000000007a1 .LASF57
     /tmp/cc5ao3if.s:4348   .debug_str:0000000000000920 .LASF58
     /tmp/cc5ao3if.s:4072   .debug_str:0000000000000050 .LASF59
     /tmp/cc5ao3if.s:4124   .debug_str:0000000000000206 .LASF60
     /tmp/cc5ao3if.s:4338   .debug_str:00000000000008c8 .LASF61
     /tmp/cc5ao3if.s:4186   .debug_str:00000000000003ef .LASF62
     /tmp/cc5ao3if.s:4270   .debug_str:00000000000006af .LASF63
     /tmp/cc5ao3if.s:4070   .debug_str:0000000000000045 .LASF64
     /tmp/cc5ao3if.s:4434   .debug_str:0000000000000c29 .LASF65
     /tmp/cc5ao3if.s:4334   .debug_str:00000000000008af .LASF66
     /tmp/cc5ao3if.s:4268   .debug_str:0000000000000696 .LASF67
     /tmp/cc5ao3if.s:4444   .debug_str:0000000000000c7f .LASF68
     /tmp/cc5ao3if.s:4142   .debug_str:00000000000002b4 .LASF69
     /tmp/cc5ao3if.s:4438   .debug_str:0000000000000c4d .LASF118
     /tmp/cc5ao3if.s:4080   .debug_str:00000000000000a8 .LASF120
     /tmp/cc5ao3if.s:4384   .debug_str:0000000000000a01 .LASF71
     /tmp/cc5ao3if.s:4456   .debug_str:0000000000000cc6 .LASF73
     /tmp/cc5ao3if.s:4122   .debug_str:00000000000001f3 .LASF72
     /tmp/cc5ao3if.s:4414   .debug_str:0000000000000ba3 .LASF74
     /tmp/cc5ao3if.s:4392   .debug_str:0000000000000a28 .LASF75
     /tmp/cc5ao3if.s:4196   .debug_str:000000000000043b .LASF76
GAS LISTING /tmp/cc5ao3if.s 			page 33


     /tmp/cc5ao3if.s:4138   .debug_str:0000000000000298 .LASF78
     /tmp/cc5ao3if.s:4504   .debug_str:0000000000000e27 .LASF80
     /tmp/cc5ao3if.s:4160   .debug_str:0000000000000353 .LASF81
     /tmp/cc5ao3if.s:4224   .debug_str:0000000000000523 .LASF82
     /tmp/cc5ao3if.s:4102   .debug_str:0000000000000163 .LASF83
     /tmp/cc5ao3if.s:4100   .debug_str:0000000000000148 .LASF84
     /tmp/cc5ao3if.s:4388   .debug_str:0000000000000a11 .LASF85
     /tmp/cc5ao3if.s:4480   .debug_str:0000000000000d74 .LASF86
     /tmp/cc5ao3if.s:4428   .debug_str:0000000000000c07 .LASF87
     /tmp/cc5ao3if.s:4404   .debug_str:0000000000000b4b .LASF88
     /tmp/cc5ao3if.s:4116   .debug_str:00000000000001cf .LASF89
     /tmp/cc5ao3if.s:4340   .debug_str:00000000000008db .LASF90
     /tmp/cc5ao3if.s:4086   .debug_str:00000000000000da .LASF91
     /tmp/cc5ao3if.s:4162   .debug_str:0000000000000361 .LASF92
     /tmp/cc5ao3if.s:4490   .debug_str:0000000000000db8 .LASF93
     /tmp/cc5ao3if.s:4146   .debug_str:00000000000002da .LASF94
     /tmp/cc5ao3if.s:4358   .debug_str:0000000000000971 .LASF220
     /tmp/cc5ao3if.s:4222   .debug_str:000000000000051d .LASF96
     /tmp/cc5ao3if.s:4226   .debug_str:000000000000053d .LASF98
     /tmp/cc5ao3if.s:4398   .debug_str:0000000000000a72 .LASF143
     /tmp/cc5ao3if.s:4216   .debug_str:00000000000004dd .LASF99
     /tmp/cc5ao3if.s:4484   .debug_str:0000000000000d9a .LASF100
     /tmp/cc5ao3if.s:4488   .debug_str:0000000000000dab .LASF101
     /tmp/cc5ao3if.s:4170   .debug_str:0000000000000399 .LASF102
     /tmp/cc5ao3if.s:4060   .debug_str:000000000000000c .LASF103
     /tmp/cc5ao3if.s:4188   .debug_str:00000000000003f5 .LASF104
     /tmp/cc5ao3if.s:4172   .debug_str:00000000000003a5 .LASF105
     /tmp/cc5ao3if.s:4084   .debug_str:00000000000000c4 .LASF106
     /tmp/cc5ao3if.s:4108   .debug_str:000000000000018a .LASF159
     /tmp/cc5ao3if.s:4064   .debug_str:0000000000000024 .LASF107
     /tmp/cc5ao3if.s:4356   .debug_str:000000000000096b .LASF108
     /tmp/cc5ao3if.s:4450   .debug_str:0000000000000cac .LASF109
     /tmp/cc5ao3if.s:4210   .debug_str:00000000000004c5 .LASF110
     /tmp/cc5ao3if.s:4486   .debug_str:0000000000000da6 .LASF111
     /tmp/cc5ao3if.s:4360   .debug_str:000000000000097d .LASF112
     /tmp/cc5ao3if.s:4278   .debug_str:0000000000000706 .LASF113
     /tmp/cc5ao3if.s:4234   .debug_str:0000000000000576 .LASF114
     /tmp/cc5ao3if.s:4460   .debug_str:0000000000000ceb .LASF115
     /tmp/cc5ao3if.s:4120   .debug_str:00000000000001e5 .LASF116
     /tmp/cc5ao3if.s:4412   .debug_str:0000000000000b99 .LASF117
     /tmp/cc5ao3if.s:4354   .debug_str:000000000000095a .LASF145
     /tmp/cc5ao3if.s:4118   .debug_str:00000000000001dc .LASF125
     /tmp/cc5ao3if.s:4076   .debug_str:000000000000007c .LASF127
     /tmp/cc5ao3if.s:4180   .debug_str:00000000000003cc .LASF119
     /tmp/cc5ao3if.s:4442   .debug_str:0000000000000c61 .LASF121
     /tmp/cc5ao3if.s:4182   .debug_str:00000000000003db .LASF122
     /tmp/cc5ao3if.s:4350   .debug_str:0000000000000927 .LASF123
     /tmp/cc5ao3if.s:4230   .debug_str:0000000000000562 .LASF124
     /tmp/cc5ao3if.s:4482   .debug_str:0000000000000d8a .LASF126
     /tmp/cc5ao3if.s:4090   .debug_str:00000000000000f8 .LASF128
     /tmp/cc5ao3if.s:4242   .debug_str:00000000000005b9 .LASF129
     /tmp/cc5ao3if.s:4282   .debug_str:000000000000071b .LASF130
     /tmp/cc5ao3if.s:4148   .debug_str:00000000000002fa .LASF190
     /tmp/cc5ao3if.s:4448   .debug_str:0000000000000ca3 .LASF131
     /tmp/cc5ao3if.s:4468   .debug_str:0000000000000d28 .LASF132
     /tmp/cc5ao3if.s:4472   .debug_str:0000000000000d48 .LASF133
     /tmp/cc5ao3if.s:4058   .debug_str:0000000000000005 .LASF134
GAS LISTING /tmp/cc5ao3if.s 			page 34


     /tmp/cc5ao3if.s:4328   .debug_str:000000000000086d .LASF135
     /tmp/cc5ao3if.s:4200   .debug_str:0000000000000460 .LASF221
     /tmp/cc5ao3if.s:4418   .debug_str:0000000000000bc7 .LASF136
     /tmp/cc5ao3if.s:4256   .debug_str:0000000000000605 .LASF137
     /tmp/cc5ao3if.s:4110   .debug_str:000000000000019d .LASF138
     /tmp/cc5ao3if.s:4260   .debug_str:000000000000064f .LASF139
     /tmp/cc5ao3if.s:4280   .debug_str:000000000000070e .LASF140
     /tmp/cc5ao3if.s:4240   .debug_str:0000000000000594 .LASF141
     /tmp/cc5ao3if.s:4078   .debug_str:000000000000008f .LASF142
     /tmp/cc5ao3if.s:4458   .debug_str:0000000000000cdd .LASF144
     /tmp/cc5ao3if.s:4366   .debug_str:00000000000009a3 .LASF146
     /tmp/cc5ao3if.s:4394   .debug_str:0000000000000a38 .LASF147
     /tmp/cc5ao3if.s:4258   .debug_str:0000000000000626 .LASF148
     /tmp/cc5ao3if.s:4252   .debug_str:00000000000005ec .LASF149
     /tmp/cc5ao3if.s:4220   .debug_str:00000000000004f5 .LASF150
     /tmp/cc5ao3if.s:4192   .debug_str:0000000000000417 .LASF151
     /tmp/cc5ao3if.s:4396   .debug_str:0000000000000a48 .LASF152
     /tmp/cc5ao3if.s:4292   .debug_str:0000000000000773 .LASF153
     /tmp/cc5ao3if.s:4128   .debug_str:0000000000000225 .LASF154
     /tmp/cc5ao3if.s:4204   .debug_str:0000000000000497 .LASF155
     /tmp/cc5ao3if.s:4266   .debug_str:0000000000000691 .LASF156
     /tmp/cc5ao3if.s:4476   .debug_str:0000000000000d56 .LASF157
     /tmp/cc5ao3if.s:4306   .debug_str:00000000000007d5 .LASF158
     /tmp/cc5ao3if.s:4074   .debug_str:0000000000000064 .LASF160
     /tmp/cc5ao3if.s:4164   .debug_str:0000000000000378 .LASF161
     /tmp/cc5ao3if.s:4462   .debug_str:0000000000000cf8 .LASF162
     /tmp/cc5ao3if.s:4378   .debug_str:00000000000009dd .LASF222
     /tmp/cc5ao3if.s:4420   .debug_str:0000000000000be8 .LASF163
     /tmp/cc5ao3if.s:4152   .debug_str:0000000000000316 .LASF164
     /tmp/cc5ao3if.s:4408   .debug_str:0000000000000b7c .LASF165
     /tmp/cc5ao3if.s:4286   .debug_str:0000000000000744 .LASF166
     /tmp/cc5ao3if.s:4380   .debug_str:00000000000009f1 .LASF167
     /tmp/cc5ao3if.s:4206   .debug_str:00000000000004a1 .LASF168
     /tmp/cc5ao3if.s:4066   .debug_str:000000000000002f .LASF169
     /tmp/cc5ao3if.s:4446   .debug_str:0000000000000c89 .LASF170
     /tmp/cc5ao3if.s:4390   .debug_str:0000000000000a1c .LASF171
     /tmp/cc5ao3if.s:4376   .debug_str:00000000000009d0 .LASF172
     /tmp/cc5ao3if.s:4294   .debug_str:0000000000000783 .LASF173
     /tmp/cc5ao3if.s:4470   .debug_str:0000000000000d2d .LASF174
     /tmp/cc5ao3if.s:4342   .debug_str:00000000000008f3 .LASF175
     /tmp/cc5ao3if.s:4126   .debug_str:000000000000020c .LASF176
     /tmp/cc5ao3if.s:4308   .debug_str:00000000000007e1 .LASF177
     /tmp/cc5ao3if.s:4176   .debug_str:00000000000003b9 .LASF178
     /tmp/cc5ao3if.s:4302   .debug_str:00000000000007bc .LASF179
     /tmp/cc5ao3if.s:4062   .debug_str:000000000000001c .LASF180
     /tmp/cc5ao3if.s:4492   .debug_str:0000000000000dc7 .LASF181
     /tmp/cc5ao3if.s:4174   .debug_str:00000000000003b0 .LASF182
     /tmp/cc5ao3if.s:4088   .debug_str:00000000000000e6 .LASF183
     /tmp/cc5ao3if.s:4136   .debug_str:000000000000027d .LASF184
     /tmp/cc5ao3if.s:4436   .debug_str:0000000000000c42 .LASF185
     /tmp/cc5ao3if.s:4276   .debug_str:00000000000006dd .LASF186
     /tmp/cc5ao3if.s:4094   .debug_str:0000000000000122 .LASF187
     /tmp/cc5ao3if.s:4494   .debug_str:0000000000000dd9 .LASF188
     /tmp/cc5ao3if.s:4198   .debug_str:0000000000000457 .LASF189
     /tmp/cc5ao3if.s:4426   .debug_str:0000000000000c02 .LASF191
     /tmp/cc5ao3if.s:4214   .debug_str:00000000000004d8 .LASF192
     /tmp/cc5ao3if.s:4106   .debug_str:0000000000000181 .LASF193
GAS LISTING /tmp/cc5ao3if.s 			page 35


     /tmp/cc5ao3if.s:4346   .debug_str:0000000000000908 .LASF194
     /tmp/cc5ao3if.s:4304   .debug_str:00000000000007cc .LASF195
     /tmp/cc5ao3if.s:4406   .debug_str:0000000000000b64 .LASF196
     /tmp/cc5ao3if.s:4440   .debug_str:0000000000000c57 .LASF197
     /tmp/cc5ao3if.s:4114   .debug_str:00000000000001b6 .LASF198
     /tmp/cc5ao3if.s:4474   .debug_str:0000000000000d4d .LASF199
     /tmp/cc5ao3if.s:4410   .debug_str:0000000000000b81 .LASF200
     /tmp/cc5ao3if.s:4386   .debug_str:0000000000000a0c .LASF201
     /tmp/cc5ao3if.s:4248   .debug_str:00000000000005d6 .LASF202
     /tmp/cc5ao3if.s:46     .text:0000000000000020 .LFB44
     /tmp/cc5ao3if.s:768    .text:00000000000003e0 .LFE44
     /tmp/cc5ao3if.s:4364   .debug_str:000000000000099c .LASF203
     /tmp/cc5ao3if.s:4416   .debug_str:0000000000000bc2 .LASF204
     /tmp/cc5ao3if.s:4452   .debug_str:0000000000000cb5 .LASF205
     /tmp/cc5ao3if.s:176    .text:00000000000000c0 .LBB63
     /tmp/cc5ao3if.s:669    .text:000000000000036c .LBE63
     /tmp/cc5ao3if.s:4132   .debug_str:0000000000000263 .LASF206
     /tmp/cc5ao3if.s:279    .text:000000000000010c .LBB66
     /tmp/cc5ao3if.s:305    .text:0000000000000130 .LBE66
     /tmp/cc5ao3if.s:3843   .debug_loc:0000000000000000 .LLST4
     /tmp/cc5ao3if.s:285    .text:0000000000000110 .LBB67
     /tmp/cc5ao3if.s:290    .text:0000000000000110 .LBE67
     /tmp/cc5ao3if.s:296    .text:000000000000011c .LVL2
     /tmp/cc5ao3if.s:347    .text:0000000000000144 .LBB69
     /tmp/cc5ao3if.s:364    .text:0000000000000168 .LBE69
     /tmp/cc5ao3if.s:4322   .debug_str:0000000000000845 .LASF207
     /tmp/cc5ao3if.s:3858   .debug_loc:000000000000003a .LLST5
     /tmp/cc5ao3if.s:354    .text:0000000000000150 .LVL8
     /tmp/cc5ao3if.s:404    .text:00000000000001b4 .LBB70
     /tmp/cc5ao3if.s:417    .text:00000000000001c8 .LBE70
     /tmp/cc5ao3if.s:4502   .debug_str:0000000000000e20 .LASF208
     /tmp/cc5ao3if.s:3866   .debug_loc:000000000000005f .LLST6
     /tmp/cc5ao3if.s:413    .text:00000000000001c4 .LVL12
     /tmp/cc5ao3if.s:420    .text:00000000000001c8 .LBB71
     /tmp/cc5ao3if.s:472    .text:0000000000000220 .LBE71
     /tmp/cc5ao3if.s:3873   .debug_loc:0000000000000082 .LLST7
     /tmp/cc5ao3if.s:3881   .debug_loc:00000000000000a7 .LLST8
     /tmp/cc5ao3if.s:3889   .debug_loc:00000000000000cc .LLST9
     /tmp/cc5ao3if.s:3896   .debug_loc:00000000000000ef .LLST10
     /tmp/cc5ao3if.s:433    .text:00000000000001dc .LVL15
     /tmp/cc5ao3if.s:475    .text:0000000000000220 .LBB72
     /tmp/cc5ao3if.s:519    .text:000000000000025c .LBE72
     /tmp/cc5ao3if.s:3909   .debug_loc:0000000000000129 .LLST11
     /tmp/cc5ao3if.s:4082   .debug_str:00000000000000bf .LASF209
     /tmp/cc5ao3if.s:3916   .debug_loc:000000000000014c .LLST12
     /tmp/cc5ao3if.s:485    .text:0000000000000228 .LBB73
     /tmp/cc5ao3if.s:505    .text:0000000000000240 .LBE73
     /tmp/cc5ao3if.s:3931   .debug_loc:0000000000000177 .LLST13
     /tmp/cc5ao3if.s:493    .text:0000000000000234 .LBB75
     /tmp/cc5ao3if.s:503    .text:0000000000000240 .LBE75
     /tmp/cc5ao3if.s:3938   .debug_loc:000000000000019a .LLST14
     /tmp/cc5ao3if.s:3945   .debug_loc:00000000000001bd .LLST15
     /tmp/cc5ao3if.s:492    .text:0000000000000234 .LVL21
     /tmp/cc5ao3if.s:522    .text:000000000000025c .LBB77
     /tmp/cc5ao3if.s:538    .text:0000000000000280 .LBE77
     /tmp/cc5ao3if.s:3952   .debug_loc:00000000000001e0 .LLST16
     /tmp/cc5ao3if.s:528    .text:0000000000000268 .LVL24
GAS LISTING /tmp/cc5ao3if.s 			page 36


     /tmp/cc5ao3if.s:541    .text:0000000000000280 .LBB78
     /tmp/cc5ao3if.s:552    .text:0000000000000290 .LBE78
     /tmp/cc5ao3if.s:3960   .debug_loc:0000000000000205 .LLST17
     /tmp/cc5ao3if.s:548    .text:000000000000028c .LVL26
     /tmp/cc5ao3if.s:555    .text:0000000000000290 .LBB79
     /tmp/cc5ao3if.s:575    .text:00000000000002b4 .LBE79
     /tmp/cc5ao3if.s:3968   .debug_loc:000000000000022a .LLST18
     /tmp/cc5ao3if.s:564    .text:00000000000002a0 .LVL28
     /tmp/cc5ao3if.s:571    .text:00000000000002b0 .LVL29
     /tmp/cc5ao3if.s:578    .text:00000000000002b4 .LBB80
     /tmp/cc5ao3if.s:593    .text:00000000000002c8 .LBE80
     /tmp/cc5ao3if.s:4422   .debug_str:0000000000000bf4 .LASF210
     /tmp/cc5ao3if.s:3975   .debug_loc:000000000000024d .LLST19
     /tmp/cc5ao3if.s:589    .text:00000000000002c4 .LVL32
     /tmp/cc5ao3if.s:596    .text:00000000000002c8 .LBB81
     /tmp/cc5ao3if.s:614    .text:00000000000002f4 .LBE81
     /tmp/cc5ao3if.s:4154   .debug_str:000000000000032e .LASF211
     /tmp/cc5ao3if.s:3982   .debug_loc:0000000000000270 .LLST20
     /tmp/cc5ao3if.s:604    .text:00000000000002dc .LVL34
     /tmp/cc5ao3if.s:610    .text:00000000000002f0 .LVL35
     /tmp/cc5ao3if.s:312    .text:0000000000000134 .LBB83
     /tmp/cc5ao3if.s:323    .text:0000000000000138 .LBE83
     /tmp/cc5ao3if.s:3990   .debug_loc:0000000000000295 .LLST21
     /tmp/cc5ao3if.s:328    .text:000000000000013c .LBB85
     /tmp/cc5ao3if.s:339    .text:0000000000000140 .LBE85
     /tmp/cc5ao3if.s:3997   .debug_loc:00000000000002b8 .LLST22
     /tmp/cc5ao3if.s:374    .text:000000000000017c .LVL9
     /tmp/cc5ao3if.s:391    .text:000000000000019c .LVL10
     /tmp/cc5ao3if.s:622    .text:0000000000000308 .LVL36
     /tmp/cc5ao3if.s:629    .text:0000000000000318 .LVL37
     /tmp/cc5ao3if.s:637    .text:0000000000000330 .LVL38
     /tmp/cc5ao3if.s:645    .text:0000000000000344 .LVL39
     /tmp/cc5ao3if.s:752    .text:00000000000003cc .LBB54
     /tmp/cc5ao3if.s:762    .text:00000000000003dc .LBE54
     /tmp/cc5ao3if.s:4004   .debug_loc:00000000000002db .LLST0
     /tmp/cc5ao3if.s:756    .text:00000000000003d4 .LVL48
     /tmp/cc5ao3if.s:761    .text:00000000000003dc .LVL49
     /tmp/cc5ao3if.s:62     .text:0000000000000038 .LBB45
     /tmp/cc5ao3if.s:78     .text:0000000000000044 .LBE45
     /tmp/cc5ao3if.s:82     .text:0000000000000048 .LBB47
     /tmp/cc5ao3if.s:97     .text:0000000000000054 .LBE47
     /tmp/cc5ao3if.s:101    .text:0000000000000058 .LBB49
     /tmp/cc5ao3if.s:116    .text:0000000000000064 .LBE49
     /tmp/cc5ao3if.s:693    .text:00000000000003a0 .LBB55
     /tmp/cc5ao3if.s:708    .text:00000000000003ac .LBE55
     /tmp/cc5ao3if.s:4019   .debug_loc:0000000000000306 .LLST1
     /tmp/cc5ao3if.s:720    .text:00000000000003bc .LBB57
     /tmp/cc5ao3if.s:731    .text:00000000000003c0 .LBE57
     /tmp/cc5ao3if.s:4027   .debug_loc:000000000000032a .LLST2
     /tmp/cc5ao3if.s:736    .text:00000000000003c4 .LBB59
     /tmp/cc5ao3if.s:750    .text:00000000000003cc .LBE59
     /tmp/cc5ao3if.s:4034   .debug_loc:000000000000034d .LLST3
     /tmp/cc5ao3if.s:680    .text:0000000000000388 .LVL40
     /tmp/cc5ao3if.s:715    .text:00000000000003b8 .LVL43
     /tmp/cc5ao3if.s:10     .text:0000000000000000 .LFB43
     /tmp/cc5ao3if.s:40     .text:0000000000000020 .LFE43
     /tmp/cc5ao3if.s:4056   .debug_str:0000000000000000 .LASF223
GAS LISTING /tmp/cc5ao3if.s 			page 37


     /tmp/cc5ao3if.s:4232   .debug_str:000000000000056c .LASF212
     /tmp/cc5ao3if.s:4478   .debug_str:0000000000000d68 .LASF224
     /tmp/cc5ao3if.s:4244   .debug_str:00000000000005be .LASF213
     /tmp/cc5ao3if.s:4432   .debug_str:0000000000000c24 .LASF214
     /tmp/cc5ao3if.s:4238   .debug_str:0000000000000589 .LASF215
     /tmp/cc5ao3if.s:4296   .debug_str:0000000000000793 .LASF216
     /tmp/cc5ao3if.s:283    .text:0000000000000110 .LVL0
     /tmp/cc5ao3if.s:294    .text:0000000000000114 .LVL1
     /tmp/cc5ao3if.s:349    .text:0000000000000144 .LVL7
     /tmp/cc5ao3if.s:408    .text:00000000000001b8 .LVL11
     /tmp/cc5ao3if.s:422    .text:00000000000001c8 .LVL13
     /tmp/cc5ao3if.s:427    .text:00000000000001cc .LVL14
     /tmp/cc5ao3if.s:470    .text:0000000000000220 .LVL18
     /tmp/cc5ao3if.s:453    .text:0000000000000204 .LVL16
     /tmp/cc5ao3if.s:461    .text:0000000000000210 .LVL17
     /tmp/cc5ao3if.s:479    .text:0000000000000224 .LVL19
     /tmp/cc5ao3if.s:517    .text:000000000000025c .LVL23
     /tmp/cc5ao3if.s:483    .text:0000000000000228 .LVL20
     /tmp/cc5ao3if.s:501    .text:0000000000000240 .LVL22
     /tmp/cc5ao3if.s:543    .text:0000000000000280 .LVL25
     /tmp/cc5ao3if.s:559    .text:0000000000000294 .LVL27
     /tmp/cc5ao3if.s:573    .text:00000000000002b4 .LVL30
     /tmp/cc5ao3if.s:582    .text:00000000000002b8 .LVL31
     /tmp/cc5ao3if.s:598    .text:00000000000002c8 .LVL33
     /tmp/cc5ao3if.s:311    .text:0000000000000134 .LVL3
     /tmp/cc5ao3if.s:320    .text:0000000000000138 .LVL4
     /tmp/cc5ao3if.s:327    .text:000000000000013c .LVL5
     /tmp/cc5ao3if.s:336    .text:0000000000000140 .LVL6
     /tmp/cc5ao3if.s:692    .text:00000000000003a0 .LVL41
     /tmp/cc5ao3if.s:705    .text:00000000000003ac .LVL42
     /tmp/cc5ao3if.s:719    .text:00000000000003bc .LVL44
     /tmp/cc5ao3if.s:728    .text:00000000000003c0 .LVL45
     /tmp/cc5ao3if.s:735    .text:00000000000003c4 .LVL46
     /tmp/cc5ao3if.s:747    .text:00000000000003cc .LVL47
     /tmp/cc5ao3if.s:778    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN3PCB7runningE
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
_ZN3PCB16timeSliceCounterE
_ZN3PCB8dispatchEv
_ZN9Scheduler3putEP3PCB
_ZN3PCB14createProccessEPFvvEPv
_ZN3SCBnwEm
_ZN3SCB4waitEv
_ZN3SCB6signalEv
_ZN3SCB13signalClosingEv
_ZN3SCBdlEPv
_ZN17SleepingProcesses10putToSleepEP3PCB
_ZN3CCB12outputBufferE
_ZN8IOBuffer8pushBackEc
_ZN3CCB9semOutputE
_ZN3CCB8semInputE
_ZN3CCB11inputBufferE
_ZN8IOBuffer9peekFrontEv
_ZN3CCB16inputBufferEmptyE
GAS LISTING /tmp/cc5ao3if.s 			page 38


_ZN8IOBuffer8popFrontEv
_ZN17SleepingProcesses6wakeUpEv
plic_claim
plic_complete

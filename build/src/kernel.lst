GAS LISTING /tmp/ccv3794N.s 			page 1


   1              		.file	"kernel.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN6Kernel10popSppSpieEv
   9              	_ZN6Kernel10popSppSpieEv:
  10              	.LFB44:
  11              		.file 1 "src/kernel.cpp"
   1:src/kernel.cpp **** #include "../h/kernel.h"
   2:src/kernel.cpp **** #include "../h/PCB.h"
   3:src/kernel.cpp **** #include "../h/MemoryAllocator.h"
   4:src/kernel.cpp **** #include "../h/console.h"
   5:src/kernel.cpp **** #include "../h/Scheduler.h"
   6:src/kernel.cpp **** #include "../h/SCB.h"
   7:src/kernel.cpp **** #include "../h/SleepingProcesses.h"
   8:src/kernel.cpp **** #include "../h/CCB.h"
   9:src/kernel.cpp **** #include "../h/syscall_c.h"
  10:src/kernel.cpp **** void Kernel::popSppSpie() {
  12              		.loc 1 10 27
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  11:src/kernel.cpp ****     asm volatile("csrw sepc, ra"); // da bi se funkcija vratila u wrapper
  20              		.loc 1 11 5
  21              		.loc 1 11 34 is_stmt 0
  22              	#APP
  23              	# 11 "src/kernel.cpp" 1
  12              	    asm volatile("sret");
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 12 5 is_stmt 1
  27              		.loc 1 12 25 is_stmt 0
  28              	# 12 "src/kernel.cpp" 1
  13              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 13 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE44:
  42              		.align	2
  43              		.globl	_Z5kPutcc
  45              	_Z5kPutcc:
  46              	.LFB45:
  14:src/kernel.cpp **** 
GAS LISTING /tmp/ccv3794N.s 			page 2


  15:src/kernel.cpp **** 
  16:src/kernel.cpp **** void kPutc(char c) {
  47              		.loc 1 16 20 is_stmt 1
  48              		.cfi_startproc
  49              	.LVL0:
  50 0020 130101FF 		addi	sp,sp,-16
  51              		.cfi_def_cfa_offset 16
  52 0024 23341100 		sd	ra,8(sp)
  53 0028 23308100 		sd	s0,0(sp)
  54              		.cfi_offset 1, -8
  55              		.cfi_offset 8, -16
  56 002c 13040101 		addi	s0,sp,16
  57              		.cfi_def_cfa 8, 0
  58 0030 93050500 		mv	a1,a0
  17:src/kernel.cpp ****     CCB::outputBuffer.pushBack(c);
  59              		.loc 1 17 5
  60              		.loc 1 17 31 is_stmt 0
  61 0034 17050000 		la	a0,_ZN3CCB12outputBufferE
  61      03350500 
  62              	.LVL1:
  63 003c 97000000 		call	_ZN8IOBuffer8pushBackEc@plt
  63      E7800000 
  64              	.LVL2:
  18:src/kernel.cpp ****     CCB::semOutput->signal();
  65              		.loc 1 18 5 is_stmt 1
  66              		.loc 1 18 27 is_stmt 0
  67 0044 97070000 		la	a5,_ZN3CCB9semOutputE
  67      83B70700 
  68 004c 03B50700 		ld	a0,0(a5)
  69 0050 97000000 		call	_ZN3SCB6signalEv@plt
  69      E7800000 
  70              	.LVL3:
  19:src/kernel.cpp **** }
  71              		.loc 1 19 1
  72 0058 83308100 		ld	ra,8(sp)
  73              		.cfi_restore 1
  74 005c 03340100 		ld	s0,0(sp)
  75              		.cfi_restore 8
  76              		.cfi_def_cfa 2, 16
  77 0060 13010101 		addi	sp,sp,16
  78              		.cfi_def_cfa_offset 0
  79 0064 67800000 		jr	ra
  80              		.cfi_endproc
  81              	.LFE45:
  83              		.align	2
  84              		.globl	interruptHandler
  86              	interruptHandler:
  87              	.LFB46:
  20:src/kernel.cpp **** 
  21:src/kernel.cpp **** extern "C" void interruptHandler() { // extern C da kompajler ne bi menjao ime funkcije
  88              		.loc 1 21 36 is_stmt 1
  89              		.cfi_startproc
  90 0068 130101FA 		addi	sp,sp,-96
  91              		.cfi_def_cfa_offset 96
  92 006c 233C1104 		sd	ra,88(sp)
  93 0070 23388104 		sd	s0,80(sp)
  94 0074 23349104 		sd	s1,72(sp)
GAS LISTING /tmp/ccv3794N.s 			page 3


  95              		.cfi_offset 1, -8
  96              		.cfi_offset 8, -16
  97              		.cfi_offset 9, -24
  98 0078 13040106 		addi	s0,sp,96
  99              		.cfi_def_cfa 8, 0
  22:src/kernel.cpp ****     size_t volatile scause = Kernel::r_scause();
 100              		.loc 1 22 5
 101              	.LBB37:
 102              	.LBB38:
 103              		.file 2 "src/../h/kernel.h"
   1:src/../h/kernel.h **** #ifndef KERNEL_H
   2:src/../h/kernel.h **** #define KERNEL_H
   3:src/../h/kernel.h **** 
   4:src/../h/kernel.h **** #include "hw.h"
   5:src/../h/kernel.h **** 
   6:src/../h/kernel.h **** class Kernel {
   7:src/../h/kernel.h **** public:
   8:src/../h/kernel.h ****     // postavlja code u registar a0
   9:src/../h/kernel.h ****     static size_t setCode(size_t code) {
  10:src/../h/kernel.h ****         return code;
  11:src/../h/kernel.h ****     }
  12:src/../h/kernel.h **** 
  13:src/../h/kernel.h ****     // kodovi po kojima se prepoznaju sistemski pozivi
  14:src/../h/kernel.h ****     enum sysCallCodes {
  15:src/../h/kernel.h ****         mem_alloc = 0x01,
  16:src/../h/kernel.h ****         mem_free = 0x02,
  17:src/../h/kernel.h ****         thread_create = 0x11,
  18:src/../h/kernel.h ****         thread_exit = 0x12,
  19:src/../h/kernel.h ****         thread_dispatch = 0x13,
  20:src/../h/kernel.h ****         thread_start = 0x14,
  21:src/../h/kernel.h ****         sem_open = 0x21,
  22:src/../h/kernel.h ****         sem_close = 0x22,
  23:src/../h/kernel.h ****         sem_wait = 0x23,
  24:src/../h/kernel.h ****         sem_signal = 0x24,
  25:src/../h/kernel.h ****         time_sleep = 0x31,
  26:src/../h/kernel.h ****         getc = 0x41,
  27:src/../h/kernel.h ****         putc = 0x42,
  28:src/../h/kernel.h ****         userMode = 0x43
  29:src/../h/kernel.h ****     };
  30:src/../h/kernel.h **** 
  31:src/../h/kernel.h ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  32:src/../h/kernel.h ****     static void popSppSpie();
  33:src/../h/kernel.h **** 
  34:src/../h/kernel.h ****     // cita registar scause (uzrok nastanka prekida)
  35:src/../h/kernel.h ****     static size_t r_scause() {
  36:src/../h/kernel.h ****         size_t volatile scause;
 104              		.loc 2 36 9
  37:src/../h/kernel.h ****         __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 105              		.loc 2 37 9
 106              		.loc 2 37 76 is_stmt 0
 107              	#APP
 108              	# 37 "src/../h/kernel.h" 1
  38              	        return scause;
 109              		csrr a5, scause
 110              	# 0 "" 2
 111              	#NO_APP
 112 0080 2330F4FC 		sd	a5,-64(s0)
GAS LISTING /tmp/ccv3794N.s 			page 4


 113              		.loc 2 38 9 is_stmt 1
 114              		.loc 2 38 16 is_stmt 0
 115 0084 833704FC 		ld	a5,-64(s0)
 116              	.LBE38:
 117              	.LBE37:
 118              		.loc 1 22 47
 119 0088 233CF4FC 		sd	a5,-40(s0)
  23:src/kernel.cpp ****     size_t volatile sepc = Kernel::r_sepc();
 120              		.loc 1 23 5 is_stmt 1
 121              	.LBB39:
 122              	.LBB40:
  39:src/../h/kernel.h ****     }
  40:src/../h/kernel.h **** 
  41:src/../h/kernel.h ****     // upisuje u registar scause (uzrok nastanka prekida)
  42:src/../h/kernel.h ****     static void w_scause(size_t scause) {
  43:src/../h/kernel.h ****         __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  44:src/../h/kernel.h ****     }
  45:src/../h/kernel.h **** 
  46:src/../h/kernel.h ****     // cita registar sepc
  47:src/../h/kernel.h ****     static size_t r_sepc() {
  48:src/../h/kernel.h ****         size_t volatile sepc;
 123              		.loc 2 48 9
  49:src/../h/kernel.h ****         __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 124              		.loc 2 49 9
 125              		.loc 2 49 68 is_stmt 0
 126              	#APP
 127              	# 49 "src/../h/kernel.h" 1
  50              	        return sepc;
 128              		csrr a5, sepc
 129              	# 0 "" 2
 130              	#NO_APP
 131 0090 233CF4FA 		sd	a5,-72(s0)
 132              		.loc 2 50 9 is_stmt 1
 133              		.loc 2 50 16 is_stmt 0
 134 0094 833784FB 		ld	a5,-72(s0)
 135              	.LBE40:
 136              	.LBE39:
 137              		.loc 1 23 43
 138 0098 2338F4FC 		sd	a5,-48(s0)
  24:src/kernel.cpp ****     size_t volatile sstatus = Kernel::r_sstatus();
 139              		.loc 1 24 5 is_stmt 1
 140              	.LBB41:
 141              	.LBB42:
  51:src/../h/kernel.h ****     }
  52:src/../h/kernel.h **** 
  53:src/../h/kernel.h ****     // upisuje u registar sepc
  54:src/../h/kernel.h ****     static void w_sepc(size_t sepc) {
  55:src/../h/kernel.h ****         __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
  56:src/../h/kernel.h ****     }
  57:src/../h/kernel.h **** 
  58:src/../h/kernel.h ****     // read register stvec
  59:src/../h/kernel.h ****     static size_t r_stvec() {
  60:src/../h/kernel.h ****         size_t volatile stvec;
  61:src/../h/kernel.h ****         __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
  62:src/../h/kernel.h ****         return stvec;
  63:src/../h/kernel.h ****     }
  64:src/../h/kernel.h **** 
GAS LISTING /tmp/ccv3794N.s 			page 5


  65:src/../h/kernel.h ****     // write register stvec
  66:src/../h/kernel.h ****     static void w_stvec(size_t stvec) {
  67:src/../h/kernel.h ****         __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  68:src/../h/kernel.h ****     }
  69:src/../h/kernel.h **** 
  70:src/../h/kernel.h ****     // read register stval
  71:src/../h/kernel.h ****     static size_t r_stval() {
  72:src/../h/kernel.h ****         size_t volatile stval;
  73:src/../h/kernel.h ****         __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
  74:src/../h/kernel.h ****         return stval;
  75:src/../h/kernel.h ****     }
  76:src/../h/kernel.h **** 
  77:src/../h/kernel.h ****     // write register stval
  78:src/../h/kernel.h ****     static void w_stval(size_t stval) {
  79:src/../h/kernel.h ****         __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
  80:src/../h/kernel.h ****     }
  81:src/../h/kernel.h **** 
  82:src/../h/kernel.h ****     enum BitMaskSip
  83:src/../h/kernel.h ****     {
  84:src/../h/kernel.h ****         SIP_SSIE = (1 << 1), // da li su dozvoljeni softverski prekidi
  85:src/../h/kernel.h ****         SIP_SEIE = (1 << 9), // da li su dozvoljeni spoljasnji hardverski prekidi
  86:src/../h/kernel.h ****     };
  87:src/../h/kernel.h **** 
  88:src/../h/kernel.h ****     // postavljanje odredjenih bitova (BitMaskSip) u registar sip
  89:src/../h/kernel.h ****     static void ms_sip(size_t mask) {
  90:src/../h/kernel.h ****         __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
  91:src/../h/kernel.h ****     }
  92:src/../h/kernel.h **** 
  93:src/../h/kernel.h ****     // brisanje odredjenih bitova (BitMaskSip) iz registra sip
  94:src/../h/kernel.h ****     static void mc_sip(size_t mask) {
  95:src/../h/kernel.h ****         __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
  96:src/../h/kernel.h ****     }
  97:src/../h/kernel.h **** 
  98:src/../h/kernel.h ****     // citanje iz registra sip
  99:src/../h/kernel.h ****     static size_t r_sip() {
 100:src/../h/kernel.h ****         size_t volatile sip;
 101:src/../h/kernel.h ****         __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 102:src/../h/kernel.h ****         return sip;
 103:src/../h/kernel.h ****     }
 104:src/../h/kernel.h **** 
 105:src/../h/kernel.h ****     // upis u registar sip
 106:src/../h/kernel.h ****     static void w_sip(size_t sip) {
 107:src/../h/kernel.h ****         __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 108:src/../h/kernel.h ****     }
 109:src/../h/kernel.h **** 
 110:src/../h/kernel.h ****     enum BitMaskSstatus
 111:src/../h/kernel.h ****     {
 112:src/../h/kernel.h ****         SSTATUS_SIE = (1 << 1), // ako je 0 - maskiranje spoljasnjih prekida u sistemskom rezimu
 113:src/../h/kernel.h ****         SSTATUS_SPIE = (1 << 5), // prethodna vrednost sie
 114:src/../h/kernel.h ****         SSTATUS_SPP = (1 << 8), // u kom rezimu se desio prekid
 115:src/../h/kernel.h ****     };
 116:src/../h/kernel.h **** 
 117:src/../h/kernel.h ****     // mask set register sstatus
 118:src/../h/kernel.h ****     static void ms_sstatus(size_t mask) {
 119:src/../h/kernel.h ****         __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 120:src/../h/kernel.h ****     }
 121:src/../h/kernel.h **** 
GAS LISTING /tmp/ccv3794N.s 			page 6


 122:src/../h/kernel.h ****     // mask clear register sstatus
 123:src/../h/kernel.h ****     static void mc_sstatus(size_t mask) {
 124:src/../h/kernel.h ****         __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 125:src/../h/kernel.h ****     }
 126:src/../h/kernel.h **** 
 127:src/../h/kernel.h ****     // read register sstatus
 128:src/../h/kernel.h ****     static size_t r_sstatus() {
 129:src/../h/kernel.h ****         size_t volatile sstatus;
 142              		.loc 2 129 9
 130:src/../h/kernel.h ****         __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 143              		.loc 2 130 9
 144              		.loc 2 130 80 is_stmt 0
 145              	#APP
 146              	# 130 "src/../h/kernel.h" 1
 131              	        return sstatus;
 147              		csrr a5, sstatus
 148              	# 0 "" 2
 149              	#NO_APP
 150 00a0 2338F4FA 		sd	a5,-80(s0)
 151              		.loc 2 131 9 is_stmt 1
 152              		.loc 2 131 16 is_stmt 0
 153 00a4 833704FB 		ld	a5,-80(s0)
 154              	.LBE42:
 155              	.LBE41:
 156              		.loc 1 24 49
 157 00a8 2334F4FC 		sd	a5,-56(s0)
  25:src/kernel.cpp ****     if(scause == 9 || scause == 8) { // sistemski poziv iz korisnickog(8) ili sistemskog(9) rezima
 158              		.loc 1 25 5 is_stmt 1
 159              	.LBB43:
 160              		.loc 1 25 15 is_stmt 0
 161 00ac 033784FD 		ld	a4,-40(s0)
 162              		.loc 1 25 20
 163 00b0 93079000 		li	a5,9
 164 00b4 6304F704 		beq	a4,a5,.L6
 165              		.loc 1 25 30 discriminator 2
 166 00b8 033784FD 		ld	a4,-40(s0)
 167              		.loc 1 25 20 discriminator 2
 168 00bc 93078000 		li	a5,8
 169 00c0 630EF702 		beq	a4,a5,.L6
 170              	.LBE43:
  26:src/kernel.cpp ****         sepc += 4; // da bi se sret vratio na pravo mesto
  27:src/kernel.cpp ****         size_t volatile code = PCB::running->registers[10]; // a0
  28:src/kernel.cpp ****         switch(code) {
  29:src/kernel.cpp ****             case Kernel::sysCallCodes::mem_alloc: // mem_alloc(size_t size) a1 - size
  30:src/kernel.cpp ****             {
  31:src/kernel.cpp ****                 size_t size = PCB::running->registers[11];
  32:src/kernel.cpp ****                 size = MemoryAllocator::blocksInSize(size);
  33:src/kernel.cpp **** 
  34:src/kernel.cpp ****                 PCB::running->registers[10] = (size_t)MemoryAllocator::mem_alloc(size);
  35:src/kernel.cpp ****                 break;
  36:src/kernel.cpp ****             }
  37:src/kernel.cpp ****             case Kernel::sysCallCodes::mem_free: // mem_free(void* memSegment) a1 - memSegment
  38:src/kernel.cpp ****             {
  39:src/kernel.cpp ****                 void* memSegment = (void*)PCB::running->registers[11];
  40:src/kernel.cpp ****                 PCB::running->registers[10] = (size_t)MemoryAllocator::mem_free(memSegment);
  41:src/kernel.cpp ****                 break;
  42:src/kernel.cpp ****             }
GAS LISTING /tmp/ccv3794N.s 			page 7


  43:src/kernel.cpp ****             case Kernel::sysCallCodes::thread_dispatch:
  44:src/kernel.cpp ****             {
  45:src/kernel.cpp ****                 PCB::timeSliceCounter = 0;
  46:src/kernel.cpp ****                 PCB::dispatch();
  47:src/kernel.cpp ****                 break;
  48:src/kernel.cpp ****             }
  49:src/kernel.cpp ****             case Kernel::sysCallCodes::thread_exit:
  50:src/kernel.cpp ****             {
  51:src/kernel.cpp ****                 PCB::running->finished = true;
  52:src/kernel.cpp ****                 PCB::timeSliceCounter = 0;
  53:src/kernel.cpp ****                 PCB::dispatch();
  54:src/kernel.cpp ****                 PCB::running->registers[10] = (size_t)0;
  55:src/kernel.cpp ****                 break;
  56:src/kernel.cpp ****             }
  57:src/kernel.cpp ****             case Kernel::sysCallCodes::thread_start: // a1 - handle
  58:src/kernel.cpp ****             {
  59:src/kernel.cpp ****                 PCB **handle = (PCB **) PCB::running->registers[11];
  60:src/kernel.cpp ****                 Scheduler::put(*handle);
  61:src/kernel.cpp ****                 break;
  62:src/kernel.cpp ****             }
  63:src/kernel.cpp ****             case Kernel::sysCallCodes::thread_create: // a1 - handle a2 - startRoutine a3 - arg a4 
  64:src/kernel.cpp ****             {
  65:src/kernel.cpp ****                 // argumenti
  66:src/kernel.cpp ****                 PCB::processMain main = (PCB::processMain)PCB::running->registers[12];
  67:src/kernel.cpp ****                 void *arg = (void*)PCB::running->registers[13];
  68:src/kernel.cpp **** 
  69:src/kernel.cpp ****                 PCB **handle = (PCB**)PCB::running->registers[11];
  70:src/kernel.cpp ****                 if(scause == 9) { // sistemski rezim
  71:src/kernel.cpp ****                     *handle = PCB::createSysProcess(main, arg);
  72:src/kernel.cpp ****                 }
  73:src/kernel.cpp ****                 else {
  74:src/kernel.cpp ****                     *handle = PCB::createProccess(main, arg);
  75:src/kernel.cpp ****                 }
  76:src/kernel.cpp **** 
  77:src/kernel.cpp ****                 // stavljamo handle u a0 (verovatno vec jeste ali za svaki slucaj)
  78:src/kernel.cpp ****                 PCB::running->registers[10] = (size_t)handle;
  79:src/kernel.cpp **** 
  80:src/kernel.cpp ****                 if(*handle == nullptr) break;
  81:src/kernel.cpp ****                 // dodeljujemo alociran stek procesu
  82:src/kernel.cpp ****                 size_t* stack = (size_t*)PCB::running->registers[14];
  83:src/kernel.cpp ****                 (*handle)->stack = stack;
  84:src/kernel.cpp ****                 (*handle)->registers[2] = (size_t)&stack[DEFAULT_STACK_SIZE]; // sp(x2)
  85:src/kernel.cpp **** 
  86:src/kernel.cpp ****                 break;
  87:src/kernel.cpp ****             }
  88:src/kernel.cpp ****             case Kernel::sysCallCodes::sem_open: // a1 = handle a2 = init
  89:src/kernel.cpp ****             {
  90:src/kernel.cpp ****                 SCB **handle = (SCB**) PCB::running->registers[11];
  91:src/kernel.cpp ****                 size_t init = (int) PCB::running->registers[12];
  92:src/kernel.cpp **** 
  93:src/kernel.cpp ****                 if(scause == 9) { // sistemski rezim
  94:src/kernel.cpp ****                     (*handle) = SCB::createSysSemaphore(init);
  95:src/kernel.cpp ****                 }
  96:src/kernel.cpp ****                 else {
  97:src/kernel.cpp ****                     (*handle) = SCB::createSemaphore(init);
  98:src/kernel.cpp ****                 }
  99:src/kernel.cpp ****                 PCB::running->registers[10] = (size_t)handle;
GAS LISTING /tmp/ccv3794N.s 			page 8


 100:src/kernel.cpp ****                 break;
 101:src/kernel.cpp ****             }
 102:src/kernel.cpp ****             case Kernel::sysCallCodes::sem_wait: // a1 = sem
 103:src/kernel.cpp ****             {
 104:src/kernel.cpp ****                 SCB* sem = (SCB*) PCB::running->registers[11];
 105:src/kernel.cpp **** 
 106:src/kernel.cpp ****                 PCB::running->registers[10] = sem->wait(); // 0 ako se ispravno probudila, -2 ako s
 107:src/kernel.cpp ****                 break;
 108:src/kernel.cpp ****             }
 109:src/kernel.cpp ****             case Kernel::sysCallCodes::sem_signal: // a1 = sem
 110:src/kernel.cpp ****             {
 111:src/kernel.cpp ****                 SCB* sem = (SCB*) PCB::running->registers[11];
 112:src/kernel.cpp **** 
 113:src/kernel.cpp ****                 sem->signal();
 114:src/kernel.cpp ****                 break;
 115:src/kernel.cpp ****             }
 116:src/kernel.cpp ****             case Kernel::sysCallCodes::sem_close: // a1 = sem
 117:src/kernel.cpp ****             {
 118:src/kernel.cpp ****                 SCB* sem = (SCB*) PCB::running->registers[11];
 119:src/kernel.cpp **** 
 120:src/kernel.cpp ****                 sem->signalClosing();
 121:src/kernel.cpp ****                 delete sem; // destruktor ce signalizirati svim procesima da je obrisan
 122:src/kernel.cpp **** 
 123:src/kernel.cpp ****                 break;
 124:src/kernel.cpp ****             }
 125:src/kernel.cpp ****             case Kernel::sysCallCodes::time_sleep: // a1 = time
 126:src/kernel.cpp ****             {
 127:src/kernel.cpp ****                 size_t time = (size_t)PCB::running->registers[11];
 128:src/kernel.cpp ****                 PCB::running->timeSleeping = time;
 129:src/kernel.cpp ****                 SleepingProcesses::putToSleep(PCB::running);
 130:src/kernel.cpp ****                 break;
 131:src/kernel.cpp ****             }
 132:src/kernel.cpp ****             case Kernel::sysCallCodes::putc: // a1 = character
 133:src/kernel.cpp ****             {
 134:src/kernel.cpp ****                 char character = PCB::running->registers[11];
 135:src/kernel.cpp ****                 CCB::outputBuffer.pushBack(character);
 136:src/kernel.cpp ****                 CCB::semOutput->signal();
 137:src/kernel.cpp ****                 break;
 138:src/kernel.cpp ****             }
 139:src/kernel.cpp ****             case Kernel::sysCallCodes::getc:
 140:src/kernel.cpp ****             {
 141:src/kernel.cpp ****                 CCB::semInput->signal();
 142:src/kernel.cpp ****                 while(CCB::inputBuffer.peekFront() == 0) {
 143:src/kernel.cpp ****                     CCB::inputBufferEmpty->wait();
 144:src/kernel.cpp ****                 }
 145:src/kernel.cpp **** 
 146:src/kernel.cpp ****                 PCB::running->registers[10] = CCB::inputBuffer.popFront();
 147:src/kernel.cpp ****                 break;
 148:src/kernel.cpp ****             }
 149:src/kernel.cpp ****             case Kernel::sysCallCodes::userMode:
 150:src/kernel.cpp ****             {
 151:src/kernel.cpp ****                 sstatus = sstatus & ~Kernel::BitMaskSstatus::SSTATUS_SPP;
 152:src/kernel.cpp ****                 break;
 153:src/kernel.cpp ****             }
 154:src/kernel.cpp ****             default:
 155:src/kernel.cpp ****                 break;
 156:src/kernel.cpp ****         }
GAS LISTING /tmp/ccv3794N.s 			page 9


 157:src/kernel.cpp ****         Kernel::w_sepc(sepc);
 158:src/kernel.cpp ****         Kernel::w_sstatus(sstatus);
 159:src/kernel.cpp ****         return;
 160:src/kernel.cpp ****     }
 161:src/kernel.cpp ****     else if(scause == (1UL << 63 | 1)) { // softverski prekid od tajmera
 171              		.loc 1 161 10 is_stmt 1
 172              	.LBB78:
 173              	.LBB44:
 174              		.loc 1 161 20 is_stmt 0
 175 00c4 033784FD 		ld	a4,-40(s0)
 176              		.loc 1 161 10
 177 00c8 9307F0FF 		li	a5,-1
 178 00cc 9397F703 		slli	a5,a5,63
 179 00d0 93871700 		addi	a5,a5,1
 180 00d4 6306F730 		beq	a4,a5,.L36
 181              	.LBE44:
 182              	.LBE78:
 162:src/kernel.cpp ****         PCB::timeSliceCounter++;
 163:src/kernel.cpp ****         SleepingProcesses::wakeUp(); // budi uspavane procese ako su postojali, ako ne smanjuje per
 164:src/kernel.cpp ****         if(PCB::timeSliceCounter >= PCB::running->timeSlice) {
 165:src/kernel.cpp ****             PCB::timeSliceCounter = 0;
 166:src/kernel.cpp ****             PCB::dispatch(); // vrsimo promenu konteksta ako je istekao time slice procesa
 167:src/kernel.cpp ****             Kernel::w_sepc(sepc);
 168:src/kernel.cpp ****             Kernel::w_sstatus(sstatus);
 169:src/kernel.cpp ****         }
 170:src/kernel.cpp ****         Kernel::mc_sip(Kernel::SIP_SSIE); // postavljamo SSIE na 0 jer smo obradili softverski prek
 171:src/kernel.cpp ****     }
 172:src/kernel.cpp ****     else if(scause == (1UL << 63 | 9)) { // spoljasnji prekid od konzole
 183              		.loc 1 172 10 is_stmt 1
 184              	.LBB79:
 185              	.LBB54:
 186              	.LBB45:
 187              		.loc 1 172 20 is_stmt 0
 188 00d8 033784FD 		ld	a4,-40(s0)
 189              		.loc 1 172 10
 190 00dc 9307F0FF 		li	a5,-1
 191 00e0 9397F703 		slli	a5,a5,63
 192 00e4 93879700 		addi	a5,a5,9
 193 00e8 630CF734 		beq	a4,a5,.L37
 173:src/kernel.cpp ****         size_t code = plic_claim();
 174:src/kernel.cpp ****         if(code == CONSOLE_IRQ) {
 175:src/kernel.cpp ****             if(*(char*)CONSOLE_STATUS & CONSOLE_TX_STATUS_BIT) { // putc
 176:src/kernel.cpp ****                 //if(CCB::semOutput->getSemValue() == 0) plic_complete(code);
 177:src/kernel.cpp ****             }
 178:src/kernel.cpp ****             if(*(char*)CONSOLE_STATUS & CONSOLE_RX_STATUS_BIT) { // getc
 179:src/kernel.cpp ****                 //if(CCB::semInput->getSemValue() == 0) plic_complete(code);
 180:src/kernel.cpp ****             }
 181:src/kernel.cpp ****         }
 182:src/kernel.cpp ****         else {
 183:src/kernel.cpp **** 
 184:src/kernel.cpp ****         }
 185:src/kernel.cpp ****         plic_complete(code);
 186:src/kernel.cpp **** 
 187:src/kernel.cpp **** 
 188:src/kernel.cpp ****     }
 189:src/kernel.cpp ****     else { // neka vrsta greske, neocekivan skok na prekidnu rutinu
 190:src/kernel.cpp ****         kPutc('c');
GAS LISTING /tmp/ccv3794N.s 			page 10


 194              		.loc 1 190 9 is_stmt 1
 195              		.loc 1 190 14 is_stmt 0
 196 00ec 13053006 		li	a0,99
 197 00f0 97000000 		call	_Z5kPutcc
 197      E7800000 
 198              	.LVL4:
 199 00f8 6F004008 		j	.L5
 200              	.L6:
 201              	.LBE45:
 202              	.LBE54:
 203              	.LBB55:
  26:src/kernel.cpp ****         size_t volatile code = PCB::running->registers[10]; // a0
 204              		.loc 1 26 9 is_stmt 1
  26:src/kernel.cpp ****         size_t volatile code = PCB::running->registers[10]; // a0
 205              		.loc 1 26 14 is_stmt 0
 206 00fc 833704FD 		ld	a5,-48(s0)
 207 0100 93874700 		addi	a5,a5,4
 208 0104 2338F4FC 		sd	a5,-48(s0)
  27:src/kernel.cpp ****         switch(code) {
 209              		.loc 1 27 9 is_stmt 1
  27:src/kernel.cpp ****         switch(code) {
 210              		.loc 1 27 46 is_stmt 0
 211 0108 97070000 		la	a5,_ZN3PCB7runningE
 211      83B70700 
 212 0110 03B50700 		ld	a0,0(a5)
 213 0114 03378501 		ld	a4,24(a0)
  27:src/kernel.cpp ****         switch(code) {
 214              		.loc 1 27 25
 215 0118 83370705 		ld	a5,80(a4)
 216 011c 2334F4FA 		sd	a5,-88(s0)
  28:src/kernel.cpp ****             case Kernel::sysCallCodes::mem_alloc: // mem_alloc(size_t size) a1 - size
 217              		.loc 1 28 9 is_stmt 1
 218              	.LBB56:
  28:src/kernel.cpp ****             case Kernel::sysCallCodes::mem_alloc: // mem_alloc(size_t size) a1 - size
 219              		.loc 1 28 16 is_stmt 0
 220 0120 833784FA 		ld	a5,-88(s0)
 221 0124 93063004 		li	a3,67
 222 0128 63E2F604 		bgtu	a5,a3,.L9
 223 012c 93972700 		slli	a5,a5,2
 224 0130 97060000 		lla	a3,.L11
 224      93860600 
 225 0138 B387D700 		add	a5,a5,a3
 226 013c 83A70700 		lw	a5,0(a5)
 227 0140 B387D700 		add	a5,a5,a3
 228 0144 67800700 		jr	a5
 229              		.section	.rodata
 230              		.align	2
 231              		.align	2
 232              	.L11:
 233 0000 00000000 		.word	.L9-.L11
 234 0004 00000000 		.word	.L24-.L11
 235 0008 00000000 		.word	.L23-.L11
 236 000c 00000000 		.word	.L9-.L11
 237 0010 00000000 		.word	.L9-.L11
 238 0014 00000000 		.word	.L9-.L11
 239 0018 00000000 		.word	.L9-.L11
 240 001c 00000000 		.word	.L9-.L11
GAS LISTING /tmp/ccv3794N.s 			page 11


 241 0020 00000000 		.word	.L9-.L11
 242 0024 00000000 		.word	.L9-.L11
 243 0028 00000000 		.word	.L9-.L11
 244 002c 00000000 		.word	.L9-.L11
 245 0030 00000000 		.word	.L9-.L11
 246 0034 00000000 		.word	.L9-.L11
 247 0038 00000000 		.word	.L9-.L11
 248 003c 00000000 		.word	.L9-.L11
 249 0040 00000000 		.word	.L9-.L11
 250 0044 00000000 		.word	.L22-.L11
 251 0048 00000000 		.word	.L21-.L11
 252 004c 00000000 		.word	.L20-.L11
 253 0050 00000000 		.word	.L19-.L11
 254 0054 00000000 		.word	.L9-.L11
 255 0058 00000000 		.word	.L9-.L11
 256 005c 00000000 		.word	.L9-.L11
 257 0060 00000000 		.word	.L9-.L11
 258 0064 00000000 		.word	.L9-.L11
 259 0068 00000000 		.word	.L9-.L11
 260 006c 00000000 		.word	.L9-.L11
 261 0070 00000000 		.word	.L9-.L11
 262 0074 00000000 		.word	.L9-.L11
 263 0078 00000000 		.word	.L9-.L11
 264 007c 00000000 		.word	.L9-.L11
 265 0080 00000000 		.word	.L9-.L11
 266 0084 00000000 		.word	.L18-.L11
 267 0088 00000000 		.word	.L17-.L11
 268 008c 00000000 		.word	.L16-.L11
 269 0090 00000000 		.word	.L15-.L11
 270 0094 00000000 		.word	.L9-.L11
 271 0098 00000000 		.word	.L9-.L11
 272 009c 00000000 		.word	.L9-.L11
 273 00a0 00000000 		.word	.L9-.L11
 274 00a4 00000000 		.word	.L9-.L11
 275 00a8 00000000 		.word	.L9-.L11
 276 00ac 00000000 		.word	.L9-.L11
 277 00b0 00000000 		.word	.L9-.L11
 278 00b4 00000000 		.word	.L9-.L11
 279 00b8 00000000 		.word	.L9-.L11
 280 00bc 00000000 		.word	.L9-.L11
 281 00c0 00000000 		.word	.L9-.L11
 282 00c4 00000000 		.word	.L14-.L11
 283 00c8 00000000 		.word	.L9-.L11
 284 00cc 00000000 		.word	.L9-.L11
 285 00d0 00000000 		.word	.L9-.L11
 286 00d4 00000000 		.word	.L9-.L11
 287 00d8 00000000 		.word	.L9-.L11
 288 00dc 00000000 		.word	.L9-.L11
 289 00e0 00000000 		.word	.L9-.L11
 290 00e4 00000000 		.word	.L9-.L11
 291 00e8 00000000 		.word	.L9-.L11
 292 00ec 00000000 		.word	.L9-.L11
 293 00f0 00000000 		.word	.L9-.L11
 294 00f4 00000000 		.word	.L9-.L11
 295 00f8 00000000 		.word	.L9-.L11
 296 00fc 00000000 		.word	.L9-.L11
 297 0100 00000000 		.word	.L9-.L11
GAS LISTING /tmp/ccv3794N.s 			page 12


 298 0104 00000000 		.word	.L13-.L11
 299 0108 00000000 		.word	.L12-.L11
 300 010c 00000000 		.word	.L10-.L11
 301              		.text
 302              	.L24:
 303              	.LBB57:
  29:src/kernel.cpp ****             {
 304              		.loc 1 29 13 is_stmt 1
  30:src/kernel.cpp ****                 size_t size = PCB::running->registers[11];
 305              		.loc 1 30 13
 306              	.LBB58:
  31:src/kernel.cpp ****                 size = MemoryAllocator::blocksInSize(size);
 307              		.loc 1 31 17
  31:src/kernel.cpp ****                 size = MemoryAllocator::blocksInSize(size);
 308              		.loc 1 31 24 is_stmt 0
 309 0148 03358705 		ld	a0,88(a4)
 310              	.LVL5:
  32:src/kernel.cpp **** 
 311              		.loc 1 32 17 is_stmt 1
 312              	.LBB59:
 313              	.LBB60:
 314              		.file 3 "src/../h/MemoryAllocator.h"
   1:src/../h/MemoryAllocator.h **** #ifndef PROJECT_BASE_MEMORYALLOCATOR_H
   2:src/../h/MemoryAllocator.h **** #define PROJECT_BASE_MEMORYALLOCATOR_H
   3:src/../h/MemoryAllocator.h **** 
   4:src/../h/MemoryAllocator.h **** #include "hw.h"
   5:src/../h/MemoryAllocator.h **** 
   6:src/../h/MemoryAllocator.h **** class MemoryAllocator {
   7:src/../h/MemoryAllocator.h **** public:
   8:src/../h/MemoryAllocator.h ****     /*
   9:src/../h/MemoryAllocator.h ****     Alocira (najmanje) size bajtova memorije, zaokruženo i poravnato na blokove veličine MEM_BLOC
  10:src/../h/MemoryAllocator.h ****     Svaki alocirani segment ima zaglavlje sa velicinom tog segmenta(vraca se adresa nakon tog zagla
  11:src/../h/MemoryAllocator.h **** 
  12:src/../h/MemoryAllocator.h ****     Vraća:
  13:src/../h/MemoryAllocator.h ****     pokazivač na alocirani deo memorije u slučaju uspeha, nullptr u slučaju neuspeha
  14:src/../h/MemoryAllocator.h **** 
  15:src/../h/MemoryAllocator.h ****     Radi se po algoritmu first fit(alociramo prvi segment koji je >= size). Ako je preostao prostor
  16:src/../h/MemoryAllocator.h ****     jednog bloka, taj preostali prostor se pridruzuje ovom koji smo sad alocirali(jer nema poente d
  17:src/../h/MemoryAllocator.h ****     */
  18:src/../h/MemoryAllocator.h ****     static void* mem_alloc(size_t size);
  19:src/../h/MemoryAllocator.h ****     /*
  20:src/../h/MemoryAllocator.h ****     Oslobađa prostor prethodno zauzet pomoću mem_alloc.
  21:src/../h/MemoryAllocator.h ****     Vraća 0 u slučaju uspeha, BAD_POINTER  flag ako je dostavljen los pokazivac.
  22:src/../h/MemoryAllocator.h ****     Ako je moguce, spaja dva susedna slobodna segmenta u jedan veci
  23:src/../h/MemoryAllocator.h ****     */
  24:src/../h/MemoryAllocator.h ****     static int mem_free(void* memSegment);
  25:src/../h/MemoryAllocator.h **** 
  26:src/../h/MemoryAllocator.h ****     enum memFreeFlags {
  27:src/../h/MemoryAllocator.h ****         BAD_POINTER = -1 // nije koriscen pokazviac iz mem_alloc
  28:src/../h/MemoryAllocator.h ****     };
  29:src/../h/MemoryAllocator.h **** 
  30:src/../h/MemoryAllocator.h ****     // Vraca minimalan potreban broj blokova za alokaciju memorije velicine size bajtova
  31:src/../h/MemoryAllocator.h ****     static inline size_t sizeInBlocks(size_t size) {
  32:src/../h/MemoryAllocator.h ****         return (size / MEM_BLOCK_SIZE) + (size % MEM_BLOCK_SIZE > 0);
  33:src/../h/MemoryAllocator.h ****     }
  34:src/../h/MemoryAllocator.h **** 
  35:src/../h/MemoryAllocator.h ****     // Vraca velicinu numOfBlocks blokova u bajtovima
GAS LISTING /tmp/ccv3794N.s 			page 13


  36:src/../h/MemoryAllocator.h ****     static inline size_t blocksInSize(size_t numOfBlocks) {
  37:src/../h/MemoryAllocator.h ****         return numOfBlocks * MEM_BLOCK_SIZE;
 315              		.loc 3 37 9
 316              	.LBE60:
 317              	.LBE59:
  34:src/kernel.cpp ****                 break;
 318              		.loc 1 34 17
  34:src/kernel.cpp ****                 break;
 319              		.loc 1 34 81 is_stmt 0
 320 014c 13156500 		slli	a0,a0,6
 321              	.LVL6:
 322 0150 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 322      E7800000 
 323              	.LVL7:
  34:src/kernel.cpp ****                 break;
 324              		.loc 1 34 31
 325 0158 97070000 		la	a5,_ZN3PCB7runningE
 325      83B70700 
 326 0160 83B70700 		ld	a5,0(a5)
 327 0164 83B78701 		ld	a5,24(a5)
  34:src/kernel.cpp ****                 break;
 328              		.loc 1 34 45
 329 0168 23B8A704 		sd	a0,80(a5)
  35:src/kernel.cpp ****             }
 330              		.loc 1 35 17 is_stmt 1
 331              	.L9:
 332              	.LBE58:
 333              	.LBE57:
 334              	.LBE56:
 157:src/kernel.cpp ****         Kernel::w_sstatus(sstatus);
 335              		.loc 1 157 9
 157:src/kernel.cpp ****         Kernel::w_sstatus(sstatus);
 336              		.loc 1 157 23 is_stmt 0
 337 016c 833704FD 		ld	a5,-48(s0)
 338              	.LVL8:
 339              	.LBB71:
 340              	.LBB72:
  55:src/../h/kernel.h ****     }
 341              		.loc 2 55 9 is_stmt 1
  55:src/../h/kernel.h ****     }
 342              		.loc 2 55 69 is_stmt 0
 343              	#APP
 344              	# 55 "src/../h/kernel.h" 1
 345              		csrw sepc, a5
 346              	# 0 "" 2
 347              	.LVL9:
 348              	#NO_APP
 349              	.LBE72:
 350              	.LBE71:
 158:src/kernel.cpp ****         return;
 351              		.loc 1 158 9 is_stmt 1
 158:src/kernel.cpp ****         return;
 352              		.loc 1 158 26 is_stmt 0
 353 0174 833784FC 		ld	a5,-56(s0)
 354              	.LVL10:
 355              	.LBB73:
 356              	.LBB74:
GAS LISTING /tmp/ccv3794N.s 			page 14


 132:src/../h/kernel.h ****     }
 133:src/../h/kernel.h **** 
 134:src/../h/kernel.h ****     // write register sstatus
 135:src/../h/kernel.h ****     static void w_sstatus(size_t sstatus) {
 136:src/../h/kernel.h ****         __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 357              		.loc 2 136 9 is_stmt 1
 358              		.loc 2 136 81 is_stmt 0
 359              	#APP
 360              	# 136 "src/../h/kernel.h" 1
 137              	    }
 361              		csrw sstatus, a5
 362              	# 0 "" 2
 363              	.LVL11:
 364              	#NO_APP
 365              	.LBE74:
 366              	.LBE73:
 159:src/kernel.cpp ****     }
 367              		.loc 1 159 9 is_stmt 1
 368              	.L5:
 369              	.LBE55:
 370              	.LBE79:
 191:src/kernel.cpp ****     }
 192:src/kernel.cpp **** 
 193:src/kernel.cpp **** }
 371              		.loc 1 193 1 is_stmt 0
 372 017c 83308105 		ld	ra,88(sp)
 373              		.cfi_remember_state
 374              		.cfi_restore 1
 375 0180 03340105 		ld	s0,80(sp)
 376              		.cfi_restore 8
 377              		.cfi_def_cfa 2, 96
 378 0184 83348104 		ld	s1,72(sp)
 379              		.cfi_restore 9
 380 0188 13010106 		addi	sp,sp,96
 381              		.cfi_def_cfa_offset 0
 382 018c 67800000 		jr	ra
 383              	.L23:
 384              		.cfi_restore_state
 385              	.LBB80:
 386              	.LBB76:
 387              	.LBB75:
 388              	.LBB70:
  37:src/kernel.cpp ****             {
 389              		.loc 1 37 13 is_stmt 1
  38:src/kernel.cpp ****                 void* memSegment = (void*)PCB::running->registers[11];
 390              		.loc 1 38 13
 391              	.LBB61:
  39:src/kernel.cpp ****                 PCB::running->registers[10] = (size_t)MemoryAllocator::mem_free(memSegment);
 392              		.loc 1 39 17
 393              	.LVL12:
  40:src/kernel.cpp ****                 break;
 394              		.loc 1 40 17
  40:src/kernel.cpp ****                 break;
 395              		.loc 1 40 80 is_stmt 0
 396 0190 03358705 		ld	a0,88(a4)
 397 0194 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 397      E7800000 
GAS LISTING /tmp/ccv3794N.s 			page 15


 398              	.LVL13:
  40:src/kernel.cpp ****                 break;
 399              		.loc 1 40 31
 400 019c 97070000 		la	a5,_ZN3PCB7runningE
 400      83B70700 
 401 01a4 83B70700 		ld	a5,0(a5)
 402 01a8 83B78701 		ld	a5,24(a5)
  40:src/kernel.cpp ****                 break;
 403              		.loc 1 40 45
 404 01ac 23B8A704 		sd	a0,80(a5)
  41:src/kernel.cpp ****             }
 405              		.loc 1 41 17 is_stmt 1
 406 01b0 6FF0DFFB 		j	.L9
 407              	.L20:
 408              	.LBE61:
  43:src/kernel.cpp ****             {
 409              		.loc 1 43 13
  44:src/kernel.cpp ****                 PCB::timeSliceCounter = 0;
 410              		.loc 1 44 13
  45:src/kernel.cpp ****                 PCB::dispatch();
 411              		.loc 1 45 17
  45:src/kernel.cpp ****                 PCB::dispatch();
 412              		.loc 1 45 39 is_stmt 0
 413 01b4 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 413      83B70700 
 414 01bc 23B00700 		sd	zero,0(a5)
  46:src/kernel.cpp ****                 break;
 415              		.loc 1 46 17 is_stmt 1
  46:src/kernel.cpp ****                 break;
 416              		.loc 1 46 30 is_stmt 0
 417 01c0 97000000 		call	_ZN3PCB8dispatchEv@plt
 417      E7800000 
 418              	.LVL14:
  47:src/kernel.cpp ****             }
 419              		.loc 1 47 17 is_stmt 1
 420 01c8 6FF05FFA 		j	.L9
 421              	.L21:
  49:src/kernel.cpp ****             {
 422              		.loc 1 49 13
  50:src/kernel.cpp ****                 PCB::running->finished = true;
 423              		.loc 1 50 13
  51:src/kernel.cpp ****                 PCB::timeSliceCounter = 0;
 424              		.loc 1 51 17
  51:src/kernel.cpp ****                 PCB::timeSliceCounter = 0;
 425              		.loc 1 51 40 is_stmt 0
 426 01cc 93071000 		li	a5,1
 427 01d0 2304F502 		sb	a5,40(a0)
  52:src/kernel.cpp ****                 PCB::dispatch();
 428              		.loc 1 52 17 is_stmt 1
  52:src/kernel.cpp ****                 PCB::dispatch();
 429              		.loc 1 52 39 is_stmt 0
 430 01d4 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 430      83B70700 
 431 01dc 23B00700 		sd	zero,0(a5)
  53:src/kernel.cpp ****                 PCB::running->registers[10] = (size_t)0;
 432              		.loc 1 53 17 is_stmt 1
  53:src/kernel.cpp ****                 PCB::running->registers[10] = (size_t)0;
GAS LISTING /tmp/ccv3794N.s 			page 16


 433              		.loc 1 53 30 is_stmt 0
 434 01e0 97000000 		call	_ZN3PCB8dispatchEv@plt
 434      E7800000 
 435              	.LVL15:
  54:src/kernel.cpp ****                 break;
 436              		.loc 1 54 17 is_stmt 1
  54:src/kernel.cpp ****                 break;
 437              		.loc 1 54 31 is_stmt 0
 438 01e8 97070000 		la	a5,_ZN3PCB7runningE
 438      83B70700 
 439 01f0 83B70700 		ld	a5,0(a5)
 440 01f4 83B78701 		ld	a5,24(a5)
  54:src/kernel.cpp ****                 break;
 441              		.loc 1 54 45
 442 01f8 23B80704 		sd	zero,80(a5)
  55:src/kernel.cpp ****             }
 443              		.loc 1 55 17 is_stmt 1
 444 01fc 6FF01FF7 		j	.L9
 445              	.L19:
  57:src/kernel.cpp ****             {
 446              		.loc 1 57 13
  58:src/kernel.cpp ****                 PCB **handle = (PCB **) PCB::running->registers[11];
 447              		.loc 1 58 13
 448              	.LBB62:
  59:src/kernel.cpp ****                 Scheduler::put(*handle);
 449              		.loc 1 59 17
  59:src/kernel.cpp ****                 Scheduler::put(*handle);
 450              		.loc 1 59 67 is_stmt 0
 451 0200 83378705 		ld	a5,88(a4)
 452              	.LVL16:
  60:src/kernel.cpp ****                 break;
 453              		.loc 1 60 17 is_stmt 1
  60:src/kernel.cpp ****                 break;
 454              		.loc 1 60 31 is_stmt 0
 455 0204 03B50700 		ld	a0,0(a5)
 456 0208 97000000 		call	_ZN9Scheduler3putEP3PCB@plt
 456      E7800000 
 457              	.LVL17:
  61:src/kernel.cpp ****             }
 458              		.loc 1 61 17 is_stmt 1
 459 0210 6FF0DFF5 		j	.L9
 460              	.L22:
 461              	.LBE62:
  63:src/kernel.cpp ****             {
 462              		.loc 1 63 13
  64:src/kernel.cpp ****                 // argumenti
 463              		.loc 1 64 13
 464              	.LBB63:
  66:src/kernel.cpp ****                 void *arg = (void*)PCB::running->registers[13];
 465              		.loc 1 66 17
  66:src/kernel.cpp ****                 void *arg = (void*)PCB::running->registers[13];
 466              		.loc 1 66 85 is_stmt 0
 467 0214 03350706 		ld	a0,96(a4)
 468              	.LVL18:
  67:src/kernel.cpp **** 
 469              		.loc 1 67 17 is_stmt 1
  67:src/kernel.cpp **** 
GAS LISTING /tmp/ccv3794N.s 			page 17


 470              		.loc 1 67 62 is_stmt 0
 471 0218 83358706 		ld	a1,104(a4)
 472              	.LVL19:
  69:src/kernel.cpp ****                 if(scause == 9) { // sistemski rezim
 473              		.loc 1 69 17 is_stmt 1
  69:src/kernel.cpp ****                 if(scause == 9) { // sistemski rezim
 474              		.loc 1 69 65 is_stmt 0
 475 021c 83348705 		ld	s1,88(a4)
 476              	.LVL20:
  70:src/kernel.cpp ****                     *handle = PCB::createSysProcess(main, arg);
 477              		.loc 1 70 17 is_stmt 1
  70:src/kernel.cpp ****                     *handle = PCB::createSysProcess(main, arg);
 478              		.loc 1 70 27 is_stmt 0
 479 0220 033784FD 		ld	a4,-40(s0)
  70:src/kernel.cpp ****                     *handle = PCB::createSysProcess(main, arg);
 480              		.loc 1 70 17
 481 0224 93079000 		li	a5,9
 482 0228 6308F704 		beq	a4,a5,.L38
  74:src/kernel.cpp ****                 }
 483              		.loc 1 74 21 is_stmt 1
  74:src/kernel.cpp ****                 }
 484              		.loc 1 74 50 is_stmt 0
 485 022c 97000000 		call	_ZN3PCB14createProccessEPFvvEPv@plt
 485      E7800000 
 486              	.LVL21:
  74:src/kernel.cpp ****                 }
 487              		.loc 1 74 29
 488 0234 23B0A400 		sd	a0,0(s1)
 489              	.L26:
  78:src/kernel.cpp **** 
 490              		.loc 1 78 17 is_stmt 1
  78:src/kernel.cpp **** 
 491              		.loc 1 78 31 is_stmt 0
 492 0238 97070000 		la	a5,_ZN3PCB7runningE
 492      83B70700 
 493 0240 83B70700 		ld	a5,0(a5)
 494 0244 03B78701 		ld	a4,24(a5)
  78:src/kernel.cpp **** 
 495              		.loc 1 78 45
 496 0248 23389704 		sd	s1,80(a4)
  80:src/kernel.cpp ****                 // dodeljujemo alociran stek procesu
 497              		.loc 1 80 17 is_stmt 1
  80:src/kernel.cpp ****                 // dodeljujemo alociran stek procesu
 498              		.loc 1 80 20 is_stmt 0
 499 024c 03B70400 		ld	a4,0(s1)
  80:src/kernel.cpp ****                 // dodeljujemo alociran stek procesu
 500              		.loc 1 80 17
 501 0250 E30E07F0 		beqz	a4,.L9
  82:src/kernel.cpp ****                 (*handle)->stack = stack;
 502              		.loc 1 82 17 is_stmt 1
  82:src/kernel.cpp ****                 (*handle)->stack = stack;
 503              		.loc 1 82 56 is_stmt 0
 504 0254 83B78701 		ld	a5,24(a5)
  82:src/kernel.cpp ****                 (*handle)->stack = stack;
 505              		.loc 1 82 68
 506 0258 83B70707 		ld	a5,112(a5)
 507              	.LVL22:
GAS LISTING /tmp/ccv3794N.s 			page 18


  83:src/kernel.cpp ****                 (*handle)->registers[2] = (size_t)&stack[DEFAULT_STACK_SIZE]; // sp(x2)
 508              		.loc 1 83 17 is_stmt 1
  83:src/kernel.cpp ****                 (*handle)->registers[2] = (size_t)&stack[DEFAULT_STACK_SIZE]; // sp(x2)
 509              		.loc 1 83 34 is_stmt 0
 510 025c 2334F700 		sd	a5,8(a4)
  84:src/kernel.cpp **** 
 511              		.loc 1 84 17 is_stmt 1
  84:src/kernel.cpp **** 
 512              		.loc 1 84 51 is_stmt 0
 513 0260 37870000 		li	a4,32768
 514 0264 B387E700 		add	a5,a5,a4
 515              	.LVL23:
  84:src/kernel.cpp **** 
 516              		.loc 1 84 18
 517 0268 03B70400 		ld	a4,0(s1)
  84:src/kernel.cpp **** 
 518              		.loc 1 84 28
 519 026c 03378701 		ld	a4,24(a4)
  84:src/kernel.cpp **** 
 520              		.loc 1 84 41
 521 0270 2338F700 		sd	a5,16(a4)
  86:src/kernel.cpp ****             }
 522              		.loc 1 86 17 is_stmt 1
 523 0274 6FF09FEF 		j	.L9
 524              	.LVL24:
 525              	.L38:
  71:src/kernel.cpp ****                 }
 526              		.loc 1 71 21
  71:src/kernel.cpp ****                 }
 527              		.loc 1 71 52 is_stmt 0
 528 0278 97000000 		call	_ZN3PCB16createSysProcessEPFvvEPv@plt
 528      E7800000 
 529              	.LVL25:
  71:src/kernel.cpp ****                 }
 530              		.loc 1 71 29
 531 0280 23B0A400 		sd	a0,0(s1)
 532 0284 6FF05FFB 		j	.L26
 533              	.LVL26:
 534              	.L18:
 535              	.LBE63:
  88:src/kernel.cpp ****             {
 536              		.loc 1 88 13 is_stmt 1
  89:src/kernel.cpp ****                 SCB **handle = (SCB**) PCB::running->registers[11];
 537              		.loc 1 89 13
 538              	.LBB64:
  90:src/kernel.cpp ****                 size_t init = (int) PCB::running->registers[12];
 539              		.loc 1 90 17
  90:src/kernel.cpp ****                 size_t init = (int) PCB::running->registers[12];
 540              		.loc 1 90 66 is_stmt 0
 541 0288 83348705 		ld	s1,88(a4)
 542              	.LVL27:
  91:src/kernel.cpp **** 
 543              		.loc 1 91 17 is_stmt 1
  91:src/kernel.cpp **** 
 544              		.loc 1 91 31 is_stmt 0
 545 028c 03250706 		lw	a0,96(a4)
 546              	.LVL28:
GAS LISTING /tmp/ccv3794N.s 			page 19


  93:src/kernel.cpp ****                     (*handle) = SCB::createSysSemaphore(init);
 547              		.loc 1 93 17 is_stmt 1
  93:src/kernel.cpp ****                     (*handle) = SCB::createSysSemaphore(init);
 548              		.loc 1 93 27 is_stmt 0
 549 0290 033784FD 		ld	a4,-40(s0)
  93:src/kernel.cpp ****                     (*handle) = SCB::createSysSemaphore(init);
 550              		.loc 1 93 17
 551 0294 93079000 		li	a5,9
 552 0298 6304F702 		beq	a4,a5,.L39
  97:src/kernel.cpp ****                 }
 553              		.loc 1 97 21 is_stmt 1
  97:src/kernel.cpp ****                 }
 554              		.loc 1 97 53 is_stmt 0
 555 029c 97000000 		call	_ZN3SCB15createSemaphoreEi@plt
 555      E7800000 
 556              	.LVL29:
  97:src/kernel.cpp ****                 }
 557              		.loc 1 97 31
 558 02a4 23B0A400 		sd	a0,0(s1)
 559              	.L28:
  99:src/kernel.cpp ****                 break;
 560              		.loc 1 99 17 is_stmt 1
  99:src/kernel.cpp ****                 break;
 561              		.loc 1 99 31 is_stmt 0
 562 02a8 97070000 		la	a5,_ZN3PCB7runningE
 562      83B70700 
 563 02b0 83B70700 		ld	a5,0(a5)
 564 02b4 83B78701 		ld	a5,24(a5)
  99:src/kernel.cpp ****                 break;
 565              		.loc 1 99 45
 566 02b8 23B89704 		sd	s1,80(a5)
 100:src/kernel.cpp ****             }
 567              		.loc 1 100 17 is_stmt 1
 568 02bc 6FF01FEB 		j	.L9
 569              	.LVL30:
 570              	.L39:
  94:src/kernel.cpp ****                 }
 571              		.loc 1 94 21
  94:src/kernel.cpp ****                 }
 572              		.loc 1 94 56 is_stmt 0
 573 02c0 97000000 		call	_ZN3SCB18createSysSemaphoreEi@plt
 573      E7800000 
 574              	.LVL31:
  94:src/kernel.cpp ****                 }
 575              		.loc 1 94 31
 576 02c8 23B0A400 		sd	a0,0(s1)
 577 02cc 6FF0DFFD 		j	.L28
 578              	.LVL32:
 579              	.L16:
 580              	.LBE64:
 102:src/kernel.cpp ****             {
 581              		.loc 1 102 13 is_stmt 1
 103:src/kernel.cpp ****                 SCB* sem = (SCB*) PCB::running->registers[11];
 582              		.loc 1 103 13
 583              	.LBB65:
 104:src/kernel.cpp **** 
 584              		.loc 1 104 17
GAS LISTING /tmp/ccv3794N.s 			page 20


 106:src/kernel.cpp ****                 break;
 585              		.loc 1 106 17
 106:src/kernel.cpp ****                 break;
 586              		.loc 1 106 56 is_stmt 0
 587 02d0 03358705 		ld	a0,88(a4)
 588 02d4 97000000 		call	_ZN3SCB4waitEv@plt
 588      E7800000 
 589              	.LVL33:
 106:src/kernel.cpp ****                 break;
 590              		.loc 1 106 31
 591 02dc 97070000 		la	a5,_ZN3PCB7runningE
 591      83B70700 
 592 02e4 83B70700 		ld	a5,0(a5)
 593 02e8 83B78701 		ld	a5,24(a5)
 106:src/kernel.cpp ****                 break;
 594              		.loc 1 106 45
 595 02ec 23B8A704 		sd	a0,80(a5)
 107:src/kernel.cpp ****             }
 596              		.loc 1 107 17 is_stmt 1
 597 02f0 6FF0DFE7 		j	.L9
 598              	.L15:
 599              	.LBE65:
 109:src/kernel.cpp ****             {
 600              		.loc 1 109 13
 110:src/kernel.cpp ****                 SCB* sem = (SCB*) PCB::running->registers[11];
 601              		.loc 1 110 13
 602              	.LBB66:
 111:src/kernel.cpp **** 
 603              		.loc 1 111 17
 604              	.LVL34:
 113:src/kernel.cpp ****                 break;
 605              		.loc 1 113 17
 113:src/kernel.cpp ****                 break;
 606              		.loc 1 113 28 is_stmt 0
 607 02f4 03358705 		ld	a0,88(a4)
 608 02f8 97000000 		call	_ZN3SCB6signalEv@plt
 608      E7800000 
 609              	.LVL35:
 114:src/kernel.cpp ****             }
 610              		.loc 1 114 17 is_stmt 1
 611 0300 6FF0DFE6 		j	.L9
 612              	.L17:
 613              	.LBE66:
 116:src/kernel.cpp ****             {
 614              		.loc 1 116 13
 117:src/kernel.cpp ****                 SCB* sem = (SCB*) PCB::running->registers[11];
 615              		.loc 1 117 13
 616              	.LBB67:
 118:src/kernel.cpp **** 
 617              		.loc 1 118 17
 118:src/kernel.cpp **** 
 618              		.loc 1 118 61 is_stmt 0
 619 0304 83348705 		ld	s1,88(a4)
 620              	.LVL36:
 120:src/kernel.cpp ****                 delete sem; // destruktor ce signalizirati svim procesima da je obrisan
 621              		.loc 1 120 17 is_stmt 1
 120:src/kernel.cpp ****                 delete sem; // destruktor ce signalizirati svim procesima da je obrisan
GAS LISTING /tmp/ccv3794N.s 			page 21


 622              		.loc 1 120 35 is_stmt 0
 623 0308 13850400 		mv	a0,s1
 624 030c 97000000 		call	_ZN3SCB13signalClosingEv@plt
 624      E7800000 
 625              	.LVL37:
 121:src/kernel.cpp **** 
 626              		.loc 1 121 17 is_stmt 1
 121:src/kernel.cpp **** 
 627              		.loc 1 121 27 is_stmt 0
 628 0314 E38C04E4 		beqz	s1,.L9
 121:src/kernel.cpp **** 
 629              		.loc 1 121 24 discriminator 1
 630 0318 13850400 		mv	a0,s1
 631 031c 97000000 		call	_ZN3SCBdlEPv@plt
 631      E7800000 
 632              	.LVL38:
 633 0324 6FF09FE4 		j	.L9
 634              	.LVL39:
 635              	.L14:
 636              	.LBE67:
 125:src/kernel.cpp ****             {
 637              		.loc 1 125 13 is_stmt 1
 126:src/kernel.cpp ****                 size_t time = (size_t)PCB::running->registers[11];
 638              		.loc 1 126 13
 639              	.LBB68:
 127:src/kernel.cpp ****                 PCB::running->timeSleeping = time;
 640              		.loc 1 127 17
 127:src/kernel.cpp ****                 PCB::running->timeSleeping = time;
 641              		.loc 1 127 24 is_stmt 0
 642 0328 83378705 		ld	a5,88(a4)
 643              	.LVL40:
 128:src/kernel.cpp ****                 SleepingProcesses::putToSleep(PCB::running);
 644              		.loc 1 128 17 is_stmt 1
 128:src/kernel.cpp ****                 SleepingProcesses::putToSleep(PCB::running);
 645              		.loc 1 128 44 is_stmt 0
 646 032c 2338F502 		sd	a5,48(a0)
 129:src/kernel.cpp ****                 break;
 647              		.loc 1 129 17 is_stmt 1
 129:src/kernel.cpp ****                 break;
 648              		.loc 1 129 46 is_stmt 0
 649 0330 97000000 		call	_ZN17SleepingProcesses10putToSleepEP3PCB@plt
 649      E7800000 
 650              	.LVL41:
 130:src/kernel.cpp ****             }
 651              		.loc 1 130 17 is_stmt 1
 652 0338 6FF05FE3 		j	.L9
 653              	.L12:
 654              	.LBE68:
 132:src/kernel.cpp ****             {
 655              		.loc 1 132 13
 133:src/kernel.cpp ****                 char character = PCB::running->registers[11];
 656              		.loc 1 133 13
 657              	.LBB69:
 134:src/kernel.cpp ****                 CCB::outputBuffer.pushBack(character);
 658              		.loc 1 134 17
 659              	.LVL42:
 135:src/kernel.cpp ****                 CCB::semOutput->signal();
GAS LISTING /tmp/ccv3794N.s 			page 22


 660              		.loc 1 135 17
 135:src/kernel.cpp ****                 CCB::semOutput->signal();
 661              		.loc 1 135 43 is_stmt 0
 662 033c 83458705 		lbu	a1,88(a4)
 663 0340 17050000 		la	a0,_ZN3CCB12outputBufferE
 663      03350500 
 664 0348 97000000 		call	_ZN8IOBuffer8pushBackEc@plt
 664      E7800000 
 665              	.LVL43:
 136:src/kernel.cpp ****                 break;
 666              		.loc 1 136 17 is_stmt 1
 136:src/kernel.cpp ****                 break;
 667              		.loc 1 136 39 is_stmt 0
 668 0350 97070000 		la	a5,_ZN3CCB9semOutputE
 668      83B70700 
 669 0358 03B50700 		ld	a0,0(a5)
 670 035c 97000000 		call	_ZN3SCB6signalEv@plt
 670      E7800000 
 671              	.LVL44:
 137:src/kernel.cpp ****             }
 672              		.loc 1 137 17 is_stmt 1
 673 0364 6FF09FE0 		j	.L9
 674              	.L13:
 675              	.LBE69:
 139:src/kernel.cpp ****             {
 676              		.loc 1 139 13
 140:src/kernel.cpp ****                 CCB::semInput->signal();
 677              		.loc 1 140 13
 141:src/kernel.cpp ****                 while(CCB::inputBuffer.peekFront() == 0) {
 678              		.loc 1 141 17
 141:src/kernel.cpp ****                 while(CCB::inputBuffer.peekFront() == 0) {
 679              		.loc 1 141 38 is_stmt 0
 680 0368 97070000 		la	a5,_ZN3CCB8semInputE
 680      83B70700 
 681 0370 03B50700 		ld	a0,0(a5)
 682 0374 97000000 		call	_ZN3SCB6signalEv@plt
 682      E7800000 
 683              	.LVL45:
 684              	.L30:
 142:src/kernel.cpp ****                     CCB::inputBufferEmpty->wait();
 685              		.loc 1 142 17 is_stmt 1
 142:src/kernel.cpp ****                     CCB::inputBufferEmpty->wait();
 686              		.loc 1 142 52
 142:src/kernel.cpp ****                     CCB::inputBufferEmpty->wait();
 687              		.loc 1 142 49 is_stmt 0
 688 037c 17050000 		la	a0,_ZN3CCB11inputBufferE
 688      03350500 
 689 0384 97000000 		call	_ZN8IOBuffer9peekFrontEv@plt
 689      E7800000 
 690              	.LVL46:
 142:src/kernel.cpp ****                     CCB::inputBufferEmpty->wait();
 691              		.loc 1 142 52
 692 038c 631E0500 		bnez	a0,.L29
 143:src/kernel.cpp ****                 }
 693              		.loc 1 143 21 is_stmt 1
 143:src/kernel.cpp ****                 }
 694              		.loc 1 143 48 is_stmt 0
GAS LISTING /tmp/ccv3794N.s 			page 23


 695 0390 97070000 		la	a5,_ZN3CCB16inputBufferEmptyE
 695      83B70700 
 696 0398 03B50700 		ld	a0,0(a5)
 697 039c 97000000 		call	_ZN3SCB4waitEv@plt
 697      E7800000 
 698              	.LVL47:
 142:src/kernel.cpp ****                     CCB::inputBufferEmpty->wait();
 699              		.loc 1 142 17
 700 03a4 6FF09FFD 		j	.L30
 701              	.L29:
 146:src/kernel.cpp ****                 break;
 702              		.loc 1 146 17 is_stmt 1
 146:src/kernel.cpp ****                 break;
 703              		.loc 1 146 72 is_stmt 0
 704 03a8 17050000 		la	a0,_ZN3CCB11inputBufferE
 704      03350500 
 705 03b0 97000000 		call	_ZN8IOBuffer8popFrontEv@plt
 705      E7800000 
 706              	.LVL48:
 146:src/kernel.cpp ****                 break;
 707              		.loc 1 146 31
 708 03b8 97070000 		la	a5,_ZN3PCB7runningE
 708      83B70700 
 709 03c0 83B70700 		ld	a5,0(a5)
 710 03c4 83B78701 		ld	a5,24(a5)
 146:src/kernel.cpp ****                 break;
 711              		.loc 1 146 45
 712 03c8 23B8A704 		sd	a0,80(a5)
 147:src/kernel.cpp ****             }
 713              		.loc 1 147 17 is_stmt 1
 714 03cc 6FF01FDA 		j	.L9
 715              	.L10:
 149:src/kernel.cpp ****             {
 716              		.loc 1 149 13
 150:src/kernel.cpp ****                 sstatus = sstatus & ~Kernel::BitMaskSstatus::SSTATUS_SPP;
 717              		.loc 1 150 13
 151:src/kernel.cpp ****                 break;
 718              		.loc 1 151 17
 151:src/kernel.cpp ****                 break;
 719              		.loc 1 151 27 is_stmt 0
 720 03d0 833784FC 		ld	a5,-56(s0)
 151:src/kernel.cpp ****                 break;
 721              		.loc 1 151 35
 722 03d4 93F7F7EF 		andi	a5,a5,-257
 151:src/kernel.cpp ****                 break;
 723              		.loc 1 151 25
 724 03d8 2334F4FC 		sd	a5,-56(s0)
 152:src/kernel.cpp ****             }
 725              		.loc 1 152 17 is_stmt 1
 726 03dc 6FF01FD9 		j	.L9
 727              	.L36:
 728              	.LBE70:
 729              	.LBE75:
 730              	.LBE76:
 731              	.LBB77:
 162:src/kernel.cpp ****         SleepingProcesses::wakeUp(); // budi uspavane procese ako su postojali, ako ne smanjuje per
 732              		.loc 1 162 9
GAS LISTING /tmp/ccv3794N.s 			page 24


 162:src/kernel.cpp ****         SleepingProcesses::wakeUp(); // budi uspavane procese ako su postojali, ako ne smanjuje per
 733              		.loc 1 162 30 is_stmt 0
 734 03e0 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 734      83B40400 
 735 03e8 83B70400 		ld	a5,0(s1)
 736 03ec 93871700 		addi	a5,a5,1
 737 03f0 23B0F400 		sd	a5,0(s1)
 163:src/kernel.cpp ****         if(PCB::timeSliceCounter >= PCB::running->timeSlice) {
 738              		.loc 1 163 9 is_stmt 1
 163:src/kernel.cpp ****         if(PCB::timeSliceCounter >= PCB::running->timeSlice) {
 739              		.loc 1 163 34 is_stmt 0
 740 03f4 97000000 		call	_ZN17SleepingProcesses6wakeUpEv@plt
 740      E7800000 
 741              	.LVL49:
 164:src/kernel.cpp ****             PCB::timeSliceCounter = 0;
 742              		.loc 1 164 9 is_stmt 1
 164:src/kernel.cpp ****             PCB::timeSliceCounter = 0;
 743              		.loc 1 164 51 is_stmt 0
 744 03fc 97070000 		la	a5,_ZN3PCB7runningE
 744      83B70700 
 745 0404 83B70700 		ld	a5,0(a5)
 746 0408 03B70704 		ld	a4,64(a5)
 164:src/kernel.cpp ****             PCB::timeSliceCounter = 0;
 747              		.loc 1 164 34
 748 040c 83B70400 		ld	a5,0(s1)
 164:src/kernel.cpp ****             PCB::timeSliceCounter = 0;
 749              		.loc 1 164 9
 750 0410 63F8E700 		bleu	a4,a5,.L40
 751              	.L32:
 170:src/kernel.cpp ****     }
 752              		.loc 1 170 9 is_stmt 1
 753              	.LVL50:
 754              	.LBB47:
 755              	.LBB48:
  95:src/../h/kernel.h ****     }
 756              		.loc 2 95 9
  95:src/../h/kernel.h ****     }
 757              		.loc 2 95 68 is_stmt 0
 758 0414 93072000 		li	a5,2
 759              	#APP
 760              	# 95 "src/../h/kernel.h" 1
  96:src/../h/kernel.h **** 
 761              		csrc sip, a5
 762              	# 0 "" 2
 763              		.loc 2 96 5
 764              	#NO_APP
 765 041c 6FF01FD6 		j	.L5
 766              	.LVL51:
 767              	.L40:
 768              	.LBE48:
 769              	.LBE47:
 165:src/kernel.cpp ****             PCB::dispatch(); // vrsimo promenu konteksta ako je istekao time slice procesa
 770              		.loc 1 165 13 is_stmt 1
 165:src/kernel.cpp ****             PCB::dispatch(); // vrsimo promenu konteksta ako je istekao time slice procesa
 771              		.loc 1 165 35 is_stmt 0
 772 0420 23B00400 		sd	zero,0(s1)
 166:src/kernel.cpp ****             Kernel::w_sepc(sepc);
GAS LISTING /tmp/ccv3794N.s 			page 25


 773              		.loc 1 166 13 is_stmt 1
 166:src/kernel.cpp ****             Kernel::w_sepc(sepc);
 774              		.loc 1 166 26 is_stmt 0
 775 0424 97000000 		call	_ZN3PCB8dispatchEv@plt
 775      E7800000 
 776              	.LVL52:
 167:src/kernel.cpp ****             Kernel::w_sstatus(sstatus);
 777              		.loc 1 167 13 is_stmt 1
 167:src/kernel.cpp ****             Kernel::w_sstatus(sstatus);
 778              		.loc 1 167 27 is_stmt 0
 779 042c 833704FD 		ld	a5,-48(s0)
 780              	.LVL53:
 781              	.LBB49:
 782              	.LBB50:
  55:src/../h/kernel.h ****     }
 783              		.loc 2 55 9 is_stmt 1
  55:src/../h/kernel.h ****     }
 784              		.loc 2 55 69 is_stmt 0
 785              	#APP
 786              	# 55 "src/../h/kernel.h" 1
 787              		csrw sepc, a5
 788              	# 0 "" 2
 789              	.LVL54:
 790              	#NO_APP
 791              	.LBE50:
 792              	.LBE49:
 168:src/kernel.cpp ****         }
 793              		.loc 1 168 13 is_stmt 1
 168:src/kernel.cpp ****         }
 794              		.loc 1 168 30 is_stmt 0
 795 0434 833784FC 		ld	a5,-56(s0)
 796              	.LVL55:
 797              	.LBB51:
 798              	.LBB52:
 136:src/../h/kernel.h ****     }
 799              		.loc 2 136 9 is_stmt 1
 136:src/../h/kernel.h ****     }
 800              		.loc 2 136 81 is_stmt 0
 801              	#APP
 802              	# 136 "src/../h/kernel.h" 1
 803              		csrw sstatus, a5
 804              	# 0 "" 2
 805              		.loc 2 137 5
 806              	#NO_APP
 807 043c 6FF09FFD 		j	.L32
 808              	.LVL56:
 809              	.L37:
 810              	.LBE52:
 811              	.LBE51:
 812              	.LBB53:
 813              	.LBB46:
 173:src/kernel.cpp ****         if(code == CONSOLE_IRQ) {
 814              		.loc 1 173 9 is_stmt 1
 173:src/kernel.cpp ****         if(code == CONSOLE_IRQ) {
 815              		.loc 1 173 33 is_stmt 0
 816 0440 97000000 		call	plic_claim@plt
 816      E7800000 
GAS LISTING /tmp/ccv3794N.s 			page 26


 817              	.LVL57:
 174:src/kernel.cpp ****             if(*(char*)CONSOLE_STATUS & CONSOLE_TX_STATUS_BIT) { // putc
 818              		.loc 1 174 9 is_stmt 1
 185:src/kernel.cpp **** 
 819              		.loc 1 185 9
 185:src/kernel.cpp **** 
 820              		.loc 1 185 22 is_stmt 0
 821 0448 97000000 		call	plic_complete@plt
 821      E7800000 
 822              	.LVL58:
 823              	.LBE46:
 824 0450 6FF0DFD2 		j	.L5
 825              	.LBE53:
 826              	.LBE77:
 827              	.LBE80:
 828              		.cfi_endproc
 829              	.LFE46:
 831              	.Letext0:
 832              		.file 4 "src/../h/hw.h"
 833              		.file 5 "src/../h/slab.h"
 834              		.file 6 "src/../h/PCB.h"
 835              		.file 7 "src/../h/Scheduler.h"
 836              		.file 8 "src/../h/SCB.h"
 837              		.file 9 "src/../h/SleepingProcesses.h"
 838              		.file 10 "src/../h/CCB.h"
 839              		.file 11 "src/../h/syscall_c.h"
GAS LISTING /tmp/ccv3794N.s 			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 kernel.cpp
     /tmp/ccv3794N.s:9      .text:0000000000000000 _ZN6Kernel10popSppSpieEv
     /tmp/ccv3794N.s:13     .text:0000000000000000 .L0 
     /tmp/ccv3794N.s:14     .text:0000000000000000 .L0 
     /tmp/ccv3794N.s:15     .text:0000000000000004 .L0 
     /tmp/ccv3794N.s:17     .text:0000000000000008 .L0 
     /tmp/ccv3794N.s:19     .text:000000000000000c .L0 
     /tmp/ccv3794N.s:21     .text:000000000000000c .L0 
      src/kernel.cpp:11     .text:000000000000000c .L0 
     /tmp/ccv3794N.s:27     .text:0000000000000010 .L0 
      src/kernel.cpp:12     .text:0000000000000010 .L0 
     /tmp/ccv3794N.s:33     .text:0000000000000014 .L0 
     /tmp/ccv3794N.s:34     .text:0000000000000018 .L0 
     /tmp/ccv3794N.s:35     .text:0000000000000018 .L0 
     /tmp/ccv3794N.s:37     .text:000000000000001c .L0 
     /tmp/ccv3794N.s:39     .text:0000000000000020 .L0 
     /tmp/ccv3794N.s:45     .text:0000000000000020 _Z5kPutcc
     /tmp/ccv3794N.s:48     .text:0000000000000020 .L0 
     /tmp/ccv3794N.s:50     .text:0000000000000020 .L0 
     /tmp/ccv3794N.s:51     .text:0000000000000024 .L0 
     /tmp/ccv3794N.s:54     .text:000000000000002c .L0 
     /tmp/ccv3794N.s:55     .text:000000000000002c .L0 
     /tmp/ccv3794N.s:57     .text:0000000000000030 .L0 
     /tmp/ccv3794N.s:60     .text:0000000000000034 .L0 
     /tmp/ccv3794N.s:61     .text:0000000000000034 .L0 
     /tmp/ccv3794N.s:66     .text:0000000000000044 .L0 
     /tmp/ccv3794N.s:67     .text:0000000000000044 .L0 
     /tmp/ccv3794N.s:72     .text:0000000000000058 .L0 
     /tmp/ccv3794N.s:73     .text:000000000000005c .L0 
     /tmp/ccv3794N.s:75     .text:0000000000000060 .L0 
     /tmp/ccv3794N.s:76     .text:0000000000000060 .L0 
     /tmp/ccv3794N.s:78     .text:0000000000000064 .L0 
     /tmp/ccv3794N.s:80     .text:0000000000000068 .L0 
     /tmp/ccv3794N.s:86     .text:0000000000000068 interruptHandler
     /tmp/ccv3794N.s:89     .text:0000000000000068 .L0 
     /tmp/ccv3794N.s:90     .text:0000000000000068 .L0 
     /tmp/ccv3794N.s:91     .text:000000000000006c .L0 
     /tmp/ccv3794N.s:95     .text:0000000000000078 .L0 
     /tmp/ccv3794N.s:96     .text:0000000000000078 .L0 
     /tmp/ccv3794N.s:97     .text:0000000000000078 .L0 
     /tmp/ccv3794N.s:99     .text:000000000000007c .L0 
     /tmp/ccv3794N.s:104    .text:000000000000007c .L0 
     /tmp/ccv3794N.s:105    .text:000000000000007c .L0 
     /tmp/ccv3794N.s:106    .text:000000000000007c .L0 
   src/../h/kernel.h:37     .text:000000000000007c .L0 
     /tmp/ccv3794N.s:114    .text:0000000000000084 .L0 
     /tmp/ccv3794N.s:115    .text:0000000000000084 .L0 
     /tmp/ccv3794N.s:119    .text:0000000000000088 .L0 
     /tmp/ccv3794N.s:123    .text:000000000000008c .L0 
     /tmp/ccv3794N.s:124    .text:000000000000008c .L0 
     /tmp/ccv3794N.s:125    .text:000000000000008c .L0 
   src/../h/kernel.h:49     .text:000000000000008c .L0 
     /tmp/ccv3794N.s:133    .text:0000000000000094 .L0 
     /tmp/ccv3794N.s:134    .text:0000000000000094 .L0 
     /tmp/ccv3794N.s:138    .text:0000000000000098 .L0 
     /tmp/ccv3794N.s:142    .text:000000000000009c .L0 
GAS LISTING /tmp/ccv3794N.s 			page 28


     /tmp/ccv3794N.s:143    .text:000000000000009c .L0 
     /tmp/ccv3794N.s:144    .text:000000000000009c .L0 
   src/../h/kernel.h:130    .text:000000000000009c .L0 
     /tmp/ccv3794N.s:152    .text:00000000000000a4 .L0 
     /tmp/ccv3794N.s:153    .text:00000000000000a4 .L0 
     /tmp/ccv3794N.s:157    .text:00000000000000a8 .L0 
     /tmp/ccv3794N.s:160    .text:00000000000000ac .L0 
     /tmp/ccv3794N.s:161    .text:00000000000000ac .L0 
     /tmp/ccv3794N.s:163    .text:00000000000000b0 .L0 
     /tmp/ccv3794N.s:166    .text:00000000000000b8 .L0 
     /tmp/ccv3794N.s:168    .text:00000000000000bc .L0 
     /tmp/ccv3794N.s:174    .text:00000000000000c4 .L0 
     /tmp/ccv3794N.s:175    .text:00000000000000c4 .L0 
     /tmp/ccv3794N.s:177    .text:00000000000000c8 .L0 
     /tmp/ccv3794N.s:187    .text:00000000000000d8 .L0 
     /tmp/ccv3794N.s:188    .text:00000000000000d8 .L0 
     /tmp/ccv3794N.s:190    .text:00000000000000dc .L0 
     /tmp/ccv3794N.s:195    .text:00000000000000ec .L0 
     /tmp/ccv3794N.s:196    .text:00000000000000ec .L0 
     /tmp/ccv3794N.s:205    .text:00000000000000fc .L0 
     /tmp/ccv3794N.s:206    .text:00000000000000fc .L0 
     /tmp/ccv3794N.s:210    .text:0000000000000108 .L0 
     /tmp/ccv3794N.s:211    .text:0000000000000108 .L0 
     /tmp/ccv3794N.s:215    .text:0000000000000118 .L0 
     /tmp/ccv3794N.s:219    .text:0000000000000120 .L0 
     /tmp/ccv3794N.s:220    .text:0000000000000120 .L0 
     /tmp/ccv3794N.s:305    .text:0000000000000148 .L0 
     /tmp/ccv3794N.s:307    .text:0000000000000148 .L0 
     /tmp/ccv3794N.s:308    .text:0000000000000148 .L0 
     /tmp/ccv3794N.s:309    .text:0000000000000148 .L0 
     /tmp/ccv3794N.s:315    .text:000000000000014c .L0 
     /tmp/ccv3794N.s:318    .text:000000000000014c .L0 
     /tmp/ccv3794N.s:319    .text:000000000000014c .L0 
     /tmp/ccv3794N.s:320    .text:000000000000014c .L0 
     /tmp/ccv3794N.s:325    .text:0000000000000158 .L0 
     /tmp/ccv3794N.s:329    .text:0000000000000168 .L0 
     /tmp/ccv3794N.s:335    .text:000000000000016c .L0 
     /tmp/ccv3794N.s:336    .text:000000000000016c .L0 
     /tmp/ccv3794N.s:337    .text:000000000000016c .L0 
     /tmp/ccv3794N.s:342    .text:0000000000000170 .L0 
   src/../h/kernel.h:55     .text:0000000000000170 .L0 
     /tmp/ccv3794N.s:352    .text:0000000000000174 .L0 
     /tmp/ccv3794N.s:353    .text:0000000000000174 .L0 
     /tmp/ccv3794N.s:358    .text:0000000000000178 .L0 
   src/../h/kernel.h:136    .text:0000000000000178 .L0 
     /tmp/ccv3794N.s:371    .text:000000000000017c .L0 
     /tmp/ccv3794N.s:372    .text:000000000000017c .L0 
     /tmp/ccv3794N.s:373    .text:0000000000000180 .L0 
     /tmp/ccv3794N.s:374    .text:0000000000000180 .L0 
     /tmp/ccv3794N.s:376    .text:0000000000000184 .L0 
     /tmp/ccv3794N.s:377    .text:0000000000000184 .L0 
     /tmp/ccv3794N.s:379    .text:0000000000000188 .L0 
     /tmp/ccv3794N.s:381    .text:000000000000018c .L0 
     /tmp/ccv3794N.s:384    .text:0000000000000190 .L0 
     /tmp/ccv3794N.s:390    .text:0000000000000190 .L0 
     /tmp/ccv3794N.s:392    .text:0000000000000190 .L0 
     /tmp/ccv3794N.s:394    .text:0000000000000190 .L0 
GAS LISTING /tmp/ccv3794N.s 			page 29


     /tmp/ccv3794N.s:395    .text:0000000000000190 .L0 
     /tmp/ccv3794N.s:396    .text:0000000000000190 .L0 
     /tmp/ccv3794N.s:400    .text:000000000000019c .L0 
     /tmp/ccv3794N.s:404    .text:00000000000001ac .L0 
     /tmp/ccv3794N.s:406    .text:00000000000001b0 .L0 
     /tmp/ccv3794N.s:410    .text:00000000000001b4 .L0 
     /tmp/ccv3794N.s:411    .text:00000000000001b4 .L0 
     /tmp/ccv3794N.s:412    .text:00000000000001b4 .L0 
     /tmp/ccv3794N.s:413    .text:00000000000001b4 .L0 
     /tmp/ccv3794N.s:416    .text:00000000000001c0 .L0 
     /tmp/ccv3794N.s:417    .text:00000000000001c0 .L0 
     /tmp/ccv3794N.s:420    .text:00000000000001c8 .L0 
     /tmp/ccv3794N.s:423    .text:00000000000001cc .L0 
     /tmp/ccv3794N.s:424    .text:00000000000001cc .L0 
     /tmp/ccv3794N.s:425    .text:00000000000001cc .L0 
     /tmp/ccv3794N.s:426    .text:00000000000001cc .L0 
     /tmp/ccv3794N.s:429    .text:00000000000001d4 .L0 
     /tmp/ccv3794N.s:430    .text:00000000000001d4 .L0 
     /tmp/ccv3794N.s:433    .text:00000000000001e0 .L0 
     /tmp/ccv3794N.s:434    .text:00000000000001e0 .L0 
     /tmp/ccv3794N.s:437    .text:00000000000001e8 .L0 
     /tmp/ccv3794N.s:438    .text:00000000000001e8 .L0 
     /tmp/ccv3794N.s:442    .text:00000000000001f8 .L0 
     /tmp/ccv3794N.s:444    .text:00000000000001fc .L0 
     /tmp/ccv3794N.s:447    .text:0000000000000200 .L0 
     /tmp/ccv3794N.s:449    .text:0000000000000200 .L0 
     /tmp/ccv3794N.s:450    .text:0000000000000200 .L0 
     /tmp/ccv3794N.s:451    .text:0000000000000200 .L0 
     /tmp/ccv3794N.s:454    .text:0000000000000204 .L0 
     /tmp/ccv3794N.s:455    .text:0000000000000204 .L0 
     /tmp/ccv3794N.s:459    .text:0000000000000210 .L0 
     /tmp/ccv3794N.s:463    .text:0000000000000214 .L0 
     /tmp/ccv3794N.s:465    .text:0000000000000214 .L0 
     /tmp/ccv3794N.s:466    .text:0000000000000214 .L0 
     /tmp/ccv3794N.s:467    .text:0000000000000214 .L0 
     /tmp/ccv3794N.s:470    .text:0000000000000218 .L0 
     /tmp/ccv3794N.s:471    .text:0000000000000218 .L0 
     /tmp/ccv3794N.s:474    .text:000000000000021c .L0 
     /tmp/ccv3794N.s:475    .text:000000000000021c .L0 
     /tmp/ccv3794N.s:478    .text:0000000000000220 .L0 
     /tmp/ccv3794N.s:479    .text:0000000000000220 .L0 
     /tmp/ccv3794N.s:481    .text:0000000000000224 .L0 
     /tmp/ccv3794N.s:484    .text:000000000000022c .L0 
     /tmp/ccv3794N.s:485    .text:000000000000022c .L0 
     /tmp/ccv3794N.s:488    .text:0000000000000234 .L0 
     /tmp/ccv3794N.s:491    .text:0000000000000238 .L0 
     /tmp/ccv3794N.s:492    .text:0000000000000238 .L0 
     /tmp/ccv3794N.s:496    .text:0000000000000248 .L0 
     /tmp/ccv3794N.s:498    .text:000000000000024c .L0 
     /tmp/ccv3794N.s:499    .text:000000000000024c .L0 
     /tmp/ccv3794N.s:501    .text:0000000000000250 .L0 
     /tmp/ccv3794N.s:503    .text:0000000000000254 .L0 
     /tmp/ccv3794N.s:504    .text:0000000000000254 .L0 
     /tmp/ccv3794N.s:506    .text:0000000000000258 .L0 
     /tmp/ccv3794N.s:509    .text:000000000000025c .L0 
     /tmp/ccv3794N.s:510    .text:000000000000025c .L0 
     /tmp/ccv3794N.s:512    .text:0000000000000260 .L0 
GAS LISTING /tmp/ccv3794N.s 			page 30


     /tmp/ccv3794N.s:513    .text:0000000000000260 .L0 
     /tmp/ccv3794N.s:517    .text:0000000000000268 .L0 
     /tmp/ccv3794N.s:519    .text:000000000000026c .L0 
     /tmp/ccv3794N.s:521    .text:0000000000000270 .L0 
     /tmp/ccv3794N.s:523    .text:0000000000000274 .L0 
     /tmp/ccv3794N.s:527    .text:0000000000000278 .L0 
     /tmp/ccv3794N.s:528    .text:0000000000000278 .L0 
     /tmp/ccv3794N.s:531    .text:0000000000000280 .L0 
     /tmp/ccv3794N.s:537    .text:0000000000000288 .L0 
     /tmp/ccv3794N.s:539    .text:0000000000000288 .L0 
     /tmp/ccv3794N.s:540    .text:0000000000000288 .L0 
     /tmp/ccv3794N.s:541    .text:0000000000000288 .L0 
     /tmp/ccv3794N.s:544    .text:000000000000028c .L0 
     /tmp/ccv3794N.s:545    .text:000000000000028c .L0 
     /tmp/ccv3794N.s:548    .text:0000000000000290 .L0 
     /tmp/ccv3794N.s:549    .text:0000000000000290 .L0 
     /tmp/ccv3794N.s:551    .text:0000000000000294 .L0 
     /tmp/ccv3794N.s:554    .text:000000000000029c .L0 
     /tmp/ccv3794N.s:555    .text:000000000000029c .L0 
     /tmp/ccv3794N.s:558    .text:00000000000002a4 .L0 
     /tmp/ccv3794N.s:561    .text:00000000000002a8 .L0 
     /tmp/ccv3794N.s:562    .text:00000000000002a8 .L0 
     /tmp/ccv3794N.s:566    .text:00000000000002b8 .L0 
     /tmp/ccv3794N.s:568    .text:00000000000002bc .L0 
     /tmp/ccv3794N.s:572    .text:00000000000002c0 .L0 
     /tmp/ccv3794N.s:573    .text:00000000000002c0 .L0 
     /tmp/ccv3794N.s:576    .text:00000000000002c8 .L0 
     /tmp/ccv3794N.s:582    .text:00000000000002d0 .L0 
     /tmp/ccv3794N.s:584    .text:00000000000002d0 .L0 
     /tmp/ccv3794N.s:585    .text:00000000000002d0 .L0 
     /tmp/ccv3794N.s:586    .text:00000000000002d0 .L0 
     /tmp/ccv3794N.s:587    .text:00000000000002d0 .L0 
     /tmp/ccv3794N.s:591    .text:00000000000002dc .L0 
     /tmp/ccv3794N.s:595    .text:00000000000002ec .L0 
     /tmp/ccv3794N.s:597    .text:00000000000002f0 .L0 
     /tmp/ccv3794N.s:601    .text:00000000000002f4 .L0 
     /tmp/ccv3794N.s:603    .text:00000000000002f4 .L0 
     /tmp/ccv3794N.s:605    .text:00000000000002f4 .L0 
     /tmp/ccv3794N.s:606    .text:00000000000002f4 .L0 
     /tmp/ccv3794N.s:607    .text:00000000000002f4 .L0 
     /tmp/ccv3794N.s:611    .text:0000000000000300 .L0 
     /tmp/ccv3794N.s:615    .text:0000000000000304 .L0 
     /tmp/ccv3794N.s:617    .text:0000000000000304 .L0 
     /tmp/ccv3794N.s:618    .text:0000000000000304 .L0 
     /tmp/ccv3794N.s:619    .text:0000000000000304 .L0 
     /tmp/ccv3794N.s:622    .text:0000000000000308 .L0 
     /tmp/ccv3794N.s:623    .text:0000000000000308 .L0 
     /tmp/ccv3794N.s:627    .text:0000000000000314 .L0 
     /tmp/ccv3794N.s:628    .text:0000000000000314 .L0 
     /tmp/ccv3794N.s:630    .text:0000000000000318 .L0 
     /tmp/ccv3794N.s:638    .text:0000000000000328 .L0 
     /tmp/ccv3794N.s:640    .text:0000000000000328 .L0 
     /tmp/ccv3794N.s:641    .text:0000000000000328 .L0 
     /tmp/ccv3794N.s:642    .text:0000000000000328 .L0 
     /tmp/ccv3794N.s:645    .text:000000000000032c .L0 
     /tmp/ccv3794N.s:646    .text:000000000000032c .L0 
     /tmp/ccv3794N.s:648    .text:0000000000000330 .L0 
GAS LISTING /tmp/ccv3794N.s 			page 31


     /tmp/ccv3794N.s:649    .text:0000000000000330 .L0 
     /tmp/ccv3794N.s:652    .text:0000000000000338 .L0 
     /tmp/ccv3794N.s:656    .text:000000000000033c .L0 
     /tmp/ccv3794N.s:658    .text:000000000000033c .L0 
     /tmp/ccv3794N.s:660    .text:000000000000033c .L0 
     /tmp/ccv3794N.s:661    .text:000000000000033c .L0 
     /tmp/ccv3794N.s:662    .text:000000000000033c .L0 
     /tmp/ccv3794N.s:667    .text:0000000000000350 .L0 
     /tmp/ccv3794N.s:668    .text:0000000000000350 .L0 
     /tmp/ccv3794N.s:673    .text:0000000000000364 .L0 
     /tmp/ccv3794N.s:677    .text:0000000000000368 .L0 
     /tmp/ccv3794N.s:678    .text:0000000000000368 .L0 
     /tmp/ccv3794N.s:679    .text:0000000000000368 .L0 
     /tmp/ccv3794N.s:680    .text:0000000000000368 .L0 
     /tmp/ccv3794N.s:686    .text:000000000000037c .L0 
     /tmp/ccv3794N.s:687    .text:000000000000037c .L0 
     /tmp/ccv3794N.s:688    .text:000000000000037c .L0 
     /tmp/ccv3794N.s:692    .text:000000000000038c .L0 
     /tmp/ccv3794N.s:694    .text:0000000000000390 .L0 
     /tmp/ccv3794N.s:695    .text:0000000000000390 .L0 
     /tmp/ccv3794N.s:700    .text:00000000000003a4 .L0 
     /tmp/ccv3794N.s:703    .text:00000000000003a8 .L0 
     /tmp/ccv3794N.s:704    .text:00000000000003a8 .L0 
     /tmp/ccv3794N.s:708    .text:00000000000003b8 .L0 
     /tmp/ccv3794N.s:712    .text:00000000000003c8 .L0 
     /tmp/ccv3794N.s:714    .text:00000000000003cc .L0 
     /tmp/ccv3794N.s:717    .text:00000000000003d0 .L0 
     /tmp/ccv3794N.s:718    .text:00000000000003d0 .L0 
     /tmp/ccv3794N.s:719    .text:00000000000003d0 .L0 
     /tmp/ccv3794N.s:720    .text:00000000000003d0 .L0 
     /tmp/ccv3794N.s:722    .text:00000000000003d4 .L0 
     /tmp/ccv3794N.s:724    .text:00000000000003d8 .L0 
     /tmp/ccv3794N.s:726    .text:00000000000003dc .L0 
     /tmp/ccv3794N.s:733    .text:00000000000003e0 .L0 
     /tmp/ccv3794N.s:734    .text:00000000000003e0 .L0 
     /tmp/ccv3794N.s:739    .text:00000000000003f4 .L0 
     /tmp/ccv3794N.s:740    .text:00000000000003f4 .L0 
     /tmp/ccv3794N.s:743    .text:00000000000003fc .L0 
     /tmp/ccv3794N.s:744    .text:00000000000003fc .L0 
     /tmp/ccv3794N.s:748    .text:000000000000040c .L0 
     /tmp/ccv3794N.s:750    .text:0000000000000410 .L0 
     /tmp/ccv3794N.s:756    .text:0000000000000414 .L0 
     /tmp/ccv3794N.s:757    .text:0000000000000414 .L0 
     /tmp/ccv3794N.s:758    .text:0000000000000414 .L0 
     /tmp/ccv3794N.s:765    .text:000000000000041c .L0 
     /tmp/ccv3794N.s:771    .text:0000000000000420 .L0 
     /tmp/ccv3794N.s:772    .text:0000000000000420 .L0 
     /tmp/ccv3794N.s:774    .text:0000000000000424 .L0 
     /tmp/ccv3794N.s:775    .text:0000000000000424 .L0 
     /tmp/ccv3794N.s:778    .text:000000000000042c .L0 
     /tmp/ccv3794N.s:779    .text:000000000000042c .L0 
     /tmp/ccv3794N.s:784    .text:0000000000000430 .L0 
   src/../h/kernel.h:55     .text:0000000000000430 .L0 
     /tmp/ccv3794N.s:794    .text:0000000000000434 .L0 
     /tmp/ccv3794N.s:795    .text:0000000000000434 .L0 
     /tmp/ccv3794N.s:800    .text:0000000000000438 .L0 
   src/../h/kernel.h:136    .text:0000000000000438 .L0 
GAS LISTING /tmp/ccv3794N.s 			page 32


     /tmp/ccv3794N.s:807    .text:000000000000043c .L0 
     /tmp/ccv3794N.s:815    .text:0000000000000440 .L0 
     /tmp/ccv3794N.s:816    .text:0000000000000440 .L0 
     /tmp/ccv3794N.s:819    .text:0000000000000448 .L0 
     /tmp/ccv3794N.s:820    .text:0000000000000448 .L0 
     /tmp/ccv3794N.s:821    .text:0000000000000448 .L0 
     /tmp/ccv3794N.s:828    .text:0000000000000454 .L0 
     /tmp/ccv3794N.s:840    .text:0000000000000454 .L0 
     /tmp/ccv3794N.s:61     .text:0000000000000034 .L0 
     /tmp/ccv3794N.s:67     .text:0000000000000044 .L0 
     /tmp/ccv3794N.s:211    .text:0000000000000108 .L0 
     /tmp/ccv3794N.s:232    .rodata:0000000000000000 .L11
     /tmp/ccv3794N.s:224    .text:0000000000000130 .L0 
     /tmp/ccv3794N.s:325    .text:0000000000000158 .L0 
     /tmp/ccv3794N.s:400    .text:000000000000019c .L0 
     /tmp/ccv3794N.s:413    .text:00000000000001b4 .L0 
     /tmp/ccv3794N.s:430    .text:00000000000001d4 .L0 
     /tmp/ccv3794N.s:438    .text:00000000000001e8 .L0 
     /tmp/ccv3794N.s:492    .text:0000000000000238 .L0 
     /tmp/ccv3794N.s:562    .text:00000000000002a8 .L0 
     /tmp/ccv3794N.s:591    .text:00000000000002dc .L0 
     /tmp/ccv3794N.s:663    .text:0000000000000340 .L0 
     /tmp/ccv3794N.s:668    .text:0000000000000350 .L0 
     /tmp/ccv3794N.s:680    .text:0000000000000368 .L0 
     /tmp/ccv3794N.s:688    .text:000000000000037c .L0 
     /tmp/ccv3794N.s:695    .text:0000000000000390 .L0 
     /tmp/ccv3794N.s:704    .text:00000000000003a8 .L0 
     /tmp/ccv3794N.s:708    .text:00000000000003b8 .L0 
     /tmp/ccv3794N.s:734    .text:00000000000003e0 .L0 
     /tmp/ccv3794N.s:744    .text:00000000000003fc .L0 
     /tmp/ccv3794N.s:200    .text:00000000000000fc .L6
     /tmp/ccv3794N.s:727    .text:00000000000003e0 .L36
     /tmp/ccv3794N.s:809    .text:0000000000000440 .L37
     /tmp/ccv3794N.s:368    .text:000000000000017c .L5
     /tmp/ccv3794N.s:331    .text:000000000000016c .L9
     /tmp/ccv3794N.s:525    .text:0000000000000278 .L38
     /tmp/ccv3794N.s:489    .text:0000000000000238 .L26
     /tmp/ccv3794N.s:570    .text:00000000000002c0 .L39
     /tmp/ccv3794N.s:559    .text:00000000000002a8 .L28
     /tmp/ccv3794N.s:701    .text:00000000000003a8 .L29
     /tmp/ccv3794N.s:684    .text:000000000000037c .L30
     /tmp/ccv3794N.s:767    .text:0000000000000420 .L40
     /tmp/ccv3794N.s:751    .text:0000000000000414 .L32
     /tmp/ccv3794N.s:302    .text:0000000000000148 .L24
     /tmp/ccv3794N.s:383    .text:0000000000000190 .L23
     /tmp/ccv3794N.s:460    .text:0000000000000214 .L22
     /tmp/ccv3794N.s:421    .text:00000000000001cc .L21
     /tmp/ccv3794N.s:407    .text:00000000000001b4 .L20
     /tmp/ccv3794N.s:445    .text:0000000000000200 .L19
     /tmp/ccv3794N.s:534    .text:0000000000000288 .L18
     /tmp/ccv3794N.s:612    .text:0000000000000304 .L17
     /tmp/ccv3794N.s:579    .text:00000000000002d0 .L16
     /tmp/ccv3794N.s:598    .text:00000000000002f4 .L15
     /tmp/ccv3794N.s:635    .text:0000000000000328 .L14
     /tmp/ccv3794N.s:674    .text:0000000000000368 .L13
     /tmp/ccv3794N.s:653    .text:000000000000033c .L12
     /tmp/ccv3794N.s:715    .text:00000000000003d0 .L10
GAS LISTING /tmp/ccv3794N.s 			page 33


     /tmp/ccv3794N.s:2901   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccv3794N.s:4275   .debug_str:0000000000000093 .LASF238
     /tmp/ccv3794N.s:4293   .debug_str:00000000000001ff .LASF239
     /tmp/ccv3794N.s:4397   .debug_str:0000000000000558 .LASF240
     /tmp/ccv3794N.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccv3794N.s:831    .text:0000000000000454 .Letext0
     /tmp/ccv3794N.s:4251   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccv3794N.s:4403   .debug_str:000000000000058c .LASF0
     /tmp/ccv3794N.s:4445   .debug_str:00000000000006d4 .LASF1
     /tmp/ccv3794N.s:4571   .debug_str:0000000000000ada .LASF2
     /tmp/ccv3794N.s:4581   .debug_str:0000000000000b2c .LASF4
     /tmp/ccv3794N.s:4419   .debug_str:00000000000005f6 .LASF3
     /tmp/ccv3794N.s:4265   .debug_str:0000000000000042 .LASF5
     /tmp/ccv3794N.s:4533   .debug_str:00000000000009ce .LASF6
     /tmp/ccv3794N.s:4521   .debug_str:000000000000096c .LASF7
     /tmp/ccv3794N.s:4433   .debug_str:000000000000067f .LASF8
     /tmp/ccv3794N.s:4369   .debug_str:000000000000048f .LASF9
     /tmp/ccv3794N.s:4381   .debug_str:00000000000004ed .LASF10
     /tmp/ccv3794N.s:4299   .debug_str:0000000000000225 .LASF11
     /tmp/ccv3794N.s:4359   .debug_str:0000000000000437 .LASF12
     /tmp/ccv3794N.s:4305   .debug_str:000000000000025d .LASF13
     /tmp/ccv3794N.s:4297   .debug_str:0000000000000215 .LASF14
     /tmp/ccv3794N.s:4615   .debug_str:0000000000000c1a .LASF15
     /tmp/ccv3794N.s:4337   .debug_str:0000000000000374 .LASF16
     /tmp/ccv3794N.s:4605   .debug_str:0000000000000be3 .LASF17
     /tmp/ccv3794N.s:4617   .debug_str:0000000000000c26 .LASF71
     /tmp/ccv3794N.s:4379   .debug_str:00000000000004e0 .LASF32
     /tmp/ccv3794N.s:4485   .debug_str:0000000000000807 .LASF18
     /tmp/ccv3794N.s:4625   .debug_str:0000000000000c55 .LASF19
     /tmp/ccv3794N.s:4613   .debug_str:0000000000000c0c .LASF20
     /tmp/ccv3794N.s:4475   .debug_str:00000000000007cb .LASF21
     /tmp/ccv3794N.s:4555   .debug_str:0000000000000a57 .LASF22
     /tmp/ccv3794N.s:4523   .debug_str:000000000000097f .LASF23
     /tmp/ccv3794N.s:4559   .debug_str:0000000000000a70 .LASF24
     /tmp/ccv3794N.s:4549   .debug_str:0000000000000a39 .LASF25
     /tmp/ccv3794N.s:4739   .debug_str:0000000000000fc0 .LASF26
     /tmp/ccv3794N.s:4389   .debug_str:000000000000052b .LASF27
     /tmp/ccv3794N.s:4565   .debug_str:0000000000000abb .LASF28
     /tmp/ccv3794N.s:4409   .debug_str:00000000000005b7 .LASF29
     /tmp/ccv3794N.s:4479   .debug_str:00000000000007e8 .LASF30
     /tmp/ccv3794N.s:4427   .debug_str:000000000000065b .LASF31
     /tmp/ccv3794N.s:4551   .debug_str:0000000000000a43 .LASF33
     /tmp/ccv3794N.s:4437   .debug_str:000000000000069c .LASF34
     /tmp/ccv3794N.s:4697   .debug_str:0000000000000e88 .LASF35
     /tmp/ccv3794N.s:4671   .debug_str:0000000000000dcf .LASF36
     /tmp/ccv3794N.s:4351   .debug_str:00000000000003fa .LASF37
     /tmp/ccv3794N.s:4643   .debug_str:0000000000000cd7 .LASF38
     /tmp/ccv3794N.s:4311   .debug_str:0000000000000289 .LASF39
     /tmp/ccv3794N.s:4709   .debug_str:0000000000000eeb .LASF78
     /tmp/ccv3794N.s:4415   .debug_str:00000000000005cf .LASF80
     /tmp/ccv3794N.s:4391   .debug_str:0000000000000536 .LASF98
     /tmp/ccv3794N.s:4517   .debug_str:0000000000000944 .LASF100
     /tmp/ccv3794N.s:4667   .debug_str:0000000000000db8 .LASF40
     /tmp/ccv3794N.s:4545   .debug_str:0000000000000a0d .LASF42
     /tmp/ccv3794N.s:4567   .debug_str:0000000000000ac6 .LASF44
     /tmp/ccv3794N.s:4547   .debug_str:0000000000000a23 .LASF46
     /tmp/ccv3794N.s:4543   .debug_str:0000000000000a06 .LASF41
GAS LISTING /tmp/ccv3794N.s 			page 34


     /tmp/ccv3794N.s:4505   .debug_str:00000000000008d5 .LASF43
     /tmp/ccv3794N.s:4503   .debug_str:00000000000008ce .LASF45
     /tmp/ccv3794N.s:4561   .debug_str:0000000000000a79 .LASF47
     /tmp/ccv3794N.s:4707   .debug_str:0000000000000ee3 .LASF48
     /tmp/ccv3794N.s:4589   .debug_str:0000000000000b70 .LASF49
     /tmp/ccv3794N.s:4495   .debug_str:0000000000000895 .LASF50
     /tmp/ccv3794N.s:4457   .debug_str:0000000000000752 .LASF51
     /tmp/ccv3794N.s:4463   .debug_str:000000000000077c .LASF52
     /tmp/ccv3794N.s:4493   .debug_str:0000000000000880 .LASF53
     /tmp/ccv3794N.s:4737   .debug_str:0000000000000fb8 .LASF54
     /tmp/ccv3794N.s:4341   .debug_str:00000000000003a3 .LASF55
     /tmp/ccv3794N.s:4611   .debug_str:0000000000000c05 .LASF56
     /tmp/ccv3794N.s:4531   .debug_str:00000000000009ba .LASF57
     /tmp/ccv3794N.s:4585   .debug_str:0000000000000b4b .LASF58
     /tmp/ccv3794N.s:4269   .debug_str:0000000000000054 .LASF59
     /tmp/ccv3794N.s:4327   .debug_str:000000000000030e .LASF60
     /tmp/ccv3794N.s:4573   .debug_str:0000000000000ae8 .LASF61
     /tmp/ccv3794N.s:4411   .debug_str:00000000000005bc .LASF62
     /tmp/ccv3794N.s:4501   .debug_str:00000000000008bb .LASF63
     /tmp/ccv3794N.s:4267   .debug_str:0000000000000049 .LASF64
     /tmp/ccv3794N.s:4675   .debug_str:0000000000000de3 .LASF65
     /tmp/ccv3794N.s:4569   .debug_str:0000000000000acf .LASF66
     /tmp/ccv3794N.s:4499   .debug_str:00000000000008a2 .LASF67
     /tmp/ccv3794N.s:4687   .debug_str:0000000000000e4a .LASF68
     /tmp/ccv3794N.s:4353   .debug_str:0000000000000406 .LASF69
     /tmp/ccv3794N.s:4679   .debug_str:0000000000000e07 .LASF114
     /tmp/ccv3794N.s:4279   .debug_str:000000000000017c .LASF116
     /tmp/ccv3794N.s:4357   .debug_str:000000000000042a .LASF70
     /tmp/ccv3794N.s:4355   .debug_str:000000000000041d .LASF241
     /tmp/ccv3794N.s:4627   .debug_str:0000000000000c5e .LASF72
     /tmp/ccv3794N.s:4699   .debug_str:0000000000000e91 .LASF74
     /tmp/ccv3794N.s:4325   .debug_str:00000000000002fb .LASF73
     /tmp/ccv3794N.s:4657   .debug_str:0000000000000d49 .LASF75
     /tmp/ccv3794N.s:4635   .debug_str:0000000000000c85 .LASF76
     /tmp/ccv3794N.s:4421   .debug_str:0000000000000608 .LASF77
     /tmp/ccv3794N.s:4349   .debug_str:00000000000003ea .LASF79
     /tmp/ccv3794N.s:4743   .debug_str:0000000000000fd0 .LASF81
     /tmp/ccv3794N.s:4383   .debug_str:00000000000004fb .LASF82
     /tmp/ccv3794N.s:4451   .debug_str:0000000000000715 .LASF83
     /tmp/ccv3794N.s:4303   .debug_str:000000000000024f .LASF84
     /tmp/ccv3794N.s:4301   .debug_str:0000000000000234 .LASF85
     /tmp/ccv3794N.s:4631   .debug_str:0000000000000c6e .LASF86
     /tmp/ccv3794N.s:4721   .debug_str:0000000000000f33 .LASF87
     /tmp/ccv3794N.s:4669   .debug_str:0000000000000dc1 .LASF88
     /tmp/ccv3794N.s:4647   .debug_str:0000000000000cf1 .LASF89
     /tmp/ccv3794N.s:4319   .debug_str:00000000000002d7 .LASF90
     /tmp/ccv3794N.s:4577   .debug_str:0000000000000b06 .LASF91
     /tmp/ccv3794N.s:4285   .debug_str:00000000000001ae .LASF92
     /tmp/ccv3794N.s:4385   .debug_str:0000000000000509 .LASF93
     /tmp/ccv3794N.s:4731   .debug_str:0000000000000f77 .LASF94
     /tmp/ccv3794N.s:4363   .debug_str:000000000000045e .LASF95
     /tmp/ccv3794N.s:4601   .debug_str:0000000000000bce .LASF242
     /tmp/ccv3794N.s:4681   .debug_str:0000000000000e11 .LASF96
     /tmp/ccv3794N.s:4593   .debug_str:0000000000000b96 .LASF97
     /tmp/ccv3794N.s:4449   .debug_str:000000000000070f .LASF99
     /tmp/ccv3794N.s:4453   .debug_str:000000000000072f .LASF101
     /tmp/ccv3794N.s:4641   .debug_str:0000000000000ccf .LASF112
GAS LISTING /tmp/ccv3794N.s 			page 35


     /tmp/ccv3794N.s:4443   .debug_str:00000000000006cf .LASF102
     /tmp/ccv3794N.s:4725   .debug_str:0000000000000f59 .LASF103
     /tmp/ccv3794N.s:4729   .debug_str:0000000000000f6a .LASF104
     /tmp/ccv3794N.s:4393   .debug_str:0000000000000541 .LASF105
     /tmp/ccv3794N.s:4257   .debug_str:0000000000000010 .LASF106
     /tmp/ccv3794N.s:4413   .debug_str:00000000000005c2 .LASF107
     /tmp/ccv3794N.s:4395   .debug_str:000000000000054d .LASF108
     /tmp/ccv3794N.s:4283   .debug_str:0000000000000198 .LASF109
     /tmp/ccv3794N.s:4511   .debug_str:000000000000091a .LASF110
     /tmp/ccv3794N.s:4287   .debug_str:00000000000001ba .LASF111
     /tmp/ccv3794N.s:4557   .debug_str:0000000000000a67 .LASF113
     /tmp/ccv3794N.s:4309   .debug_str:0000000000000276 .LASF171
     /tmp/ccv3794N.s:4347   .debug_str:00000000000003dd .LASF115
     /tmp/ccv3794N.s:4335   .debug_str:000000000000035b .LASF117
     /tmp/ccv3794N.s:4481   .debug_str:00000000000007ed .LASF118
     /tmp/ccv3794N.s:4317   .debug_str:00000000000002c0 .LASF119
     /tmp/ccv3794N.s:4597   .debug_str:0000000000000bbd .LASF120
     /tmp/ccv3794N.s:4439   .debug_str:00000000000006a5 .LASF121
     /tmp/ccv3794N.s:4261   .debug_str:0000000000000028 .LASF122
     /tmp/ccv3794N.s:4599   .debug_str:0000000000000bc8 .LASF123
     /tmp/ccv3794N.s:4693   .debug_str:0000000000000e77 .LASF124
     /tmp/ccv3794N.s:4435   .debug_str:0000000000000692 .LASF125
     /tmp/ccv3794N.s:4727   .debug_str:0000000000000f65 .LASF126
     /tmp/ccv3794N.s:4603   .debug_str:0000000000000bda .LASF127
     /tmp/ccv3794N.s:4509   .debug_str:0000000000000912 .LASF128
     /tmp/ccv3794N.s:4461   .debug_str:0000000000000771 .LASF129
     /tmp/ccv3794N.s:4703   .debug_str:0000000000000eb6 .LASF130
     /tmp/ccv3794N.s:4323   .debug_str:00000000000002ed .LASF131
     /tmp/ccv3794N.s:4655   .debug_str:0000000000000d3f .LASF132
     /tmp/ccv3794N.s:4591   .debug_str:0000000000000b85 .LASF157
     /tmp/ccv3794N.s:4321   .debug_str:00000000000002e4 .LASF138
     /tmp/ccv3794N.s:4273   .debug_str:0000000000000080 .LASF140
     /tmp/ccv3794N.s:4405   .debug_str:0000000000000599 .LASF133
     /tmp/ccv3794N.s:4685   .debug_str:0000000000000e2c .LASF134
     /tmp/ccv3794N.s:4407   .debug_str:00000000000005a8 .LASF135
     /tmp/ccv3794N.s:4587   .debug_str:0000000000000b52 .LASF136
     /tmp/ccv3794N.s:4459   .debug_str:0000000000000767 .LASF137
     /tmp/ccv3794N.s:4723   .debug_str:0000000000000f49 .LASF139
     /tmp/ccv3794N.s:4291   .debug_str:00000000000001e4 .LASF141
     /tmp/ccv3794N.s:4471   .debug_str:00000000000007ba .LASF142
     /tmp/ccv3794N.s:4515   .debug_str:0000000000000934 .LASF143
     /tmp/ccv3794N.s:4367   .debug_str:0000000000000483 .LASF243
     /tmp/ccv3794N.s:4691   .debug_str:0000000000000e6e .LASF144
     /tmp/ccv3794N.s:4711   .debug_str:0000000000000ef3 .LASF145
     /tmp/ccv3794N.s:4715   .debug_str:0000000000000f13 .LASF146
     /tmp/ccv3794N.s:4255   .debug_str:0000000000000009 .LASF147
     /tmp/ccv3794N.s:4563   .debug_str:0000000000000a8d .LASF148
     /tmp/ccv3794N.s:4425   .debug_str:000000000000062d .LASF244
     /tmp/ccv3794N.s:4661   .debug_str:0000000000000d6d .LASF149
     /tmp/ccv3794N.s:4487   .debug_str:0000000000000811 .LASF150
     /tmp/ccv3794N.s:4645   .debug_str:0000000000000ce4 .LASF151
     /tmp/ccv3794N.s:4491   .debug_str:000000000000085b .LASF152
     /tmp/ccv3794N.s:4513   .debug_str:0000000000000927 .LASF153
     /tmp/ccv3794N.s:4469   .debug_str:0000000000000795 .LASF154
     /tmp/ccv3794N.s:4277   .debug_str:0000000000000163 .LASF155
     /tmp/ccv3794N.s:4701   .debug_str:0000000000000ea8 .LASF156
     /tmp/ccv3794N.s:4609   .debug_str:0000000000000c00 .LASF158
GAS LISTING /tmp/ccv3794N.s 			page 36


     /tmp/ccv3794N.s:4637   .debug_str:0000000000000c95 .LASF159
     /tmp/ccv3794N.s:4489   .debug_str:0000000000000832 .LASF160
     /tmp/ccv3794N.s:4483   .debug_str:00000000000007f8 .LASF161
     /tmp/ccv3794N.s:4447   .debug_str:00000000000006e7 .LASF162
     /tmp/ccv3794N.s:4417   .debug_str:00000000000005e4 .LASF163
     /tmp/ccv3794N.s:4639   .debug_str:0000000000000ca5 .LASF164
     /tmp/ccv3794N.s:4525   .debug_str:000000000000098c .LASF165
     /tmp/ccv3794N.s:4331   .debug_str:000000000000032d .LASF166
     /tmp/ccv3794N.s:4429   .debug_str:0000000000000664 .LASF167
     /tmp/ccv3794N.s:4497   .debug_str:000000000000089d .LASF168
     /tmp/ccv3794N.s:4719   .debug_str:0000000000000f21 .LASF169
     /tmp/ccv3794N.s:4539   .debug_str:00000000000009ee .LASF170
     /tmp/ccv3794N.s:4271   .debug_str:0000000000000068 .LASF172
     /tmp/ccv3794N.s:4387   .debug_str:0000000000000520 .LASF173
     /tmp/ccv3794N.s:4705   .debug_str:0000000000000ec3 .LASF174
     /tmp/ccv3794N.s:4621   .debug_str:0000000000000c3a .LASF245
     /tmp/ccv3794N.s:4663   .debug_str:0000000000000d8e .LASF175
     /tmp/ccv3794N.s:4373   .debug_str:00000000000004b6 .LASF176
     /tmp/ccv3794N.s:4651   .debug_str:0000000000000d22 .LASF177
     /tmp/ccv3794N.s:4519   .debug_str:000000000000095d .LASF178
     /tmp/ccv3794N.s:4623   .debug_str:0000000000000c4e .LASF179
     /tmp/ccv3794N.s:4431   .debug_str:000000000000066e .LASF180
     /tmp/ccv3794N.s:4263   .debug_str:0000000000000033 .LASF181
     /tmp/ccv3794N.s:4689   .debug_str:0000000000000e54 .LASF182
     /tmp/ccv3794N.s:4633   .debug_str:0000000000000c79 .LASF183
     /tmp/ccv3794N.s:4619   .debug_str:0000000000000c2d .LASF184
     /tmp/ccv3794N.s:4527   .debug_str:000000000000099c .LASF185
     /tmp/ccv3794N.s:4713   .debug_str:0000000000000ef8 .LASF186
     /tmp/ccv3794N.s:4455   .debug_str:000000000000073f .LASF187
     /tmp/ccv3794N.s:4665   .debug_str:0000000000000d9a .LASF188
     /tmp/ccv3794N.s:4579   .debug_str:0000000000000b1e .LASF189
     /tmp/ccv3794N.s:4329   .debug_str:0000000000000314 .LASF190
     /tmp/ccv3794N.s:4339   .debug_str:000000000000038a .LASF191
     /tmp/ccv3794N.s:4371   .debug_str:000000000000049f .LASF192
     /tmp/ccv3794N.s:4553   .debug_str:0000000000000a4e .LASF193
     /tmp/ccv3794N.s:4441   .debug_str:00000000000006c2 .LASF194
     /tmp/ccv3794N.s:4361   .debug_str:0000000000000446 .LASF195
     /tmp/ccv3794N.s:4377   .debug_str:00000000000004d8 .LASF196
     /tmp/ccv3794N.s:4315   .debug_str:00000000000002ae .LASF197
     /tmp/ccv3794N.s:4541   .debug_str:00000000000009fa .LASF198
     /tmp/ccv3794N.s:4401   .debug_str:0000000000000586 .LASF199
     /tmp/ccv3794N.s:4535   .debug_str:00000000000009d5 .LASF200
     /tmp/ccv3794N.s:4259   .debug_str:0000000000000020 .LASF201
     /tmp/ccv3794N.s:4733   .debug_str:0000000000000f86 .LASF202
     /tmp/ccv3794N.s:4399   .debug_str:000000000000057d .LASF203
     /tmp/ccv3794N.s:4289   .debug_str:00000000000001d2 .LASF204
     /tmp/ccv3794N.s:4343   .debug_str:00000000000003b8 .LASF205
     /tmp/ccv3794N.s:4677   .debug_str:0000000000000dfc .LASF206
     /tmp/ccv3794N.s:4507   .debug_str:00000000000008e9 .LASF207
     /tmp/ccv3794N.s:4295   .debug_str:000000000000020e .LASF208
     /tmp/ccv3794N.s:4735   .debug_str:0000000000000f98 .LASF209
     /tmp/ccv3794N.s:4423   .debug_str:0000000000000624 .LASF210
     /tmp/ccv3794N.s:4253   .debug_str:0000000000000000 .LASF211
     /tmp/ccv3794N.s:4465   .debug_str:0000000000000784 .LASF212
     /tmp/ccv3794N.s:4307   .debug_str:000000000000026d .LASF213
     /tmp/ccv3794N.s:4583   .debug_str:0000000000000b33 .LASF214
     /tmp/ccv3794N.s:4537   .debug_str:00000000000009e5 .LASF215
GAS LISTING /tmp/ccv3794N.s 			page 37


     /tmp/ccv3794N.s:4649   .debug_str:0000000000000d0a .LASF216
     /tmp/ccv3794N.s:4683   .debug_str:0000000000000e22 .LASF217
     /tmp/ccv3794N.s:4313   .debug_str:0000000000000295 .LASF218
     /tmp/ccv3794N.s:4717   .debug_str:0000000000000f18 .LASF219
     /tmp/ccv3794N.s:4653   .debug_str:0000000000000d27 .LASF220
     /tmp/ccv3794N.s:4629   .debug_str:0000000000000c69 .LASF221
     /tmp/ccv3794N.s:4477   .debug_str:00000000000007d7 .LASF222
     /tmp/ccv3794N.s:87     .text:0000000000000068 .LFB46
     /tmp/ccv3794N.s:829    .text:0000000000000454 .LFE46
     /tmp/ccv3794N.s:4607   .debug_str:0000000000000bf9 .LASF223
     /tmp/ccv3794N.s:4659   .debug_str:0000000000000d68 .LASF224
     /tmp/ccv3794N.s:4695   .debug_str:0000000000000e80 .LASF225
     /tmp/ccv3794N.s:4243   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccv3794N.s:4365   .debug_str:000000000000047e .LASF226
     /tmp/ccv3794N.s:306    .text:0000000000000148 .LBB58
     /tmp/ccv3794N.s:332    .text:000000000000016c .LBE58
     /tmp/ccv3794N.s:4021   .debug_loc:0000000000000000 .LLST5
     /tmp/ccv3794N.s:312    .text:000000000000014c .LBB59
     /tmp/ccv3794N.s:317    .text:000000000000014c .LBE59
     /tmp/ccv3794N.s:323    .text:0000000000000158 .LVL7
     /tmp/ccv3794N.s:391    .text:0000000000000190 .LBB61
     /tmp/ccv3794N.s:408    .text:00000000000001b4 .LBE61
     /tmp/ccv3794N.s:4575   .debug_str:0000000000000afb .LASF227
     /tmp/ccv3794N.s:4036   .debug_loc:000000000000003a .LLST6
     /tmp/ccv3794N.s:398    .text:000000000000019c .LVL13
     /tmp/ccv3794N.s:448    .text:0000000000000200 .LBB62
     /tmp/ccv3794N.s:461    .text:0000000000000214 .LBE62
     /tmp/ccv3794N.s:4741   .debug_str:0000000000000fc9 .LASF228
     /tmp/ccv3794N.s:4044   .debug_loc:000000000000005f .LLST7
     /tmp/ccv3794N.s:457    .text:0000000000000210 .LVL17
     /tmp/ccv3794N.s:464    .text:0000000000000214 .LBB63
     /tmp/ccv3794N.s:535    .text:0000000000000288 .LBE63
     /tmp/ccv3794N.s:4051   .debug_loc:0000000000000082 .LLST8
     /tmp/ccv3794N.s:4062   .debug_loc:00000000000000b8 .LLST9
     /tmp/ccv3794N.s:4073   .debug_loc:00000000000000ee .LLST10
     /tmp/ccv3794N.s:4080   .debug_loc:0000000000000111 .LLST11
     /tmp/ccv3794N.s:486    .text:0000000000000234 .LVL21
     /tmp/ccv3794N.s:529    .text:0000000000000280 .LVL25
     /tmp/ccv3794N.s:538    .text:0000000000000288 .LBB64
     /tmp/ccv3794N.s:580    .text:00000000000002d0 .LBE64
     /tmp/ccv3794N.s:4093   .debug_loc:000000000000014b .LLST12
     /tmp/ccv3794N.s:4281   .debug_str:0000000000000193 .LASF229
     /tmp/ccv3794N.s:4100   .debug_loc:000000000000016e .LLST13
     /tmp/ccv3794N.s:556    .text:00000000000002a4 .LVL29
     /tmp/ccv3794N.s:574    .text:00000000000002c8 .LVL31
     /tmp/ccv3794N.s:583    .text:00000000000002d0 .LBB65
     /tmp/ccv3794N.s:599    .text:00000000000002f4 .LBE65
     /tmp/ccv3794N.s:4127   .debug_loc:00000000000001b4 .LLST14
     /tmp/ccv3794N.s:589    .text:00000000000002dc .LVL33
     /tmp/ccv3794N.s:602    .text:00000000000002f4 .LBB66
     /tmp/ccv3794N.s:613    .text:0000000000000304 .LBE66
     /tmp/ccv3794N.s:4135   .debug_loc:00000000000001d9 .LLST15
     /tmp/ccv3794N.s:609    .text:0000000000000300 .LVL35
     /tmp/ccv3794N.s:616    .text:0000000000000304 .LBB67
     /tmp/ccv3794N.s:636    .text:0000000000000328 .LBE67
     /tmp/ccv3794N.s:4143   .debug_loc:00000000000001fe .LLST16
     /tmp/ccv3794N.s:625    .text:0000000000000314 .LVL37
GAS LISTING /tmp/ccv3794N.s 			page 38


     /tmp/ccv3794N.s:632    .text:0000000000000324 .LVL38
     /tmp/ccv3794N.s:639    .text:0000000000000328 .LBB68
     /tmp/ccv3794N.s:654    .text:000000000000033c .LBE68
     /tmp/ccv3794N.s:4595   .debug_str:0000000000000bb8 .LASF230
     /tmp/ccv3794N.s:4150   .debug_loc:0000000000000221 .LLST17
     /tmp/ccv3794N.s:650    .text:0000000000000338 .LVL41
     /tmp/ccv3794N.s:657    .text:000000000000033c .LBB69
     /tmp/ccv3794N.s:675    .text:0000000000000368 .LBE69
     /tmp/ccv3794N.s:4375   .debug_str:00000000000004ce .LASF231
     /tmp/ccv3794N.s:4157   .debug_loc:0000000000000244 .LLST18
     /tmp/ccv3794N.s:665    .text:0000000000000350 .LVL43
     /tmp/ccv3794N.s:671    .text:0000000000000364 .LVL44
     /tmp/ccv3794N.s:339    .text:0000000000000170 .LBB71
     /tmp/ccv3794N.s:350    .text:0000000000000174 .LBE71
     /tmp/ccv3794N.s:4165   .debug_loc:0000000000000269 .LLST19
     /tmp/ccv3794N.s:355    .text:0000000000000178 .LBB73
     /tmp/ccv3794N.s:366    .text:000000000000017c .LBE73
     /tmp/ccv3794N.s:4172   .debug_loc:000000000000028c .LLST20
     /tmp/ccv3794N.s:418    .text:00000000000001c8 .LVL14
     /tmp/ccv3794N.s:435    .text:00000000000001e8 .LVL15
     /tmp/ccv3794N.s:683    .text:000000000000037c .LVL45
     /tmp/ccv3794N.s:690    .text:000000000000038c .LVL46
     /tmp/ccv3794N.s:698    .text:00000000000003a4 .LVL47
     /tmp/ccv3794N.s:706    .text:00000000000003b8 .LVL48
     /tmp/ccv3794N.s:813    .text:0000000000000440 .LBB46
     /tmp/ccv3794N.s:823    .text:0000000000000450 .LBE46
     /tmp/ccv3794N.s:4179   .debug_loc:00000000000002af .LLST1
     /tmp/ccv3794N.s:817    .text:0000000000000448 .LVL57
     /tmp/ccv3794N.s:822    .text:0000000000000450 .LVL58
     /tmp/ccv3794N.s:101    .text:000000000000007c .LBB37
     /tmp/ccv3794N.s:117    .text:0000000000000088 .LBE37
     /tmp/ccv3794N.s:121    .text:000000000000008c .LBB39
     /tmp/ccv3794N.s:136    .text:0000000000000098 .LBE39
     /tmp/ccv3794N.s:140    .text:000000000000009c .LBB41
     /tmp/ccv3794N.s:155    .text:00000000000000a8 .LBE41
     /tmp/ccv3794N.s:754    .text:0000000000000414 .LBB47
     /tmp/ccv3794N.s:769    .text:0000000000000420 .LBE47
     /tmp/ccv3794N.s:4194   .debug_loc:00000000000002da .LLST2
     /tmp/ccv3794N.s:781    .text:0000000000000430 .LBB49
     /tmp/ccv3794N.s:792    .text:0000000000000434 .LBE49
     /tmp/ccv3794N.s:4202   .debug_loc:00000000000002fe .LLST3
     /tmp/ccv3794N.s:797    .text:0000000000000438 .LBB51
     /tmp/ccv3794N.s:811    .text:0000000000000440 .LBE51
     /tmp/ccv3794N.s:4209   .debug_loc:0000000000000321 .LLST4
     /tmp/ccv3794N.s:198    .text:00000000000000f8 .LVL4
     /tmp/ccv3794N.s:741    .text:00000000000003fc .LVL49
     /tmp/ccv3794N.s:776    .text:000000000000042c .LVL52
     /tmp/ccv3794N.s:4333   .debug_str:0000000000000355 .LASF232
     /tmp/ccv3794N.s:4345   .debug_str:00000000000003d3 .LASF233
     /tmp/ccv3794N.s:46     .text:0000000000000020 .LFB45
     /tmp/ccv3794N.s:81     .text:0000000000000068 .LFE45
     /tmp/ccv3794N.s:4216   .debug_loc:0000000000000344 .LLST0
     /tmp/ccv3794N.s:64     .text:0000000000000044 .LVL2
     /tmp/ccv3794N.s:70     .text:0000000000000058 .LVL3
     /tmp/ccv3794N.s:10     .text:0000000000000000 .LFB44
     /tmp/ccv3794N.s:40     .text:0000000000000020 .LFE44
     /tmp/ccv3794N.s:4473   .debug_str:00000000000007bf .LASF234
GAS LISTING /tmp/ccv3794N.s 			page 39


     /tmp/ccv3794N.s:4673   .debug_str:0000000000000dde .LASF235
     /tmp/ccv3794N.s:4467   .debug_str:000000000000078a .LASF236
     /tmp/ccv3794N.s:4529   .debug_str:00000000000009ac .LASF237
     /tmp/ccv3794N.s:310    .text:000000000000014c .LVL5
     /tmp/ccv3794N.s:321    .text:0000000000000150 .LVL6
     /tmp/ccv3794N.s:393    .text:0000000000000190 .LVL12
     /tmp/ccv3794N.s:452    .text:0000000000000204 .LVL16
     /tmp/ccv3794N.s:468    .text:0000000000000218 .LVL18
     /tmp/ccv3794N.s:524    .text:0000000000000278 .LVL24
     /tmp/ccv3794N.s:472    .text:000000000000021c .LVL19
     /tmp/ccv3794N.s:476    .text:0000000000000220 .LVL20
     /tmp/ccv3794N.s:533    .text:0000000000000288 .LVL26
     /tmp/ccv3794N.s:507    .text:000000000000025c .LVL22
     /tmp/ccv3794N.s:515    .text:0000000000000268 .LVL23
     /tmp/ccv3794N.s:542    .text:000000000000028c .LVL27
     /tmp/ccv3794N.s:578    .text:00000000000002d0 .LVL32
     /tmp/ccv3794N.s:546    .text:0000000000000290 .LVL28
     /tmp/ccv3794N.s:569    .text:00000000000002c0 .LVL30
     /tmp/ccv3794N.s:604    .text:00000000000002f4 .LVL34
     /tmp/ccv3794N.s:620    .text:0000000000000308 .LVL36
     /tmp/ccv3794N.s:634    .text:0000000000000328 .LVL39
     /tmp/ccv3794N.s:643    .text:000000000000032c .LVL40
     /tmp/ccv3794N.s:659    .text:000000000000033c .LVL42
     /tmp/ccv3794N.s:338    .text:0000000000000170 .LVL8
     /tmp/ccv3794N.s:347    .text:0000000000000174 .LVL9
     /tmp/ccv3794N.s:354    .text:0000000000000178 .LVL10
     /tmp/ccv3794N.s:363    .text:000000000000017c .LVL11
     /tmp/ccv3794N.s:753    .text:0000000000000414 .LVL50
     /tmp/ccv3794N.s:766    .text:0000000000000420 .LVL51
     /tmp/ccv3794N.s:780    .text:0000000000000430 .LVL53
     /tmp/ccv3794N.s:789    .text:0000000000000434 .LVL54
     /tmp/ccv3794N.s:796    .text:0000000000000438 .LVL55
     /tmp/ccv3794N.s:808    .text:0000000000000440 .LVL56
     /tmp/ccv3794N.s:49     .text:0000000000000020 .LVL0
     /tmp/ccv3794N.s:62     .text:000000000000003c .LVL1
     /tmp/ccv3794N.s:841    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccv3794N.s:203    .text:00000000000000fc .LBB55
     /tmp/ccv3794N.s:369    .text:000000000000017c .LBE55
     /tmp/ccv3794N.s:386    .text:0000000000000190 .LBB76
     /tmp/ccv3794N.s:730    .text:00000000000003e0 .LBE76

UNDEFINED SYMBOLS
_ZN3CCB12outputBufferE
_ZN8IOBuffer8pushBackEc
_ZN3CCB9semOutputE
_ZN3SCB6signalEv
_ZN3PCB7runningE
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
_ZN3PCB16timeSliceCounterE
_ZN3PCB8dispatchEv
_ZN9Scheduler3putEP3PCB
_ZN3PCB14createProccessEPFvvEPv
_ZN3PCB16createSysProcessEPFvvEPv
_ZN3SCB15createSemaphoreEi
_ZN3SCB18createSysSemaphoreEi
_ZN3SCB4waitEv
GAS LISTING /tmp/ccv3794N.s 			page 40


_ZN3SCB13signalClosingEv
_ZN3SCBdlEPv
_ZN17SleepingProcesses10putToSleepEP3PCB
_ZN3CCB8semInputE
_ZN3CCB11inputBufferE
_ZN8IOBuffer9peekFrontEv
_ZN3CCB16inputBufferEmptyE
_ZN8IOBuffer8popFrontEv
_ZN17SleepingProcesses6wakeUpEv
plic_claim
plic_complete

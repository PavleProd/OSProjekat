GAS LISTING /tmp/cc3zY2CU.s 			page 1


   1              		.file	"kernel.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN6Kernel10popSppSpieEv
   9              	_ZN6Kernel10popSppSpieEv:
  10              	.LFB33:
  11              		.file 1 "src/kernel.cpp"
   1:src/kernel.cpp **** #include "../h/kernel.h"
   2:src/kernel.cpp **** #include "../h/PCB.h"
   3:src/kernel.cpp **** #include "../h/MemoryAllocator.h"
   4:src/kernel.cpp **** #include "../h/console.h"
   5:src/kernel.cpp **** #include "../h/print.h"
   6:src/kernel.cpp **** #include "../h/Scheduler.h"
   7:src/kernel.cpp **** #include "../h/SCB.h"
   8:src/kernel.cpp **** 
   9:src/kernel.cpp **** void Kernel::popSppSpie() {
  12              		.loc 1 9 27
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  10:src/kernel.cpp ****     asm volatile("csrw sepc, ra"); // da bi se funkcija vratila u wrapper
  20              		.loc 1 10 5
  21              		.loc 1 10 34 is_stmt 0
  22              	#APP
  23              	# 10 "src/kernel.cpp" 1
  11              	    asm volatile("sret");
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 11 5 is_stmt 1
  27              		.loc 1 11 25 is_stmt 0
  28              	# 11 "src/kernel.cpp" 1
  12              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 12 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE33:
  42              		.align	2
  43              		.globl	interruptHandler
  45              	interruptHandler:
  46              	.LFB34:
  13:src/kernel.cpp **** 
  14:src/kernel.cpp **** extern "C" void interruptHandler() { // extern C da kompajler ne bi menjao ime funkcije
GAS LISTING /tmp/cc3zY2CU.s 			page 2


  47              		.loc 1 14 36 is_stmt 1
  48              		.cfi_startproc
  49 0020 130101FA 		addi	sp,sp,-96
  50              		.cfi_def_cfa_offset 96
  51 0024 233C1104 		sd	ra,88(sp)
  52 0028 23388104 		sd	s0,80(sp)
  53 002c 23349104 		sd	s1,72(sp)
  54 0030 23302105 		sd	s2,64(sp)
  55              		.cfi_offset 1, -8
  56              		.cfi_offset 8, -16
  57              		.cfi_offset 9, -24
  58              		.cfi_offset 18, -32
  59 0034 13040106 		addi	s0,sp,96
  60              		.cfi_def_cfa 8, 0
  15:src/kernel.cpp ****     size_t volatile scause = Kernel::r_scause();
  61              		.loc 1 15 5
  62              	.LBB40:
  63              	.LBB41:
  64              		.file 2 "src/../h/kernel.h"
   1:src/../h/kernel.h **** #ifndef KERNEL_H
   2:src/../h/kernel.h **** #define KERNEL_H
   3:src/../h/kernel.h **** 
   4:src/../h/kernel.h **** #include "hw.h"
   5:src/../h/kernel.h **** 
   6:src/../h/kernel.h **** class Kernel {
   7:src/../h/kernel.h **** public:
   8:src/../h/kernel.h **** 
   9:src/../h/kernel.h ****     // postavlja code u registar a0
  10:src/../h/kernel.h ****     static size_t setCode(size_t code) {
  11:src/../h/kernel.h ****         return code;
  12:src/../h/kernel.h ****     }
  13:src/../h/kernel.h **** 
  14:src/../h/kernel.h ****     // kodovi po kojima se prepoznaju sistemski pozivi
  15:src/../h/kernel.h ****     enum sysCallCodes {
  16:src/../h/kernel.h ****         mem_alloc = 0x01,
  17:src/../h/kernel.h ****         mem_free = 0x02,
  18:src/../h/kernel.h ****         thread_create = 0x11,
  19:src/../h/kernel.h ****         thread_exit = 0x12,
  20:src/../h/kernel.h ****         thread_dispatch = 0x13,
  21:src/../h/kernel.h ****         thread_start = 0x14,
  22:src/../h/kernel.h ****         sem_open = 0x21,
  23:src/../h/kernel.h ****         sem_close = 0x22,
  24:src/../h/kernel.h ****         sem_wait = 0x23,
  25:src/../h/kernel.h ****         sem_signal = 0x24,
  26:src/../h/kernel.h ****         tim_sleep = 0x31,
  27:src/../h/kernel.h ****         getc = 0x41,
  28:src/../h/kernel.h ****         putc = 0x42
  29:src/../h/kernel.h ****     };
  30:src/../h/kernel.h **** 
  31:src/../h/kernel.h ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  32:src/../h/kernel.h ****     static void popSppSpie();
  33:src/../h/kernel.h **** 
  34:src/../h/kernel.h ****     // cita registar scause (uzrok nastanka prekida)
  35:src/../h/kernel.h ****     static size_t r_scause() {
  36:src/../h/kernel.h ****         size_t volatile scause;
  65              		.loc 2 36 9
  37:src/../h/kernel.h ****         __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
GAS LISTING /tmp/cc3zY2CU.s 			page 3


  66              		.loc 2 37 9
  67              		.loc 2 37 76 is_stmt 0
  68              	#APP
  69              	# 37 "src/../h/kernel.h" 1
  38              	        return scause;
  70              		csrr a5, scause
  71              	# 0 "" 2
  72              	#NO_APP
  73 003c 2330F4FC 		sd	a5,-64(s0)
  74              		.loc 2 38 9 is_stmt 1
  75              		.loc 2 38 16 is_stmt 0
  76 0040 833704FC 		ld	a5,-64(s0)
  77              	.LBE41:
  78              	.LBE40:
  79              		.loc 1 15 47
  80 0044 233CF4FC 		sd	a5,-40(s0)
  16:src/kernel.cpp ****     size_t volatile sepc = Kernel::r_sepc();
  81              		.loc 1 16 5 is_stmt 1
  82              	.LBB42:
  83              	.LBB43:
  39:src/../h/kernel.h ****     }
  40:src/../h/kernel.h **** 
  41:src/../h/kernel.h ****     // upisuje u registar scause (uzrok nastanka prekida)
  42:src/../h/kernel.h ****     static void w_scause(size_t scause) {
  43:src/../h/kernel.h ****         __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  44:src/../h/kernel.h ****     }
  45:src/../h/kernel.h **** 
  46:src/../h/kernel.h ****     // cita registar sepc
  47:src/../h/kernel.h ****     static size_t r_sepc() {
  48:src/../h/kernel.h ****         size_t volatile sepc;
  84              		.loc 2 48 9
  49:src/../h/kernel.h ****         __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
  85              		.loc 2 49 9
  86              		.loc 2 49 68 is_stmt 0
  87              	#APP
  88              	# 49 "src/../h/kernel.h" 1
  50              	        return sepc;
  89              		csrr a5, sepc
  90              	# 0 "" 2
  91              	#NO_APP
  92 004c 233CF4FA 		sd	a5,-72(s0)
  93              		.loc 2 50 9 is_stmt 1
  94              		.loc 2 50 16 is_stmt 0
  95 0050 833784FB 		ld	a5,-72(s0)
  96              	.LBE43:
  97              	.LBE42:
  98              		.loc 1 16 43
  99 0054 2338F4FC 		sd	a5,-48(s0)
  17:src/kernel.cpp ****     size_t volatile sstatus = Kernel::r_sstatus();
 100              		.loc 1 17 5 is_stmt 1
 101              	.LBB44:
 102              	.LBB45:
  51:src/../h/kernel.h ****     }
  52:src/../h/kernel.h **** 
  53:src/../h/kernel.h ****     // upisuje u registar sepc
  54:src/../h/kernel.h ****     static void w_sepc(size_t sepc) {
  55:src/../h/kernel.h ****         __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
GAS LISTING /tmp/cc3zY2CU.s 			page 4


  56:src/../h/kernel.h ****     }
  57:src/../h/kernel.h **** 
  58:src/../h/kernel.h ****     // read register stvec
  59:src/../h/kernel.h ****     static size_t r_stvec() {
  60:src/../h/kernel.h ****         size_t volatile stvec;
  61:src/../h/kernel.h ****         __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
  62:src/../h/kernel.h ****         return stvec;
  63:src/../h/kernel.h ****     }
  64:src/../h/kernel.h **** 
  65:src/../h/kernel.h ****     // write register stvec
  66:src/../h/kernel.h ****     static void w_stvec(size_t stvec) {
  67:src/../h/kernel.h ****         __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  68:src/../h/kernel.h ****     }
  69:src/../h/kernel.h **** 
  70:src/../h/kernel.h ****     // read register stval
  71:src/../h/kernel.h ****     static size_t r_stval() {
  72:src/../h/kernel.h ****         size_t volatile stval;
  73:src/../h/kernel.h ****         __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
  74:src/../h/kernel.h ****         return stval;
  75:src/../h/kernel.h ****     }
  76:src/../h/kernel.h **** 
  77:src/../h/kernel.h ****     // write register stval
  78:src/../h/kernel.h ****     static void w_stval(size_t stval) {
  79:src/../h/kernel.h ****         __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
  80:src/../h/kernel.h ****     }
  81:src/../h/kernel.h **** 
  82:src/../h/kernel.h ****     enum BitMaskSip
  83:src/../h/kernel.h ****     {
  84:src/../h/kernel.h ****         SIP_SSIE = (1 << 1), // da li su dozvoljeni softverski prekidi
  85:src/../h/kernel.h ****         SIP_SEIE = (1 << 9), // da li su dozvoljeni spoljasnji hardverski prekidi
  86:src/../h/kernel.h ****     };
  87:src/../h/kernel.h **** 
  88:src/../h/kernel.h ****     // postavljanje odredjenih bitova (BitMaskSip) u registar sip
  89:src/../h/kernel.h ****     static void ms_sip(size_t mask) {
  90:src/../h/kernel.h ****         __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
  91:src/../h/kernel.h ****     }
  92:src/../h/kernel.h **** 
  93:src/../h/kernel.h ****     // brisanje odredjenih bitova (BitMaskSip) iz registra sip
  94:src/../h/kernel.h ****     static void mc_sip(size_t mask) {
  95:src/../h/kernel.h ****         __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
  96:src/../h/kernel.h ****     }
  97:src/../h/kernel.h **** 
  98:src/../h/kernel.h ****     // citanje iz registra sip
  99:src/../h/kernel.h ****     static size_t r_sip() {
 100:src/../h/kernel.h ****         size_t volatile sip;
 101:src/../h/kernel.h ****         __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 102:src/../h/kernel.h ****         return sip;
 103:src/../h/kernel.h ****     }
 104:src/../h/kernel.h **** 
 105:src/../h/kernel.h ****     // upis u registar sip
 106:src/../h/kernel.h ****     static void w_sip(size_t sip) {
 107:src/../h/kernel.h ****         __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 108:src/../h/kernel.h ****     }
 109:src/../h/kernel.h **** 
 110:src/../h/kernel.h ****     enum BitMaskSstatus
 111:src/../h/kernel.h ****     {
 112:src/../h/kernel.h ****         SSTATUS_SIE = (1 << 1),
GAS LISTING /tmp/cc3zY2CU.s 			page 5


 113:src/../h/kernel.h ****         SSTATUS_SPIE = (1 << 5),
 114:src/../h/kernel.h ****         SSTATUS_SPP = (1 << 8),
 115:src/../h/kernel.h ****     };
 116:src/../h/kernel.h **** 
 117:src/../h/kernel.h ****     // mask set register sstatus
 118:src/../h/kernel.h ****     static void ms_sstatus(size_t mask) {
 119:src/../h/kernel.h ****         __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 120:src/../h/kernel.h ****     }
 121:src/../h/kernel.h **** 
 122:src/../h/kernel.h ****     // mask clear register sstatus
 123:src/../h/kernel.h ****     static void mc_sstatus(size_t mask) {
 124:src/../h/kernel.h ****         __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 125:src/../h/kernel.h ****     }
 126:src/../h/kernel.h **** 
 127:src/../h/kernel.h ****     // read register sstatus
 128:src/../h/kernel.h ****     static size_t r_sstatus() {
 129:src/../h/kernel.h ****         size_t volatile sstatus;
 103              		.loc 2 129 9
 130:src/../h/kernel.h ****         __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 104              		.loc 2 130 9
 105              		.loc 2 130 80 is_stmt 0
 106              	#APP
 107              	# 130 "src/../h/kernel.h" 1
 131              	        return sstatus;
 108              		csrr a5, sstatus
 109              	# 0 "" 2
 110              	#NO_APP
 111 005c 2338F4FA 		sd	a5,-80(s0)
 112              		.loc 2 131 9 is_stmt 1
 113              		.loc 2 131 16 is_stmt 0
 114 0060 833704FB 		ld	a5,-80(s0)
 115              	.LBE45:
 116              	.LBE44:
 117              		.loc 1 17 49
 118 0064 2334F4FC 		sd	a5,-56(s0)
  18:src/kernel.cpp ****     if(scause == 9 || scause == 8) { // sistemski poziv iz korisnickog(8) ili sistemskog(9) rezima
 119              		.loc 1 18 5 is_stmt 1
 120              	.LBB46:
 121              		.loc 1 18 15 is_stmt 0
 122 0068 033784FD 		ld	a4,-40(s0)
 123              		.loc 1 18 20
 124 006c 93079000 		li	a5,9
 125 0070 6302F704 		beq	a4,a5,.L4
 126              		.loc 1 18 30 discriminator 2
 127 0074 033784FD 		ld	a4,-40(s0)
 128              		.loc 1 18 20 discriminator 2
 129 0078 93078000 		li	a5,8
 130 007c 630CF702 		beq	a4,a5,.L4
  19:src/kernel.cpp ****         sepc += 4; // da bi se sret vratio na pravo mesto
  20:src/kernel.cpp ****         size_t volatile code = PCB::running->registers[10]; // a0
  21:src/kernel.cpp ****         switch(code) {
  22:src/kernel.cpp ****             case Kernel::sysCallCodes::mem_alloc: // mem_alloc(size_t size) a1 - size
  23:src/kernel.cpp ****             {
  24:src/kernel.cpp ****                 size_t size = PCB::running->registers[11];
  25:src/kernel.cpp ****                 size = MemoryAllocator::blocksInSize(size);
  26:src/kernel.cpp **** 
  27:src/kernel.cpp ****                 PCB::running->registers[10] = (size_t)MemoryAllocator::mem_alloc(size);
GAS LISTING /tmp/cc3zY2CU.s 			page 6


  28:src/kernel.cpp ****                 break;
  29:src/kernel.cpp ****             }
  30:src/kernel.cpp ****             case Kernel::sysCallCodes::mem_free: // mem_free(void* memSegment) a1 - memSegment
  31:src/kernel.cpp ****             {
  32:src/kernel.cpp ****                 void* memSegment = (void*)PCB::running->registers[11];
  33:src/kernel.cpp ****                 PCB::running->registers[10] = (size_t)MemoryAllocator::mem_free(memSegment);
  34:src/kernel.cpp ****                 break;
  35:src/kernel.cpp ****             }
  36:src/kernel.cpp ****             case Kernel::sysCallCodes::thread_dispatch:
  37:src/kernel.cpp ****             {
  38:src/kernel.cpp ****                 PCB::timeSliceCounter = 0;
  39:src/kernel.cpp ****                 PCB::dispatch();
  40:src/kernel.cpp ****                 break;
  41:src/kernel.cpp ****             }
  42:src/kernel.cpp ****             case Kernel::sysCallCodes::thread_exit:
  43:src/kernel.cpp ****             {
  44:src/kernel.cpp ****                 PCB::running->finished = true;
  45:src/kernel.cpp ****                 PCB::timeSliceCounter = 0;
  46:src/kernel.cpp ****                 PCB::dispatch();
  47:src/kernel.cpp ****                 PCB::running->registers[10] = (size_t)0;
  48:src/kernel.cpp ****                 break;
  49:src/kernel.cpp ****             }
  50:src/kernel.cpp ****             case Kernel::sysCallCodes::thread_start: // a1 - handle
  51:src/kernel.cpp ****             {
  52:src/kernel.cpp ****                 PCB **handle = (PCB **) PCB::running->registers[11];
  53:src/kernel.cpp ****                 Scheduler::put(*handle);
  54:src/kernel.cpp ****                 break;
  55:src/kernel.cpp ****             }
  56:src/kernel.cpp ****             case Kernel::sysCallCodes::thread_create: // a1 - handle a2 - startRoutine a3 - arg a4 
  57:src/kernel.cpp ****             {
  58:src/kernel.cpp ****                 // argumenti
  59:src/kernel.cpp ****                 PCB::processMain main = (PCB::processMain)PCB::running->registers[12];
  60:src/kernel.cpp ****                 void *arg = (void*)PCB::running->registers[13];
  61:src/kernel.cpp **** 
  62:src/kernel.cpp ****                 PCB **handle = (PCB**)PCB::running->registers[11];
  63:src/kernel.cpp ****                 *handle = PCB::createProccess(main, arg);
  64:src/kernel.cpp **** 
  65:src/kernel.cpp ****                 // stavljamo handle u a0 (verovatno vec jeste ali za svaki slucaj)
  66:src/kernel.cpp ****                 PCB::running->registers[10] = (size_t)handle;
  67:src/kernel.cpp **** 
  68:src/kernel.cpp ****                 if(*handle == nullptr) break;
  69:src/kernel.cpp ****                 // dodeljujemo alociran stek procesu
  70:src/kernel.cpp ****                 size_t* stack = (size_t*)PCB::running->registers[14];
  71:src/kernel.cpp ****                 (*handle)->stack = stack;
  72:src/kernel.cpp ****                 (*handle)->registers[2] = (size_t)&stack[DEFAULT_STACK_SIZE]; // sp(x2)
  73:src/kernel.cpp **** 
  74:src/kernel.cpp ****                 break;
  75:src/kernel.cpp ****             }
  76:src/kernel.cpp ****             case Kernel::sysCallCodes::sem_open: // a1 = handle a2 = init
  77:src/kernel.cpp ****             {
  78:src/kernel.cpp ****                 SCB **handle = (SCB**) PCB::running->registers[11];
  79:src/kernel.cpp ****                 size_t init = (int) PCB::running->registers[12];
  80:src/kernel.cpp **** 
  81:src/kernel.cpp ****                 (*handle) = SCB::createSemaphore(init);
  82:src/kernel.cpp **** 
  83:src/kernel.cpp ****                 PCB::running->registers[10] = (size_t)handle;
  84:src/kernel.cpp ****                 break;
GAS LISTING /tmp/cc3zY2CU.s 			page 7


  85:src/kernel.cpp ****             }
  86:src/kernel.cpp ****             case Kernel::sysCallCodes::sem_wait: // a1 = sem
  87:src/kernel.cpp ****             {
  88:src/kernel.cpp ****                 SCB* sem = (SCB*) PCB::running->registers[11];
  89:src/kernel.cpp **** 
  90:src/kernel.cpp ****                 PCB::running->registers[10] = sem->wait(); // true kao proces treba da se blokira, 
  91:src/kernel.cpp ****                 break;
  92:src/kernel.cpp ****             }
  93:src/kernel.cpp ****             case Kernel::sysCallCodes::sem_signal: // a1 = sem
  94:src/kernel.cpp ****             {
  95:src/kernel.cpp ****                 SCB* sem = (SCB*) PCB::running->registers[11];
  96:src/kernel.cpp **** 
  97:src/kernel.cpp ****                 PCB::running->registers[10] = (size_t)sem->signal(); // vraca pokazivac na PCB ako 
  98:src/kernel.cpp ****                 break;
  99:src/kernel.cpp ****             }
 100:src/kernel.cpp ****             case Kernel::sysCallCodes::sem_close: // a1 = sem
 101:src/kernel.cpp ****             {
 102:src/kernel.cpp ****                 SCB* sem = (SCB*) PCB::running->registers[11];
 103:src/kernel.cpp **** 
 104:src/kernel.cpp ****                 sem->signalClosing();
 105:src/kernel.cpp ****                 delete sem; // destruktor ce signalizirati svim procesima da je obrisan
 106:src/kernel.cpp **** 
 107:src/kernel.cpp ****                 break;
 108:src/kernel.cpp ****             }
 109:src/kernel.cpp ****             default:
 110:src/kernel.cpp ****                 printError();
 111:src/kernel.cpp ****                 break;
 112:src/kernel.cpp ****         }
 113:src/kernel.cpp ****         Kernel::w_sepc(sepc);
 114:src/kernel.cpp ****         Kernel::w_sstatus(sstatus);
 115:src/kernel.cpp ****         return;
 116:src/kernel.cpp ****     }
 117:src/kernel.cpp ****     else if(scause == (1UL << 63 | 1)) { // softverski prekid od tajmera
 131              		.loc 1 117 10 is_stmt 1
 132              		.loc 1 117 20 is_stmt 0
 133 0080 033784FD 		ld	a4,-40(s0)
 134              		.loc 1 117 10
 135 0084 9307F0FF 		li	a5,-1
 136 0088 9397F703 		slli	a5,a5,63
 137 008c 93871700 		addi	a5,a5,1
 138 0090 6306F724 		beq	a4,a5,.L25
 118:src/kernel.cpp ****         PCB::timeSliceCounter++;
 119:src/kernel.cpp ****         if(PCB::timeSliceCounter >= PCB::running->timeSlice) {
 120:src/kernel.cpp ****             PCB::timeSliceCounter = 0;
 121:src/kernel.cpp ****             PCB::dispatch(); // vrsimo promenu konteksta ako je istekao time slice procesa
 122:src/kernel.cpp ****             Kernel::w_sepc(sepc);
 123:src/kernel.cpp ****             Kernel::w_sstatus(sstatus);
 124:src/kernel.cpp ****         }
 125:src/kernel.cpp ****         Kernel::mc_sip(Kernel::SIP_SSIE); // postavljamo SSIE na 0 jer smo obradili softverski prek
 126:src/kernel.cpp ****     }
 127:src/kernel.cpp ****     else if(scause == (1UL << 63 | 9)) { // spoljasnji prekid od konzole
 139              		.loc 1 127 10 is_stmt 1
 140              		.loc 1 127 20 is_stmt 0
 141 0094 033784FD 		ld	a4,-40(s0)
 142              		.loc 1 127 10
 143 0098 9307F0FF 		li	a5,-1
 144 009c 9397F703 		slli	a5,a5,63
GAS LISTING /tmp/cc3zY2CU.s 			page 8


 145 00a0 93879700 		addi	a5,a5,9
 146 00a4 630AF728 		beq	a4,a5,.L26
 128:src/kernel.cpp ****         console_handler(); // TODO: zameniti sa svojim console_handlerom()
 129:src/kernel.cpp ****     }
 130:src/kernel.cpp ****     else { // neka vrsta greske, neocekivan skok na prekidnu rutinu
 131:src/kernel.cpp ****         printError();
 147              		.loc 1 131 9 is_stmt 1
 148              		.loc 1 131 19 is_stmt 0
 149 00a8 97000000 		call	_Z10printErrorv@plt
 149      E7800000 
 150              	.LVL0:
 151 00b0 6F004008 		j	.L3
 152              	.L4:
 153              	.LBB47:
  19:src/kernel.cpp ****         size_t volatile code = PCB::running->registers[10]; // a0
 154              		.loc 1 19 9 is_stmt 1
  19:src/kernel.cpp ****         size_t volatile code = PCB::running->registers[10]; // a0
 155              		.loc 1 19 14 is_stmt 0
 156 00b4 833704FD 		ld	a5,-48(s0)
 157 00b8 93874700 		addi	a5,a5,4
 158 00bc 2338F4FC 		sd	a5,-48(s0)
  20:src/kernel.cpp ****         switch(code) {
 159              		.loc 1 20 9 is_stmt 1
  20:src/kernel.cpp ****         switch(code) {
 160              		.loc 1 20 46 is_stmt 0
 161 00c0 97070000 		la	a5,_ZN3PCB7runningE
 161      83B70700 
 162 00c8 83B60700 		ld	a3,0(a5)
 163 00cc 03B78601 		ld	a4,24(a3)
  20:src/kernel.cpp ****         switch(code) {
 164              		.loc 1 20 25
 165 00d0 83370705 		ld	a5,80(a4)
 166 00d4 2334F4FA 		sd	a5,-88(s0)
  21:src/kernel.cpp ****             case Kernel::sysCallCodes::mem_alloc: // mem_alloc(size_t size) a1 - size
 167              		.loc 1 21 9 is_stmt 1
 168              	.LBB48:
  21:src/kernel.cpp ****             case Kernel::sysCallCodes::mem_alloc: // mem_alloc(size_t size) a1 - size
 169              		.loc 1 21 16 is_stmt 0
 170 00d8 833784FA 		ld	a5,-88(s0)
 171 00dc 13064002 		li	a2,36
 172 00e0 6368F61E 		bgtu	a5,a2,.L7
 173 00e4 93972700 		slli	a5,a5,2
 174 00e8 17060000 		lla	a2,.L9
 174      13060600 
 175 00f0 B387C700 		add	a5,a5,a2
 176 00f4 83A70700 		lw	a5,0(a5)
 177 00f8 B387C700 		add	a5,a5,a2
 178 00fc 67800700 		jr	a5
 179              		.section	.rodata
 180              		.align	2
 181              		.align	2
 182              	.L9:
 183 0000 00000000 		.word	.L7-.L9
 184 0004 00000000 		.word	.L18-.L9
 185 0008 00000000 		.word	.L17-.L9
 186 000c 00000000 		.word	.L7-.L9
 187 0010 00000000 		.word	.L7-.L9
GAS LISTING /tmp/cc3zY2CU.s 			page 9


 188 0014 00000000 		.word	.L7-.L9
 189 0018 00000000 		.word	.L7-.L9
 190 001c 00000000 		.word	.L7-.L9
 191 0020 00000000 		.word	.L7-.L9
 192 0024 00000000 		.word	.L7-.L9
 193 0028 00000000 		.word	.L7-.L9
 194 002c 00000000 		.word	.L7-.L9
 195 0030 00000000 		.word	.L7-.L9
 196 0034 00000000 		.word	.L7-.L9
 197 0038 00000000 		.word	.L7-.L9
 198 003c 00000000 		.word	.L7-.L9
 199 0040 00000000 		.word	.L7-.L9
 200 0044 00000000 		.word	.L16-.L9
 201 0048 00000000 		.word	.L15-.L9
 202 004c 00000000 		.word	.L14-.L9
 203 0050 00000000 		.word	.L13-.L9
 204 0054 00000000 		.word	.L7-.L9
 205 0058 00000000 		.word	.L7-.L9
 206 005c 00000000 		.word	.L7-.L9
 207 0060 00000000 		.word	.L7-.L9
 208 0064 00000000 		.word	.L7-.L9
 209 0068 00000000 		.word	.L7-.L9
 210 006c 00000000 		.word	.L7-.L9
 211 0070 00000000 		.word	.L7-.L9
 212 0074 00000000 		.word	.L7-.L9
 213 0078 00000000 		.word	.L7-.L9
 214 007c 00000000 		.word	.L7-.L9
 215 0080 00000000 		.word	.L7-.L9
 216 0084 00000000 		.word	.L12-.L9
 217 0088 00000000 		.word	.L11-.L9
 218 008c 00000000 		.word	.L10-.L9
 219 0090 00000000 		.word	.L8-.L9
 220              		.text
 221              	.L18:
 222              	.LBB49:
  22:src/kernel.cpp ****             {
 223              		.loc 1 22 13 is_stmt 1
  23:src/kernel.cpp ****                 size_t size = PCB::running->registers[11];
 224              		.loc 1 23 13
 225              	.LBB50:
  24:src/kernel.cpp ****                 size = MemoryAllocator::blocksInSize(size);
 226              		.loc 1 24 17
  24:src/kernel.cpp ****                 size = MemoryAllocator::blocksInSize(size);
 227              		.loc 1 24 24 is_stmt 0
 228 0100 03358705 		ld	a0,88(a4)
 229              	.LVL1:
  25:src/kernel.cpp **** 
 230              		.loc 1 25 17 is_stmt 1
 231              	.LBB51:
 232              	.LBB52:
 233              		.file 3 "src/../h/MemoryAllocator.h"
   1:src/../h/MemoryAllocator.h **** #ifndef PROJECT_BASE_MEMORYALLOCATOR_H
   2:src/../h/MemoryAllocator.h **** #define PROJECT_BASE_MEMORYALLOCATOR_H
   3:src/../h/MemoryAllocator.h **** 
   4:src/../h/MemoryAllocator.h **** #include "hw.h"
   5:src/../h/MemoryAllocator.h **** 
   6:src/../h/MemoryAllocator.h **** class MemoryAllocator {
GAS LISTING /tmp/cc3zY2CU.s 			page 10


   7:src/../h/MemoryAllocator.h **** public:
   8:src/../h/MemoryAllocator.h ****     /*
   9:src/../h/MemoryAllocator.h ****     Alocira (najmanje) size bajtova memorije, zaokruženo i poravnato na blokove veličine MEM_BLOC
  10:src/../h/MemoryAllocator.h ****     Svaki alocirani segment ima zaglavlje sa velicinom tog segmenta(vraca se adresa nakon tog zagla
  11:src/../h/MemoryAllocator.h **** 
  12:src/../h/MemoryAllocator.h ****     Vraća:
  13:src/../h/MemoryAllocator.h ****     pokazivač na alocirani deo memorije u slučaju uspeha, nullptr u slučaju neuspeha
  14:src/../h/MemoryAllocator.h **** 
  15:src/../h/MemoryAllocator.h ****     Radi se po algoritmu first fit(alociramo prvi segment koji je >= size). Ako je preostao prostor
  16:src/../h/MemoryAllocator.h ****     jednog bloka, taj preostali prostor se pridruzuje ovom koji smo sad alocirali(jer nema poente d
  17:src/../h/MemoryAllocator.h ****     */
  18:src/../h/MemoryAllocator.h ****     static void* mem_alloc(size_t size);
  19:src/../h/MemoryAllocator.h ****     /*
  20:src/../h/MemoryAllocator.h ****     Oslobađa prostor prethodno zauzet pomoću mem_alloc.
  21:src/../h/MemoryAllocator.h ****     Vraća 0 u slučaju uspeha, BAD_POINTER  flag ako je dostavljen los pokazivac.
  22:src/../h/MemoryAllocator.h ****     Ako je moguce, spaja dva susedna slobodna segmenta u jedan veci
  23:src/../h/MemoryAllocator.h ****     */
  24:src/../h/MemoryAllocator.h ****     static int mem_free(void* memSegment);
  25:src/../h/MemoryAllocator.h **** 
  26:src/../h/MemoryAllocator.h ****     enum memFreeFlags {
  27:src/../h/MemoryAllocator.h ****         BAD_POINTER = -1 // nije koriscen pokazviac iz mem_alloc
  28:src/../h/MemoryAllocator.h ****     };
  29:src/../h/MemoryAllocator.h **** 
  30:src/../h/MemoryAllocator.h ****     // Vraca minimalan potreban broj blokova za alokaciju memorije velicine size bajtova
  31:src/../h/MemoryAllocator.h ****     static inline size_t sizeInBlocks(size_t size) {
  32:src/../h/MemoryAllocator.h ****         return (size / MEM_BLOCK_SIZE) + (size % MEM_BLOCK_SIZE > 0);
  33:src/../h/MemoryAllocator.h ****     }
  34:src/../h/MemoryAllocator.h **** 
  35:src/../h/MemoryAllocator.h ****     // Vraca velicinu numOfBlocks blokova u bajtovima
  36:src/../h/MemoryAllocator.h ****     static inline size_t blocksInSize(size_t numOfBlocks) {
  37:src/../h/MemoryAllocator.h ****         return numOfBlocks * MEM_BLOCK_SIZE;
 234              		.loc 3 37 9
 235              	.LBE52:
 236              	.LBE51:
  27:src/kernel.cpp ****                 break;
 237              		.loc 1 27 17
  27:src/kernel.cpp ****                 break;
 238              		.loc 1 27 81 is_stmt 0
 239 0104 13156500 		slli	a0,a0,6
 240              	.LVL2:
 241 0108 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 241      E7800000 
 242              	.LVL3:
  27:src/kernel.cpp ****                 break;
 243              		.loc 1 27 31
 244 0110 97070000 		la	a5,_ZN3PCB7runningE
 244      83B70700 
 245 0118 83B70700 		ld	a5,0(a5)
 246 011c 83B78701 		ld	a5,24(a5)
  27:src/kernel.cpp ****                 break;
 247              		.loc 1 27 45
 248 0120 23B8A704 		sd	a0,80(a5)
  28:src/kernel.cpp ****             }
 249              		.loc 1 28 17 is_stmt 1
 250              	.L19:
 251              	.LBE50:
 252              	.LBE49:
GAS LISTING /tmp/cc3zY2CU.s 			page 11


 253              	.LBE48:
 113:src/kernel.cpp ****         Kernel::w_sstatus(sstatus);
 254              		.loc 1 113 9
 113:src/kernel.cpp ****         Kernel::w_sstatus(sstatus);
 255              		.loc 1 113 23 is_stmt 0
 256 0124 833704FD 		ld	a5,-48(s0)
 257              	.LVL4:
 258              	.LBB65:
 259              	.LBB66:
  55:src/../h/kernel.h ****     }
 260              		.loc 2 55 9 is_stmt 1
  55:src/../h/kernel.h ****     }
 261              		.loc 2 55 69 is_stmt 0
 262              	#APP
 263              	# 55 "src/../h/kernel.h" 1
 264              		csrw sepc, a5
 265              	# 0 "" 2
 266              	.LVL5:
 267              	#NO_APP
 268              	.LBE66:
 269              	.LBE65:
 114:src/kernel.cpp ****         return;
 270              		.loc 1 114 9 is_stmt 1
 114:src/kernel.cpp ****         return;
 271              		.loc 1 114 26 is_stmt 0
 272 012c 833784FC 		ld	a5,-56(s0)
 273              	.LVL6:
 274              	.LBB67:
 275              	.LBB68:
 132:src/../h/kernel.h ****     }
 133:src/../h/kernel.h **** 
 134:src/../h/kernel.h ****     // write register sstatus
 135:src/../h/kernel.h ****     static void w_sstatus(size_t sstatus) {
 136:src/../h/kernel.h ****         __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 276              		.loc 2 136 9 is_stmt 1
 277              		.loc 2 136 81 is_stmt 0
 278              	#APP
 279              	# 136 "src/../h/kernel.h" 1
 137              	    }
 280              		csrw sstatus, a5
 281              	# 0 "" 2
 282              	.LVL7:
 283              	#NO_APP
 284              	.LBE68:
 285              	.LBE67:
 115:src/kernel.cpp ****     }
 286              		.loc 1 115 9 is_stmt 1
 287              	.L3:
 288              	.LBE47:
 289              	.LBE46:
 132:src/kernel.cpp ****     }
 133:src/kernel.cpp **** 
 134:src/kernel.cpp **** }
 290              		.loc 1 134 1 is_stmt 0
 291 0134 83308105 		ld	ra,88(sp)
 292              		.cfi_remember_state
 293              		.cfi_restore 1
GAS LISTING /tmp/cc3zY2CU.s 			page 12


 294 0138 03340105 		ld	s0,80(sp)
 295              		.cfi_restore 8
 296              		.cfi_def_cfa 2, 96
 297 013c 83348104 		ld	s1,72(sp)
 298              		.cfi_restore 9
 299 0140 03390104 		ld	s2,64(sp)
 300              		.cfi_restore 18
 301 0144 13010106 		addi	sp,sp,96
 302              		.cfi_def_cfa_offset 0
 303 0148 67800000 		jr	ra
 304              	.L17:
 305              		.cfi_restore_state
 306              	.LBB77:
 307              	.LBB70:
 308              	.LBB69:
 309              	.LBB64:
  30:src/kernel.cpp ****             {
 310              		.loc 1 30 13 is_stmt 1
  31:src/kernel.cpp ****                 void* memSegment = (void*)PCB::running->registers[11];
 311              		.loc 1 31 13
 312              	.LBB53:
  32:src/kernel.cpp ****                 PCB::running->registers[10] = (size_t)MemoryAllocator::mem_free(memSegment);
 313              		.loc 1 32 17
 314              	.LVL8:
  33:src/kernel.cpp ****                 break;
 315              		.loc 1 33 17
  33:src/kernel.cpp ****                 break;
 316              		.loc 1 33 80 is_stmt 0
 317 014c 03358705 		ld	a0,88(a4)
 318 0150 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 318      E7800000 
 319              	.LVL9:
  33:src/kernel.cpp ****                 break;
 320              		.loc 1 33 31
 321 0158 97070000 		la	a5,_ZN3PCB7runningE
 321      83B70700 
 322 0160 83B70700 		ld	a5,0(a5)
 323 0164 83B78701 		ld	a5,24(a5)
  33:src/kernel.cpp ****                 break;
 324              		.loc 1 33 45
 325 0168 23B8A704 		sd	a0,80(a5)
  34:src/kernel.cpp ****             }
 326              		.loc 1 34 17 is_stmt 1
 327 016c 6FF09FFB 		j	.L19
 328              	.L14:
 329              	.LBE53:
  36:src/kernel.cpp ****             {
 330              		.loc 1 36 13
  37:src/kernel.cpp ****                 PCB::timeSliceCounter = 0;
 331              		.loc 1 37 13
  38:src/kernel.cpp ****                 PCB::dispatch();
 332              		.loc 1 38 17
  38:src/kernel.cpp ****                 PCB::dispatch();
 333              		.loc 1 38 39 is_stmt 0
 334 0170 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 334      83B70700 
 335 0178 23B00700 		sd	zero,0(a5)
GAS LISTING /tmp/cc3zY2CU.s 			page 13


  39:src/kernel.cpp ****                 break;
 336              		.loc 1 39 17 is_stmt 1
  39:src/kernel.cpp ****                 break;
 337              		.loc 1 39 30 is_stmt 0
 338 017c 97000000 		call	_ZN3PCB8dispatchEv@plt
 338      E7800000 
 339              	.LVL10:
  40:src/kernel.cpp ****             }
 340              		.loc 1 40 17 is_stmt 1
 341 0184 6FF01FFA 		j	.L19
 342              	.L15:
  42:src/kernel.cpp ****             {
 343              		.loc 1 42 13
  43:src/kernel.cpp ****                 PCB::running->finished = true;
 344              		.loc 1 43 13
  44:src/kernel.cpp ****                 PCB::timeSliceCounter = 0;
 345              		.loc 1 44 17
  44:src/kernel.cpp ****                 PCB::timeSliceCounter = 0;
 346              		.loc 1 44 40 is_stmt 0
 347 0188 93071000 		li	a5,1
 348 018c 2384F602 		sb	a5,40(a3)
  45:src/kernel.cpp ****                 PCB::dispatch();
 349              		.loc 1 45 17 is_stmt 1
  45:src/kernel.cpp ****                 PCB::dispatch();
 350              		.loc 1 45 39 is_stmt 0
 351 0190 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 351      83B70700 
 352 0198 23B00700 		sd	zero,0(a5)
  46:src/kernel.cpp ****                 PCB::running->registers[10] = (size_t)0;
 353              		.loc 1 46 17 is_stmt 1
  46:src/kernel.cpp ****                 PCB::running->registers[10] = (size_t)0;
 354              		.loc 1 46 30 is_stmt 0
 355 019c 97000000 		call	_ZN3PCB8dispatchEv@plt
 355      E7800000 
 356              	.LVL11:
  47:src/kernel.cpp ****                 break;
 357              		.loc 1 47 17 is_stmt 1
  47:src/kernel.cpp ****                 break;
 358              		.loc 1 47 31 is_stmt 0
 359 01a4 97070000 		la	a5,_ZN3PCB7runningE
 359      83B70700 
 360 01ac 83B70700 		ld	a5,0(a5)
 361 01b0 83B78701 		ld	a5,24(a5)
  47:src/kernel.cpp ****                 break;
 362              		.loc 1 47 45
 363 01b4 23B80704 		sd	zero,80(a5)
  48:src/kernel.cpp ****             }
 364              		.loc 1 48 17 is_stmt 1
 365 01b8 6FF0DFF6 		j	.L19
 366              	.L13:
  50:src/kernel.cpp ****             {
 367              		.loc 1 50 13
  51:src/kernel.cpp ****                 PCB **handle = (PCB **) PCB::running->registers[11];
 368              		.loc 1 51 13
 369              	.LBB54:
  52:src/kernel.cpp ****                 Scheduler::put(*handle);
 370              		.loc 1 52 17
GAS LISTING /tmp/cc3zY2CU.s 			page 14


  52:src/kernel.cpp ****                 Scheduler::put(*handle);
 371              		.loc 1 52 67 is_stmt 0
 372 01bc 83378705 		ld	a5,88(a4)
 373              	.LVL12:
  53:src/kernel.cpp ****                 break;
 374              		.loc 1 53 17 is_stmt 1
  53:src/kernel.cpp ****                 break;
 375              		.loc 1 53 31 is_stmt 0
 376 01c0 03B50700 		ld	a0,0(a5)
 377 01c4 97000000 		call	_ZN9Scheduler3putEP3PCB@plt
 377      E7800000 
 378              	.LVL13:
  54:src/kernel.cpp ****             }
 379              		.loc 1 54 17 is_stmt 1
 380 01cc 6FF09FF5 		j	.L19
 381              	.L16:
 382              	.LBE54:
  56:src/kernel.cpp ****             {
 383              		.loc 1 56 13
  57:src/kernel.cpp ****                 // argumenti
 384              		.loc 1 57 13
 385              	.LBB55:
  59:src/kernel.cpp ****                 void *arg = (void*)PCB::running->registers[13];
 386              		.loc 1 59 17
 387              	.LVL14:
  60:src/kernel.cpp **** 
 388              		.loc 1 60 17
  62:src/kernel.cpp ****                 *handle = PCB::createProccess(main, arg);
 389              		.loc 1 62 17
  62:src/kernel.cpp ****                 *handle = PCB::createProccess(main, arg);
 390              		.loc 1 62 65 is_stmt 0
 391 01d0 83348705 		ld	s1,88(a4)
 392              	.LVL15:
  63:src/kernel.cpp **** 
 393              		.loc 1 63 17 is_stmt 1
  63:src/kernel.cpp **** 
 394              		.loc 1 63 46 is_stmt 0
 395 01d4 83358706 		ld	a1,104(a4)
 396 01d8 03350706 		ld	a0,96(a4)
 397 01dc 97000000 		call	_ZN3PCB14createProccessEPFvvEPv@plt
 397      E7800000 
 398              	.LVL16:
  63:src/kernel.cpp **** 
 399              		.loc 1 63 25
 400 01e4 23B0A400 		sd	a0,0(s1)
  66:src/kernel.cpp **** 
 401              		.loc 1 66 17 is_stmt 1
  66:src/kernel.cpp **** 
 402              		.loc 1 66 31 is_stmt 0
 403 01e8 97070000 		la	a5,_ZN3PCB7runningE
 403      83B70700 
 404 01f0 83B70700 		ld	a5,0(a5)
 405 01f4 03B78701 		ld	a4,24(a5)
  66:src/kernel.cpp **** 
 406              		.loc 1 66 45
 407 01f8 23389704 		sd	s1,80(a4)
  68:src/kernel.cpp ****                 // dodeljujemo alociran stek procesu
GAS LISTING /tmp/cc3zY2CU.s 			page 15


 408              		.loc 1 68 17 is_stmt 1
  68:src/kernel.cpp ****                 // dodeljujemo alociran stek procesu
 409              		.loc 1 68 20 is_stmt 0
 410 01fc 03B70400 		ld	a4,0(s1)
  68:src/kernel.cpp ****                 // dodeljujemo alociran stek procesu
 411              		.loc 1 68 17
 412 0200 E30207F2 		beqz	a4,.L19
  70:src/kernel.cpp ****                 (*handle)->stack = stack;
 413              		.loc 1 70 17 is_stmt 1
  70:src/kernel.cpp ****                 (*handle)->stack = stack;
 414              		.loc 1 70 56 is_stmt 0
 415 0204 83B78701 		ld	a5,24(a5)
  70:src/kernel.cpp ****                 (*handle)->stack = stack;
 416              		.loc 1 70 68
 417 0208 83B70707 		ld	a5,112(a5)
 418              	.LVL17:
  71:src/kernel.cpp ****                 (*handle)->registers[2] = (size_t)&stack[DEFAULT_STACK_SIZE]; // sp(x2)
 419              		.loc 1 71 17 is_stmt 1
  71:src/kernel.cpp ****                 (*handle)->registers[2] = (size_t)&stack[DEFAULT_STACK_SIZE]; // sp(x2)
 420              		.loc 1 71 34 is_stmt 0
 421 020c 2334F700 		sd	a5,8(a4)
  72:src/kernel.cpp **** 
 422              		.loc 1 72 17 is_stmt 1
  72:src/kernel.cpp **** 
 423              		.loc 1 72 51 is_stmt 0
 424 0210 37870000 		li	a4,32768
 425 0214 B387E700 		add	a5,a5,a4
 426              	.LVL18:
  72:src/kernel.cpp **** 
 427              		.loc 1 72 18
 428 0218 03B70400 		ld	a4,0(s1)
  72:src/kernel.cpp **** 
 429              		.loc 1 72 28
 430 021c 03378701 		ld	a4,24(a4)
  72:src/kernel.cpp **** 
 431              		.loc 1 72 41
 432 0220 2338F700 		sd	a5,16(a4)
  74:src/kernel.cpp ****             }
 433              		.loc 1 74 17 is_stmt 1
 434 0224 6FF01FF0 		j	.L19
 435              	.LVL19:
 436              	.L12:
 437              	.LBE55:
  76:src/kernel.cpp ****             {
 438              		.loc 1 76 13
  77:src/kernel.cpp ****                 SCB **handle = (SCB**) PCB::running->registers[11];
 439              		.loc 1 77 13
 440              	.LBB56:
  78:src/kernel.cpp ****                 size_t init = (int) PCB::running->registers[12];
 441              		.loc 1 78 17
  78:src/kernel.cpp ****                 size_t init = (int) PCB::running->registers[12];
 442              		.loc 1 78 66 is_stmt 0
 443 0228 83348705 		ld	s1,88(a4)
 444              	.LVL20:
  79:src/kernel.cpp **** 
 445              		.loc 1 79 17 is_stmt 1
  79:src/kernel.cpp **** 
GAS LISTING /tmp/cc3zY2CU.s 			page 16


 446              		.loc 1 79 31 is_stmt 0
 447 022c 03290706 		lw	s2,96(a4)
 448              	.LVL21:
  81:src/kernel.cpp **** 
 449              		.loc 1 81 17 is_stmt 1
 450              	.LBB57:
 451              	.LBB58:
 452              		.file 4 "src/../h/SCB.h"
   1:src/../h/SCB.h **** #ifndef PROJECT_BASE_SCB_H
   2:src/../h/SCB.h **** #define PROJECT_BASE_SCB_H
   3:src/../h/SCB.h **** 
   4:src/../h/SCB.h **** #include "PCB.h"
   5:src/../h/SCB.h **** #include "Scheduler.h"
   6:src/../h/SCB.h **** 
   7:src/../h/SCB.h **** class SCB { // Semaphore Control Block
   8:src/../h/SCB.h **** public:
   9:src/../h/SCB.h ****     int getSemValue() const {
  10:src/../h/SCB.h ****         return semValue;
  11:src/../h/SCB.h ****     }
  12:src/../h/SCB.h **** 
  13:src/../h/SCB.h ****     // smanjuje vrednost semValue i ako ona padne manje od 0, vraca true(tekuci proces treba da se 
  14:src/../h/SCB.h ****     bool wait();
  15:src/../h/SCB.h **** 
  16:src/../h/SCB.h ****     // povecava vrednost semValue i ako je ona posle povecanja <= 0, vraca se proces koji treba da 
  17:src/../h/SCB.h ****     PCB* signal();
  18:src/../h/SCB.h **** 
  19:src/../h/SCB.h ****     void* operator new(size_t size);
  20:src/../h/SCB.h ****     void operator delete(void* memSegment);
  21:src/../h/SCB.h **** 
  22:src/../h/SCB.h ****     static SCB* createSemaphore(int semValue = 1) {
  23:src/../h/SCB.h ****         return new SCB(semValue);
 453              		.loc 4 23 9
 454              		.loc 4 23 32 is_stmt 0
 455 0230 13058001 		li	a0,24
 456 0234 97000000 		call	_ZN3SCBnwEm@plt
 456      E7800000 
 457              	.LVL22:
 458              	.LBB59:
 459              	.LBB60:
  24:src/../h/SCB.h ****     }
  25:src/../h/SCB.h **** 
  26:src/../h/SCB.h ****     // Pre zatvaranja svim procesima koji su cekali na semaforu signalizira da je semafor obrisan i
  27:src/../h/SCB.h ****     void signalClosing();
  28:src/../h/SCB.h **** private:
  29:src/../h/SCB.h ****     SCB(int semValue_ = 1) {
 460              		.loc 4 29 28
 461 023c 23300500 		sd	zero,0(a0)
 462 0240 23340500 		sd	zero,8(a0)
  30:src/../h/SCB.h ****         semValue = semValue_;
 463              		.loc 4 30 9 is_stmt 1
 464              		.loc 4 30 18 is_stmt 0
 465 0244 23282501 		sw	s2,16(a0)
 466              	.LVL23:
 467              	.LBE60:
 468              	.LBE59:
 469              	.LBE58:
 470              	.LBE57:
GAS LISTING /tmp/cc3zY2CU.s 			page 17


  81:src/kernel.cpp **** 
 471              		.loc 1 81 27
 472 0248 23B0A400 		sd	a0,0(s1)
  83:src/kernel.cpp ****                 break;
 473              		.loc 1 83 17 is_stmt 1
  83:src/kernel.cpp ****                 break;
 474              		.loc 1 83 31 is_stmt 0
 475 024c 97070000 		la	a5,_ZN3PCB7runningE
 475      83B70700 
 476 0254 83B70700 		ld	a5,0(a5)
 477 0258 83B78701 		ld	a5,24(a5)
  83:src/kernel.cpp ****                 break;
 478              		.loc 1 83 45
 479 025c 23B89704 		sd	s1,80(a5)
  84:src/kernel.cpp ****             }
 480              		.loc 1 84 17 is_stmt 1
 481 0260 6FF05FEC 		j	.L19
 482              	.LVL24:
 483              	.L10:
 484              	.LBE56:
  86:src/kernel.cpp ****             {
 485              		.loc 1 86 13
  87:src/kernel.cpp ****                 SCB* sem = (SCB*) PCB::running->registers[11];
 486              		.loc 1 87 13
 487              	.LBB61:
  88:src/kernel.cpp **** 
 488              		.loc 1 88 17
  90:src/kernel.cpp ****                 break;
 489              		.loc 1 90 17
  90:src/kernel.cpp ****                 break;
 490              		.loc 1 90 56 is_stmt 0
 491 0264 03358705 		ld	a0,88(a4)
 492 0268 97000000 		call	_ZN3SCB4waitEv@plt
 492      E7800000 
 493              	.LVL25:
  90:src/kernel.cpp ****                 break;
 494              		.loc 1 90 31
 495 0270 97070000 		la	a5,_ZN3PCB7runningE
 495      83B70700 
 496 0278 83B70700 		ld	a5,0(a5)
 497 027c 83B78701 		ld	a5,24(a5)
  90:src/kernel.cpp ****                 break;
 498              		.loc 1 90 45
 499 0280 23B8A704 		sd	a0,80(a5)
  91:src/kernel.cpp ****             }
 500              		.loc 1 91 17 is_stmt 1
 501 0284 6FF01FEA 		j	.L19
 502              	.L8:
 503              	.LBE61:
  93:src/kernel.cpp ****             {
 504              		.loc 1 93 13
  94:src/kernel.cpp ****                 SCB* sem = (SCB*) PCB::running->registers[11];
 505              		.loc 1 94 13
 506              	.LBB62:
  95:src/kernel.cpp **** 
 507              		.loc 1 95 17
 508              	.LVL26:
GAS LISTING /tmp/cc3zY2CU.s 			page 18


  97:src/kernel.cpp ****                 break;
 509              		.loc 1 97 17
  97:src/kernel.cpp ****                 break;
 510              		.loc 1 97 66 is_stmt 0
 511 0288 03358705 		ld	a0,88(a4)
 512 028c 97000000 		call	_ZN3SCB6signalEv@plt
 512      E7800000 
 513              	.LVL27:
  97:src/kernel.cpp ****                 break;
 514              		.loc 1 97 31
 515 0294 97070000 		la	a5,_ZN3PCB7runningE
 515      83B70700 
 516 029c 83B70700 		ld	a5,0(a5)
 517 02a0 83B78701 		ld	a5,24(a5)
  97:src/kernel.cpp ****                 break;
 518              		.loc 1 97 45
 519 02a4 23B8A704 		sd	a0,80(a5)
  98:src/kernel.cpp ****             }
 520              		.loc 1 98 17 is_stmt 1
 521 02a8 6FF0DFE7 		j	.L19
 522              	.L11:
 523              	.LBE62:
 100:src/kernel.cpp ****             {
 524              		.loc 1 100 13
 101:src/kernel.cpp ****                 SCB* sem = (SCB*) PCB::running->registers[11];
 525              		.loc 1 101 13
 526              	.LBB63:
 102:src/kernel.cpp **** 
 527              		.loc 1 102 17
 102:src/kernel.cpp **** 
 528              		.loc 1 102 61 is_stmt 0
 529 02ac 83348705 		ld	s1,88(a4)
 530              	.LVL28:
 104:src/kernel.cpp ****                 delete sem; // destruktor ce signalizirati svim procesima da je obrisan
 531              		.loc 1 104 17 is_stmt 1
 104:src/kernel.cpp ****                 delete sem; // destruktor ce signalizirati svim procesima da je obrisan
 532              		.loc 1 104 35 is_stmt 0
 533 02b0 13850400 		mv	a0,s1
 534 02b4 97000000 		call	_ZN3SCB13signalClosingEv@plt
 534      E7800000 
 535              	.LVL29:
 105:src/kernel.cpp **** 
 536              		.loc 1 105 17 is_stmt 1
 105:src/kernel.cpp **** 
 537              		.loc 1 105 27 is_stmt 0
 538 02bc E38404E6 		beqz	s1,.L19
 105:src/kernel.cpp **** 
 539              		.loc 1 105 24 discriminator 1
 540 02c0 13850400 		mv	a0,s1
 541 02c4 97000000 		call	_ZN3SCBdlEPv@plt
 541      E7800000 
 542              	.LVL30:
 543 02cc 6FF09FE5 		j	.L19
 544              	.LVL31:
 545              	.L7:
 546              	.LBE63:
 109:src/kernel.cpp ****                 printError();
GAS LISTING /tmp/cc3zY2CU.s 			page 19


 547              		.loc 1 109 13 is_stmt 1
 110:src/kernel.cpp ****                 break;
 548              		.loc 1 110 17
 110:src/kernel.cpp ****                 break;
 549              		.loc 1 110 27 is_stmt 0
 550 02d0 97000000 		call	_Z10printErrorv@plt
 550      E7800000 
 551              	.LVL32:
 111:src/kernel.cpp ****         }
 552              		.loc 1 111 17 is_stmt 1
 553 02d8 6FF0DFE4 		j	.L19
 554              	.L25:
 555              	.LBE64:
 556              	.LBE69:
 557              	.LBE70:
 118:src/kernel.cpp ****         if(PCB::timeSliceCounter >= PCB::running->timeSlice) {
 558              		.loc 1 118 9
 118:src/kernel.cpp ****         if(PCB::timeSliceCounter >= PCB::running->timeSlice) {
 559              		.loc 1 118 30 is_stmt 0
 560 02dc 17070000 		la	a4,_ZN3PCB16timeSliceCounterE
 560      03370700 
 561 02e4 83370700 		ld	a5,0(a4)
 562 02e8 93871700 		addi	a5,a5,1
 563 02ec 2330F700 		sd	a5,0(a4)
 119:src/kernel.cpp ****             PCB::timeSliceCounter = 0;
 564              		.loc 1 119 9 is_stmt 1
 119:src/kernel.cpp ****             PCB::timeSliceCounter = 0;
 565              		.loc 1 119 51 is_stmt 0
 566 02f0 17070000 		la	a4,_ZN3PCB7runningE
 566      03370700 
 567 02f8 03370700 		ld	a4,0(a4)
 568 02fc 03378703 		ld	a4,56(a4)
 119:src/kernel.cpp ****             PCB::timeSliceCounter = 0;
 569              		.loc 1 119 9
 570 0300 63F8E700 		bgeu	a5,a4,.L27
 571              	.L21:
 125:src/kernel.cpp ****     }
 572              		.loc 1 125 9 is_stmt 1
 573              	.LVL33:
 574              	.LBB71:
 575              	.LBB72:
  95:src/../h/kernel.h ****     }
 576              		.loc 2 95 9
  95:src/../h/kernel.h ****     }
 577              		.loc 2 95 68 is_stmt 0
 578 0304 93072000 		li	a5,2
 579              	#APP
 580              	# 95 "src/../h/kernel.h" 1
  96:src/../h/kernel.h **** 
 581              		csrc sip, a5
 582              	# 0 "" 2
 583              		.loc 2 96 5
 584              	#NO_APP
 585 030c 6FF09FE2 		j	.L3
 586              	.LVL34:
 587              	.L27:
 588              	.LBE72:
GAS LISTING /tmp/cc3zY2CU.s 			page 20


 589              	.LBE71:
 120:src/kernel.cpp ****             PCB::dispatch(); // vrsimo promenu konteksta ako je istekao time slice procesa
 590              		.loc 1 120 13 is_stmt 1
 120:src/kernel.cpp ****             PCB::dispatch(); // vrsimo promenu konteksta ako je istekao time slice procesa
 591              		.loc 1 120 35 is_stmt 0
 592 0310 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 592      83B70700 
 593 0318 23B00700 		sd	zero,0(a5)
 121:src/kernel.cpp ****             Kernel::w_sepc(sepc);
 594              		.loc 1 121 13 is_stmt 1
 121:src/kernel.cpp ****             Kernel::w_sepc(sepc);
 595              		.loc 1 121 26 is_stmt 0
 596 031c 97000000 		call	_ZN3PCB8dispatchEv@plt
 596      E7800000 
 597              	.LVL35:
 122:src/kernel.cpp ****             Kernel::w_sstatus(sstatus);
 598              		.loc 1 122 13 is_stmt 1
 122:src/kernel.cpp ****             Kernel::w_sstatus(sstatus);
 599              		.loc 1 122 27 is_stmt 0
 600 0324 833704FD 		ld	a5,-48(s0)
 601              	.LVL36:
 602              	.LBB73:
 603              	.LBB74:
  55:src/../h/kernel.h ****     }
 604              		.loc 2 55 9 is_stmt 1
  55:src/../h/kernel.h ****     }
 605              		.loc 2 55 69 is_stmt 0
 606              	#APP
 607              	# 55 "src/../h/kernel.h" 1
 608              		csrw sepc, a5
 609              	# 0 "" 2
 610              	.LVL37:
 611              	#NO_APP
 612              	.LBE74:
 613              	.LBE73:
 123:src/kernel.cpp ****         }
 614              		.loc 1 123 13 is_stmt 1
 123:src/kernel.cpp ****         }
 615              		.loc 1 123 30 is_stmt 0
 616 032c 833784FC 		ld	a5,-56(s0)
 617              	.LVL38:
 618              	.LBB75:
 619              	.LBB76:
 136:src/../h/kernel.h ****     }
 620              		.loc 2 136 9 is_stmt 1
 136:src/../h/kernel.h ****     }
 621              		.loc 2 136 81 is_stmt 0
 622              	#APP
 623              	# 136 "src/../h/kernel.h" 1
 624              		csrw sstatus, a5
 625              	# 0 "" 2
 626              		.loc 2 137 5
 627              	#NO_APP
 628 0334 6FF01FFD 		j	.L21
 629              	.LVL39:
 630              	.L26:
 631              	.LBE76:
GAS LISTING /tmp/cc3zY2CU.s 			page 21


 632              	.LBE75:
 128:src/kernel.cpp ****     }
 633              		.loc 1 128 9 is_stmt 1
 128:src/kernel.cpp ****     }
 634              		.loc 1 128 24 is_stmt 0
 635 0338 97000000 		call	console_handler@plt
 635      E7800000 
 636              	.LVL40:
 637 0340 6FF05FDF 		j	.L3
 638              	.LBE77:
 639              		.cfi_endproc
 640              	.LFE34:
 642              	.Letext0:
 643              		.file 5 "src/../h/hw.h"
 644              		.file 6 "src/../h/PCB.h"
 645              		.file 7 "src/../h/Scheduler.h"
 646              		.file 8 "src/../h/print.h"
 647              		.file 9 "src/../h/console.h"
GAS LISTING /tmp/cc3zY2CU.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 kernel.cpp
     /tmp/cc3zY2CU.s:9      .text:0000000000000000 _ZN6Kernel10popSppSpieEv
     /tmp/cc3zY2CU.s:13     .text:0000000000000000 .L0 
     /tmp/cc3zY2CU.s:14     .text:0000000000000000 .L0 
     /tmp/cc3zY2CU.s:15     .text:0000000000000004 .L0 
     /tmp/cc3zY2CU.s:17     .text:0000000000000008 .L0 
     /tmp/cc3zY2CU.s:19     .text:000000000000000c .L0 
     /tmp/cc3zY2CU.s:21     .text:000000000000000c .L0 
      src/kernel.cpp:10     .text:000000000000000c .L0 
     /tmp/cc3zY2CU.s:27     .text:0000000000000010 .L0 
      src/kernel.cpp:11     .text:0000000000000010 .L0 
     /tmp/cc3zY2CU.s:33     .text:0000000000000014 .L0 
     /tmp/cc3zY2CU.s:34     .text:0000000000000018 .L0 
     /tmp/cc3zY2CU.s:35     .text:0000000000000018 .L0 
     /tmp/cc3zY2CU.s:37     .text:000000000000001c .L0 
     /tmp/cc3zY2CU.s:39     .text:0000000000000020 .L0 
     /tmp/cc3zY2CU.s:45     .text:0000000000000020 interruptHandler
     /tmp/cc3zY2CU.s:48     .text:0000000000000020 .L0 
     /tmp/cc3zY2CU.s:49     .text:0000000000000020 .L0 
     /tmp/cc3zY2CU.s:50     .text:0000000000000024 .L0 
     /tmp/cc3zY2CU.s:55     .text:0000000000000034 .L0 
     /tmp/cc3zY2CU.s:56     .text:0000000000000034 .L0 
     /tmp/cc3zY2CU.s:57     .text:0000000000000034 .L0 
     /tmp/cc3zY2CU.s:58     .text:0000000000000034 .L0 
     /tmp/cc3zY2CU.s:60     .text:0000000000000038 .L0 
     /tmp/cc3zY2CU.s:65     .text:0000000000000038 .L0 
     /tmp/cc3zY2CU.s:66     .text:0000000000000038 .L0 
     /tmp/cc3zY2CU.s:67     .text:0000000000000038 .L0 
   src/../h/kernel.h:37     .text:0000000000000038 .L0 
     /tmp/cc3zY2CU.s:75     .text:0000000000000040 .L0 
     /tmp/cc3zY2CU.s:76     .text:0000000000000040 .L0 
     /tmp/cc3zY2CU.s:80     .text:0000000000000044 .L0 
     /tmp/cc3zY2CU.s:84     .text:0000000000000048 .L0 
     /tmp/cc3zY2CU.s:85     .text:0000000000000048 .L0 
     /tmp/cc3zY2CU.s:86     .text:0000000000000048 .L0 
   src/../h/kernel.h:49     .text:0000000000000048 .L0 
     /tmp/cc3zY2CU.s:94     .text:0000000000000050 .L0 
     /tmp/cc3zY2CU.s:95     .text:0000000000000050 .L0 
     /tmp/cc3zY2CU.s:99     .text:0000000000000054 .L0 
     /tmp/cc3zY2CU.s:103    .text:0000000000000058 .L0 
     /tmp/cc3zY2CU.s:104    .text:0000000000000058 .L0 
     /tmp/cc3zY2CU.s:105    .text:0000000000000058 .L0 
   src/../h/kernel.h:130    .text:0000000000000058 .L0 
     /tmp/cc3zY2CU.s:113    .text:0000000000000060 .L0 
     /tmp/cc3zY2CU.s:114    .text:0000000000000060 .L0 
     /tmp/cc3zY2CU.s:118    .text:0000000000000064 .L0 
     /tmp/cc3zY2CU.s:121    .text:0000000000000068 .L0 
     /tmp/cc3zY2CU.s:122    .text:0000000000000068 .L0 
     /tmp/cc3zY2CU.s:124    .text:000000000000006c .L0 
     /tmp/cc3zY2CU.s:127    .text:0000000000000074 .L0 
     /tmp/cc3zY2CU.s:129    .text:0000000000000078 .L0 
     /tmp/cc3zY2CU.s:132    .text:0000000000000080 .L0 
     /tmp/cc3zY2CU.s:133    .text:0000000000000080 .L0 
     /tmp/cc3zY2CU.s:135    .text:0000000000000084 .L0 
     /tmp/cc3zY2CU.s:140    .text:0000000000000094 .L0 
     /tmp/cc3zY2CU.s:141    .text:0000000000000094 .L0 
GAS LISTING /tmp/cc3zY2CU.s 			page 23


     /tmp/cc3zY2CU.s:143    .text:0000000000000098 .L0 
     /tmp/cc3zY2CU.s:148    .text:00000000000000a8 .L0 
     /tmp/cc3zY2CU.s:149    .text:00000000000000a8 .L0 
     /tmp/cc3zY2CU.s:155    .text:00000000000000b4 .L0 
     /tmp/cc3zY2CU.s:156    .text:00000000000000b4 .L0 
     /tmp/cc3zY2CU.s:160    .text:00000000000000c0 .L0 
     /tmp/cc3zY2CU.s:161    .text:00000000000000c0 .L0 
     /tmp/cc3zY2CU.s:165    .text:00000000000000d0 .L0 
     /tmp/cc3zY2CU.s:169    .text:00000000000000d8 .L0 
     /tmp/cc3zY2CU.s:170    .text:00000000000000d8 .L0 
     /tmp/cc3zY2CU.s:224    .text:0000000000000100 .L0 
     /tmp/cc3zY2CU.s:226    .text:0000000000000100 .L0 
     /tmp/cc3zY2CU.s:227    .text:0000000000000100 .L0 
     /tmp/cc3zY2CU.s:228    .text:0000000000000100 .L0 
     /tmp/cc3zY2CU.s:234    .text:0000000000000104 .L0 
     /tmp/cc3zY2CU.s:237    .text:0000000000000104 .L0 
     /tmp/cc3zY2CU.s:238    .text:0000000000000104 .L0 
     /tmp/cc3zY2CU.s:239    .text:0000000000000104 .L0 
     /tmp/cc3zY2CU.s:244    .text:0000000000000110 .L0 
     /tmp/cc3zY2CU.s:248    .text:0000000000000120 .L0 
     /tmp/cc3zY2CU.s:254    .text:0000000000000124 .L0 
     /tmp/cc3zY2CU.s:255    .text:0000000000000124 .L0 
     /tmp/cc3zY2CU.s:256    .text:0000000000000124 .L0 
     /tmp/cc3zY2CU.s:261    .text:0000000000000128 .L0 
   src/../h/kernel.h:55     .text:0000000000000128 .L0 
     /tmp/cc3zY2CU.s:271    .text:000000000000012c .L0 
     /tmp/cc3zY2CU.s:272    .text:000000000000012c .L0 
     /tmp/cc3zY2CU.s:277    .text:0000000000000130 .L0 
   src/../h/kernel.h:136    .text:0000000000000130 .L0 
     /tmp/cc3zY2CU.s:290    .text:0000000000000134 .L0 
     /tmp/cc3zY2CU.s:291    .text:0000000000000134 .L0 
     /tmp/cc3zY2CU.s:292    .text:0000000000000138 .L0 
     /tmp/cc3zY2CU.s:293    .text:0000000000000138 .L0 
     /tmp/cc3zY2CU.s:295    .text:000000000000013c .L0 
     /tmp/cc3zY2CU.s:296    .text:000000000000013c .L0 
     /tmp/cc3zY2CU.s:298    .text:0000000000000140 .L0 
     /tmp/cc3zY2CU.s:300    .text:0000000000000144 .L0 
     /tmp/cc3zY2CU.s:302    .text:0000000000000148 .L0 
     /tmp/cc3zY2CU.s:305    .text:000000000000014c .L0 
     /tmp/cc3zY2CU.s:311    .text:000000000000014c .L0 
     /tmp/cc3zY2CU.s:313    .text:000000000000014c .L0 
     /tmp/cc3zY2CU.s:315    .text:000000000000014c .L0 
     /tmp/cc3zY2CU.s:316    .text:000000000000014c .L0 
     /tmp/cc3zY2CU.s:317    .text:000000000000014c .L0 
     /tmp/cc3zY2CU.s:321    .text:0000000000000158 .L0 
     /tmp/cc3zY2CU.s:325    .text:0000000000000168 .L0 
     /tmp/cc3zY2CU.s:327    .text:000000000000016c .L0 
     /tmp/cc3zY2CU.s:331    .text:0000000000000170 .L0 
     /tmp/cc3zY2CU.s:332    .text:0000000000000170 .L0 
     /tmp/cc3zY2CU.s:333    .text:0000000000000170 .L0 
     /tmp/cc3zY2CU.s:334    .text:0000000000000170 .L0 
     /tmp/cc3zY2CU.s:337    .text:000000000000017c .L0 
     /tmp/cc3zY2CU.s:338    .text:000000000000017c .L0 
     /tmp/cc3zY2CU.s:341    .text:0000000000000184 .L0 
     /tmp/cc3zY2CU.s:344    .text:0000000000000188 .L0 
     /tmp/cc3zY2CU.s:345    .text:0000000000000188 .L0 
     /tmp/cc3zY2CU.s:346    .text:0000000000000188 .L0 
GAS LISTING /tmp/cc3zY2CU.s 			page 24


     /tmp/cc3zY2CU.s:347    .text:0000000000000188 .L0 
     /tmp/cc3zY2CU.s:350    .text:0000000000000190 .L0 
     /tmp/cc3zY2CU.s:351    .text:0000000000000190 .L0 
     /tmp/cc3zY2CU.s:354    .text:000000000000019c .L0 
     /tmp/cc3zY2CU.s:355    .text:000000000000019c .L0 
     /tmp/cc3zY2CU.s:358    .text:00000000000001a4 .L0 
     /tmp/cc3zY2CU.s:359    .text:00000000000001a4 .L0 
     /tmp/cc3zY2CU.s:363    .text:00000000000001b4 .L0 
     /tmp/cc3zY2CU.s:365    .text:00000000000001b8 .L0 
     /tmp/cc3zY2CU.s:368    .text:00000000000001bc .L0 
     /tmp/cc3zY2CU.s:370    .text:00000000000001bc .L0 
     /tmp/cc3zY2CU.s:371    .text:00000000000001bc .L0 
     /tmp/cc3zY2CU.s:372    .text:00000000000001bc .L0 
     /tmp/cc3zY2CU.s:375    .text:00000000000001c0 .L0 
     /tmp/cc3zY2CU.s:376    .text:00000000000001c0 .L0 
     /tmp/cc3zY2CU.s:380    .text:00000000000001cc .L0 
     /tmp/cc3zY2CU.s:384    .text:00000000000001d0 .L0 
     /tmp/cc3zY2CU.s:386    .text:00000000000001d0 .L0 
     /tmp/cc3zY2CU.s:388    .text:00000000000001d0 .L0 
     /tmp/cc3zY2CU.s:389    .text:00000000000001d0 .L0 
     /tmp/cc3zY2CU.s:390    .text:00000000000001d0 .L0 
     /tmp/cc3zY2CU.s:391    .text:00000000000001d0 .L0 
     /tmp/cc3zY2CU.s:394    .text:00000000000001d4 .L0 
     /tmp/cc3zY2CU.s:395    .text:00000000000001d4 .L0 
     /tmp/cc3zY2CU.s:400    .text:00000000000001e4 .L0 
     /tmp/cc3zY2CU.s:402    .text:00000000000001e8 .L0 
     /tmp/cc3zY2CU.s:403    .text:00000000000001e8 .L0 
     /tmp/cc3zY2CU.s:407    .text:00000000000001f8 .L0 
     /tmp/cc3zY2CU.s:409    .text:00000000000001fc .L0 
     /tmp/cc3zY2CU.s:410    .text:00000000000001fc .L0 
     /tmp/cc3zY2CU.s:412    .text:0000000000000200 .L0 
     /tmp/cc3zY2CU.s:414    .text:0000000000000204 .L0 
     /tmp/cc3zY2CU.s:415    .text:0000000000000204 .L0 
     /tmp/cc3zY2CU.s:417    .text:0000000000000208 .L0 
     /tmp/cc3zY2CU.s:420    .text:000000000000020c .L0 
     /tmp/cc3zY2CU.s:421    .text:000000000000020c .L0 
     /tmp/cc3zY2CU.s:423    .text:0000000000000210 .L0 
     /tmp/cc3zY2CU.s:424    .text:0000000000000210 .L0 
     /tmp/cc3zY2CU.s:428    .text:0000000000000218 .L0 
     /tmp/cc3zY2CU.s:430    .text:000000000000021c .L0 
     /tmp/cc3zY2CU.s:432    .text:0000000000000220 .L0 
     /tmp/cc3zY2CU.s:434    .text:0000000000000224 .L0 
     /tmp/cc3zY2CU.s:439    .text:0000000000000228 .L0 
     /tmp/cc3zY2CU.s:441    .text:0000000000000228 .L0 
     /tmp/cc3zY2CU.s:442    .text:0000000000000228 .L0 
     /tmp/cc3zY2CU.s:443    .text:0000000000000228 .L0 
     /tmp/cc3zY2CU.s:446    .text:000000000000022c .L0 
     /tmp/cc3zY2CU.s:447    .text:000000000000022c .L0 
     /tmp/cc3zY2CU.s:453    .text:0000000000000230 .L0 
     /tmp/cc3zY2CU.s:454    .text:0000000000000230 .L0 
     /tmp/cc3zY2CU.s:455    .text:0000000000000230 .L0 
     /tmp/cc3zY2CU.s:461    .text:000000000000023c .L0 
     /tmp/cc3zY2CU.s:464    .text:0000000000000244 .L0 
     /tmp/cc3zY2CU.s:465    .text:0000000000000244 .L0 
     /tmp/cc3zY2CU.s:472    .text:0000000000000248 .L0 
     /tmp/cc3zY2CU.s:474    .text:000000000000024c .L0 
     /tmp/cc3zY2CU.s:475    .text:000000000000024c .L0 
GAS LISTING /tmp/cc3zY2CU.s 			page 25


     /tmp/cc3zY2CU.s:479    .text:000000000000025c .L0 
     /tmp/cc3zY2CU.s:481    .text:0000000000000260 .L0 
     /tmp/cc3zY2CU.s:486    .text:0000000000000264 .L0 
     /tmp/cc3zY2CU.s:488    .text:0000000000000264 .L0 
     /tmp/cc3zY2CU.s:489    .text:0000000000000264 .L0 
     /tmp/cc3zY2CU.s:490    .text:0000000000000264 .L0 
     /tmp/cc3zY2CU.s:491    .text:0000000000000264 .L0 
     /tmp/cc3zY2CU.s:495    .text:0000000000000270 .L0 
     /tmp/cc3zY2CU.s:499    .text:0000000000000280 .L0 
     /tmp/cc3zY2CU.s:501    .text:0000000000000284 .L0 
     /tmp/cc3zY2CU.s:505    .text:0000000000000288 .L0 
     /tmp/cc3zY2CU.s:507    .text:0000000000000288 .L0 
     /tmp/cc3zY2CU.s:509    .text:0000000000000288 .L0 
     /tmp/cc3zY2CU.s:510    .text:0000000000000288 .L0 
     /tmp/cc3zY2CU.s:511    .text:0000000000000288 .L0 
     /tmp/cc3zY2CU.s:515    .text:0000000000000294 .L0 
     /tmp/cc3zY2CU.s:519    .text:00000000000002a4 .L0 
     /tmp/cc3zY2CU.s:521    .text:00000000000002a8 .L0 
     /tmp/cc3zY2CU.s:525    .text:00000000000002ac .L0 
     /tmp/cc3zY2CU.s:527    .text:00000000000002ac .L0 
     /tmp/cc3zY2CU.s:528    .text:00000000000002ac .L0 
     /tmp/cc3zY2CU.s:529    .text:00000000000002ac .L0 
     /tmp/cc3zY2CU.s:532    .text:00000000000002b0 .L0 
     /tmp/cc3zY2CU.s:533    .text:00000000000002b0 .L0 
     /tmp/cc3zY2CU.s:537    .text:00000000000002bc .L0 
     /tmp/cc3zY2CU.s:538    .text:00000000000002bc .L0 
     /tmp/cc3zY2CU.s:540    .text:00000000000002c0 .L0 
     /tmp/cc3zY2CU.s:548    .text:00000000000002d0 .L0 
     /tmp/cc3zY2CU.s:549    .text:00000000000002d0 .L0 
     /tmp/cc3zY2CU.s:550    .text:00000000000002d0 .L0 
     /tmp/cc3zY2CU.s:553    .text:00000000000002d8 .L0 
     /tmp/cc3zY2CU.s:559    .text:00000000000002dc .L0 
     /tmp/cc3zY2CU.s:560    .text:00000000000002dc .L0 
     /tmp/cc3zY2CU.s:565    .text:00000000000002f0 .L0 
     /tmp/cc3zY2CU.s:566    .text:00000000000002f0 .L0 
     /tmp/cc3zY2CU.s:570    .text:0000000000000300 .L0 
     /tmp/cc3zY2CU.s:576    .text:0000000000000304 .L0 
     /tmp/cc3zY2CU.s:577    .text:0000000000000304 .L0 
     /tmp/cc3zY2CU.s:578    .text:0000000000000304 .L0 
     /tmp/cc3zY2CU.s:585    .text:000000000000030c .L0 
     /tmp/cc3zY2CU.s:591    .text:0000000000000310 .L0 
     /tmp/cc3zY2CU.s:592    .text:0000000000000310 .L0 
     /tmp/cc3zY2CU.s:595    .text:000000000000031c .L0 
     /tmp/cc3zY2CU.s:596    .text:000000000000031c .L0 
     /tmp/cc3zY2CU.s:599    .text:0000000000000324 .L0 
     /tmp/cc3zY2CU.s:600    .text:0000000000000324 .L0 
     /tmp/cc3zY2CU.s:605    .text:0000000000000328 .L0 
   src/../h/kernel.h:55     .text:0000000000000328 .L0 
     /tmp/cc3zY2CU.s:615    .text:000000000000032c .L0 
     /tmp/cc3zY2CU.s:616    .text:000000000000032c .L0 
     /tmp/cc3zY2CU.s:621    .text:0000000000000330 .L0 
   src/../h/kernel.h:136    .text:0000000000000330 .L0 
     /tmp/cc3zY2CU.s:628    .text:0000000000000334 .L0 
     /tmp/cc3zY2CU.s:634    .text:0000000000000338 .L0 
     /tmp/cc3zY2CU.s:635    .text:0000000000000338 .L0 
     /tmp/cc3zY2CU.s:639    .text:0000000000000344 .L0 
     /tmp/cc3zY2CU.s:648    .text:0000000000000344 .L0 
GAS LISTING /tmp/cc3zY2CU.s 			page 26


     /tmp/cc3zY2CU.s:161    .text:00000000000000c0 .L0 
     /tmp/cc3zY2CU.s:182    .rodata:0000000000000000 .L9
     /tmp/cc3zY2CU.s:174    .text:00000000000000e8 .L0 
     /tmp/cc3zY2CU.s:244    .text:0000000000000110 .L0 
     /tmp/cc3zY2CU.s:321    .text:0000000000000158 .L0 
     /tmp/cc3zY2CU.s:334    .text:0000000000000170 .L0 
     /tmp/cc3zY2CU.s:351    .text:0000000000000190 .L0 
     /tmp/cc3zY2CU.s:359    .text:00000000000001a4 .L0 
     /tmp/cc3zY2CU.s:403    .text:00000000000001e8 .L0 
     /tmp/cc3zY2CU.s:475    .text:000000000000024c .L0 
     /tmp/cc3zY2CU.s:495    .text:0000000000000270 .L0 
     /tmp/cc3zY2CU.s:515    .text:0000000000000294 .L0 
     /tmp/cc3zY2CU.s:560    .text:00000000000002dc .L0 
     /tmp/cc3zY2CU.s:566    .text:00000000000002f0 .L0 
     /tmp/cc3zY2CU.s:592    .text:0000000000000310 .L0 
     /tmp/cc3zY2CU.s:152    .text:00000000000000b4 .L4
     /tmp/cc3zY2CU.s:554    .text:00000000000002dc .L25
     /tmp/cc3zY2CU.s:630    .text:0000000000000338 .L26
     /tmp/cc3zY2CU.s:287    .text:0000000000000134 .L3
     /tmp/cc3zY2CU.s:545    .text:00000000000002d0 .L7
     /tmp/cc3zY2CU.s:250    .text:0000000000000124 .L19
     /tmp/cc3zY2CU.s:587    .text:0000000000000310 .L27
     /tmp/cc3zY2CU.s:571    .text:0000000000000304 .L21
     /tmp/cc3zY2CU.s:221    .text:0000000000000100 .L18
     /tmp/cc3zY2CU.s:304    .text:000000000000014c .L17
     /tmp/cc3zY2CU.s:381    .text:00000000000001d0 .L16
     /tmp/cc3zY2CU.s:342    .text:0000000000000188 .L15
     /tmp/cc3zY2CU.s:328    .text:0000000000000170 .L14
     /tmp/cc3zY2CU.s:366    .text:00000000000001bc .L13
     /tmp/cc3zY2CU.s:436    .text:0000000000000228 .L12
     /tmp/cc3zY2CU.s:522    .text:00000000000002ac .L11
     /tmp/cc3zY2CU.s:483    .text:0000000000000264 .L10
     /tmp/cc3zY2CU.s:502    .text:0000000000000288 .L8
     /tmp/cc3zY2CU.s:2198   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc3zY2CU.s:3740   .debug_str:0000000000000809 .LASF166
     /tmp/cc3zY2CU.s:3498   .debug_str:00000000000000e6 .LASF167
     /tmp/cc3zY2CU.s:3704   .debug_str:000000000000072c .LASF168
     /tmp/cc3zY2CU.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc3zY2CU.s:642    .text:0000000000000344 .Letext0
     /tmp/cc3zY2CU.s:3466   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc3zY2CU.s:3556   .debug_str:000000000000029e .LASF0
     /tmp/cc3zY2CU.s:3586   .debug_str:000000000000037c .LASF1
     /tmp/cc3zY2CU.s:3688   .debug_str:00000000000006ab .LASF2
     /tmp/cc3zY2CU.s:3694   .debug_str:00000000000006da .LASF4
     /tmp/cc3zY2CU.s:3570   .debug_str:00000000000002f6 .LASF3
     /tmp/cc3zY2CU.s:3476   .debug_str:000000000000002a .LASF5
     /tmp/cc3zY2CU.s:3650   .debug_str:000000000000057d .LASF6
     /tmp/cc3zY2CU.s:3578   .debug_str:0000000000000351 .LASF7
     /tmp/cc3zY2CU.s:3534   .debug_str:000000000000020f .LASF8
     /tmp/cc3zY2CU.s:3540   .debug_str:0000000000000244 .LASF9
     /tmp/cc3zY2CU.s:3502   .debug_str:0000000000000105 .LASF10
     /tmp/cc3zY2CU.s:3528   .debug_str:00000000000001d4 .LASF11
     /tmp/cc3zY2CU.s:3506   .debug_str:0000000000000119 .LASF12
     /tmp/cc3zY2CU.s:3500   .debug_str:00000000000000f5 .LASF13
     /tmp/cc3zY2CU.s:3720   .debug_str:0000000000000796 .LASF14
     /tmp/cc3zY2CU.s:3522   .debug_str:0000000000000192 .LASF15
     /tmp/cc3zY2CU.s:3710   .debug_str:000000000000075f .LASF16
GAS LISTING /tmp/cc3zY2CU.s 			page 27


     /tmp/cc3zY2CU.s:3722   .debug_str:00000000000007a2 .LASF64
     /tmp/cc3zY2CU.s:3538   .debug_str:0000000000000237 .LASF30
     /tmp/cc3zY2CU.s:3618   .debug_str:000000000000044e .LASF17
     /tmp/cc3zY2CU.s:3730   .debug_str:00000000000007d1 .LASF18
     /tmp/cc3zY2CU.s:3718   .debug_str:0000000000000788 .LASF19
     /tmp/cc3zY2CU.s:3610   .debug_str:000000000000041d .LASF20
     /tmp/cc3zY2CU.s:3674   .debug_str:0000000000000631 .LASF21
     /tmp/cc3zY2CU.s:3652   .debug_str:0000000000000590 .LASF22
     /tmp/cc3zY2CU.s:3678   .debug_str:000000000000064c .LASF23
     /tmp/cc3zY2CU.s:3670   .debug_str:000000000000061c .LASF24
     /tmp/cc3zY2CU.s:3814   .debug_str:0000000000000ac5 .LASF25
     /tmp/cc3zY2CU.s:3544   .debug_str:0000000000000262 .LASF26
     /tmp/cc3zY2CU.s:3768   .debug_str:000000000000097e .LASF27
     /tmp/cc3zY2CU.s:3562   .debug_str:00000000000002c9 .LASF28
     /tmp/cc3zY2CU.s:3614   .debug_str:000000000000043a .LASF29
     /tmp/cc3zY2CU.s:3672   .debug_str:0000000000000626 .LASF31
     /tmp/cc3zY2CU.s:3582   .debug_str:000000000000036e .LASF32
     /tmp/cc3zY2CU.s:3780   .debug_str:00000000000009ca .LASF33
     /tmp/cc3zY2CU.s:3788   .debug_str:0000000000000a00 .LASF69
     /tmp/cc3zY2CU.s:3568   .debug_str:00000000000002e1 .LASF71
     /tmp/cc3zY2CU.s:3546   .debug_str:000000000000026d .LASF73
     /tmp/cc3zY2CU.s:3646   .debug_str:0000000000000555 .LASF75
     /tmp/cc3zY2CU.s:3756   .debug_str:000000000000093d .LASF34
     /tmp/cc3zY2CU.s:3666   .debug_str:00000000000005f0 .LASF36
     /tmp/cc3zY2CU.s:3684   .debug_str:0000000000000697 .LASF38
     /tmp/cc3zY2CU.s:3668   .debug_str:0000000000000606 .LASF40
     /tmp/cc3zY2CU.s:3664   .debug_str:00000000000005e9 .LASF35
     /tmp/cc3zY2CU.s:3638   .debug_str:000000000000051c .LASF37
     /tmp/cc3zY2CU.s:3636   .debug_str:0000000000000515 .LASF39
     /tmp/cc3zY2CU.s:3680   .debug_str:0000000000000655 .LASF41
     /tmp/cc3zY2CU.s:3786   .debug_str:00000000000009f8 .LASF42
     /tmp/cc3zY2CU.s:3700   .debug_str:0000000000000706 .LASF43
     /tmp/cc3zY2CU.s:3628   .debug_str:00000000000004dc .LASF44
     /tmp/cc3zY2CU.s:3592   .debug_str:00000000000003a5 .LASF45
     /tmp/cc3zY2CU.s:3600   .debug_str:00000000000003d9 .LASF46
     /tmp/cc3zY2CU.s:3626   .debug_str:00000000000004c7 .LASF47
     /tmp/cc3zY2CU.s:3812   .debug_str:0000000000000abd .LASF48
     /tmp/cc3zY2CU.s:3524   .debug_str:00000000000001a8 .LASF49
     /tmp/cc3zY2CU.s:3716   .debug_str:0000000000000781 .LASF50
     /tmp/cc3zY2CU.s:3656   .debug_str:00000000000005ad .LASF51
     /tmp/cc3zY2CU.s:3696   .debug_str:00000000000006e1 .LASF52
     /tmp/cc3zY2CU.s:3480   .debug_str:000000000000003c .LASF53
     /tmp/cc3zY2CU.s:3518   .debug_str:0000000000000173 .LASF54
     /tmp/cc3zY2CU.s:3690   .debug_str:00000000000006b9 .LASF55
     /tmp/cc3zY2CU.s:3564   .debug_str:00000000000002ce .LASF56
     /tmp/cc3zY2CU.s:3634   .debug_str:0000000000000502 .LASF57
     /tmp/cc3zY2CU.s:3478   .debug_str:0000000000000031 .LASF58
     /tmp/cc3zY2CU.s:3764   .debug_str:000000000000095b .LASF59
     /tmp/cc3zY2CU.s:3686   .debug_str:00000000000006a0 .LASF60
     /tmp/cc3zY2CU.s:3632   .debug_str:00000000000004e9 .LASF61
     /tmp/cc3zY2CU.s:3772   .debug_str:00000000000009a6 .LASF62
     /tmp/cc3zY2CU.s:3526   .debug_str:00000000000001bd .LASF63
     /tmp/cc3zY2CU.s:3766   .debug_str:0000000000000974 .LASF95
     /tmp/cc3zY2CU.s:3488   .debug_str:0000000000000094 .LASF97
     /tmp/cc3zY2CU.s:3732   .debug_str:00000000000007da .LASF65
     /tmp/cc3zY2CU.s:3782   .debug_str:00000000000009d3 .LASF67
     /tmp/cc3zY2CU.s:3516   .debug_str:0000000000000160 .LASF66
GAS LISTING /tmp/cc3zY2CU.s 			page 28


     /tmp/cc3zY2CU.s:3748   .debug_str:00000000000008e1 .LASF68
     /tmp/cc3zY2CU.s:3808   .debug_str:0000000000000a9c .LASF70
     /tmp/cc3zY2CU.s:3530   .debug_str:00000000000001e3 .LASF72
     /tmp/cc3zY2CU.s:3706   .debug_str:000000000000074a .LASF169
     /tmp/cc3zY2CU.s:3588   .debug_str:000000000000038f .LASF74
     /tmp/cc3zY2CU.s:3590   .debug_str:0000000000000395 .LASF76
     /tmp/cc3zY2CU.s:3738   .debug_str:0000000000000801 .LASF120
     /tmp/cc3zY2CU.s:3584   .debug_str:0000000000000377 .LASF77
     /tmp/cc3zY2CU.s:3802   .debug_str:0000000000000a7e .LASF78
     /tmp/cc3zY2CU.s:3806   .debug_str:0000000000000a8f .LASF79
     /tmp/cc3zY2CU.s:3548   .debug_str:0000000000000278 .LASF80
     /tmp/cc3zY2CU.s:3470   .debug_str:0000000000000007 .LASF81
     /tmp/cc3zY2CU.s:3566   .debug_str:00000000000002d4 .LASF82
     /tmp/cc3zY2CU.s:3550   .debug_str:0000000000000284 .LASF83
     /tmp/cc3zY2CU.s:3492   .debug_str:00000000000000b0 .LASF84
     /tmp/cc3zY2CU.s:3508   .debug_str:0000000000000129 .LASF132
     /tmp/cc3zY2CU.s:3474   .debug_str:000000000000001f .LASF85
     /tmp/cc3zY2CU.s:3606   .debug_str:000000000000040b .LASF86
     /tmp/cc3zY2CU.s:3776   .debug_str:00000000000009b9 .LASF87
     /tmp/cc3zY2CU.s:3580   .debug_str:0000000000000364 .LASF88
     /tmp/cc3zY2CU.s:3804   .debug_str:0000000000000a8a .LASF89
     /tmp/cc3zY2CU.s:3708   .debug_str:0000000000000756 .LASF90
     /tmp/cc3zY2CU.s:3640   .debug_str:0000000000000530 .LASF91
     /tmp/cc3zY2CU.s:3598   .debug_str:00000000000003ce .LASF92
     /tmp/cc3zY2CU.s:3514   .debug_str:0000000000000152 .LASF93
     /tmp/cc3zY2CU.s:3746   .debug_str:00000000000008d7 .LASF94
     /tmp/cc3zY2CU.s:3702   .debug_str:000000000000071b .LASF122
     /tmp/cc3zY2CU.s:3512   .debug_str:0000000000000149 .LASF102
     /tmp/cc3zY2CU.s:3484   .debug_str:0000000000000068 .LASF104
     /tmp/cc3zY2CU.s:3558   .debug_str:00000000000002ab .LASF96
     /tmp/cc3zY2CU.s:3770   .debug_str:0000000000000988 .LASF98
     /tmp/cc3zY2CU.s:3560   .debug_str:00000000000002ba .LASF99
     /tmp/cc3zY2CU.s:3698   .debug_str:00000000000006e8 .LASF100
     /tmp/cc3zY2CU.s:3594   .debug_str:00000000000003ba .LASF101
     /tmp/cc3zY2CU.s:3800   .debug_str:0000000000000a6e .LASF103
     /tmp/cc3zY2CU.s:3496   .debug_str:00000000000000cb .LASF105
     /tmp/cc3zY2CU.s:3604   .debug_str:0000000000000406 .LASF106
     /tmp/cc3zY2CU.s:3644   .debug_str:0000000000000545 .LASF107
     /tmp/cc3zY2CU.s:3532   .debug_str:0000000000000203 .LASF170
     /tmp/cc3zY2CU.s:3774   .debug_str:00000000000009b0 .LASF108
     /tmp/cc3zY2CU.s:3790   .debug_str:0000000000000a08 .LASF109
     /tmp/cc3zY2CU.s:3504   .debug_str:0000000000000114 .LASF110
     /tmp/cc3zY2CU.s:3468   .debug_str:0000000000000000 .LASF111
     /tmp/cc3zY2CU.s:3682   .debug_str:0000000000000669 .LASF112
     /tmp/cc3zY2CU.s:3572   .debug_str:0000000000000308 .LASF171
     /tmp/cc3zY2CU.s:3752   .debug_str:0000000000000910 .LASF113
     /tmp/cc3zY2CU.s:3620   .debug_str:0000000000000458 .LASF114
     /tmp/cc3zY2CU.s:3510   .debug_str:000000000000013c .LASF115
     /tmp/cc3zY2CU.s:3624   .debug_str:00000000000004a2 .LASF116
     /tmp/cc3zY2CU.s:3642   .debug_str:0000000000000538 .LASF117
     /tmp/cc3zY2CU.s:3602   .debug_str:00000000000003e1 .LASF118
     /tmp/cc3zY2CU.s:3486   .debug_str:000000000000007b .LASF119
     /tmp/cc3zY2CU.s:3784   .debug_str:00000000000009ea .LASF121
     /tmp/cc3zY2CU.s:3714   .debug_str:000000000000077c .LASF123
     /tmp/cc3zY2CU.s:3736   .debug_str:00000000000007f1 .LASF124
     /tmp/cc3zY2CU.s:3622   .debug_str:0000000000000479 .LASF125
     /tmp/cc3zY2CU.s:3616   .debug_str:000000000000043f .LASF126
GAS LISTING /tmp/cc3zY2CU.s 			page 29


     /tmp/cc3zY2CU.s:3798   .debug_str:0000000000000a46 .LASF127
     /tmp/cc3zY2CU.s:3574   .debug_str:0000000000000336 .LASF128
     /tmp/cc3zY2CU.s:3630   .debug_str:00000000000004e4 .LASF129
     /tmp/cc3zY2CU.s:3660   .debug_str:00000000000005d1 .LASF130
     /tmp/cc3zY2CU.s:3794   .debug_str:0000000000000a28 .LASF131
     /tmp/cc3zY2CU.s:3482   .debug_str:0000000000000050 .LASF133
     /tmp/cc3zY2CU.s:3726   .debug_str:00000000000007b6 .LASF172
     /tmp/cc3zY2CU.s:3754   .debug_str:0000000000000931 .LASF134
     /tmp/cc3zY2CU.s:3536   .debug_str:000000000000021f .LASF135
     /tmp/cc3zY2CU.s:3744   .debug_str:00000000000008d2 .LASF136
     /tmp/cc3zY2CU.s:3648   .debug_str:000000000000056e .LASF137
     /tmp/cc3zY2CU.s:3728   .debug_str:00000000000007ca .LASF138
     /tmp/cc3zY2CU.s:3576   .debug_str:0000000000000340 .LASF139
     /tmp/cc3zY2CU.s:3734   .debug_str:00000000000007e5 .LASF140
     /tmp/cc3zY2CU.s:3724   .debug_str:00000000000007a9 .LASF141
     /tmp/cc3zY2CU.s:3654   .debug_str:000000000000059d .LASF142
     /tmp/cc3zY2CU.s:3792   .debug_str:0000000000000a0d .LASF143
     /tmp/cc3zY2CU.s:3692   .debug_str:00000000000006cc .LASF144
     /tmp/cc3zY2CU.s:3520   .debug_str:0000000000000179 .LASF145
     /tmp/cc3zY2CU.s:3662   .debug_str:00000000000005dd .LASF146
     /tmp/cc3zY2CU.s:3554   .debug_str:0000000000000298 .LASF147
     /tmp/cc3zY2CU.s:3658   .debug_str:00000000000005c1 .LASF148
     /tmp/cc3zY2CU.s:3472   .debug_str:0000000000000017 .LASF149
     /tmp/cc3zY2CU.s:3810   .debug_str:0000000000000aab .LASF150
     /tmp/cc3zY2CU.s:3552   .debug_str:000000000000028f .LASF151
     /tmp/cc3zY2CU.s:3612   .debug_str:0000000000000429 .LASF152
     /tmp/cc3zY2CU.s:46     .text:0000000000000020 .LFB34
     /tmp/cc3zY2CU.s:640    .text:0000000000000344 .LFE34
     /tmp/cc3zY2CU.s:3712   .debug_str:0000000000000775 .LASF153
     /tmp/cc3zY2CU.s:3742   .debug_str:00000000000008cd .LASF154
     /tmp/cc3zY2CU.s:3778   .debug_str:00000000000009c2 .LASF155
     /tmp/cc3zY2CU.s:3458   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc3zY2CU.s:3758   .debug_str:0000000000000946 .LASF156
     /tmp/cc3zY2CU.s:225    .text:0000000000000100 .LBB50
     /tmp/cc3zY2CU.s:251    .text:0000000000000124 .LBE50
     /tmp/cc3zY2CU.s:3277   .debug_loc:0000000000000000 .LLST0
     /tmp/cc3zY2CU.s:231    .text:0000000000000104 .LBB51
     /tmp/cc3zY2CU.s:236    .text:0000000000000104 .LBE51
     /tmp/cc3zY2CU.s:242    .text:0000000000000110 .LVL3
     /tmp/cc3zY2CU.s:312    .text:000000000000014c .LBB53
     /tmp/cc3zY2CU.s:329    .text:0000000000000170 .LBE53
     /tmp/cc3zY2CU.s:3676   .debug_str:0000000000000641 .LASF157
     /tmp/cc3zY2CU.s:3292   .debug_loc:000000000000003a .LLST1
     /tmp/cc3zY2CU.s:319    .text:0000000000000158 .LVL9
     /tmp/cc3zY2CU.s:369    .text:00000000000001bc .LBB54
     /tmp/cc3zY2CU.s:382    .text:00000000000001d0 .LBE54
     /tmp/cc3zY2CU.s:3816   .debug_str:0000000000000ace .LASF158
     /tmp/cc3zY2CU.s:3300   .debug_loc:000000000000005f .LLST2
     /tmp/cc3zY2CU.s:378    .text:00000000000001cc .LVL13
     /tmp/cc3zY2CU.s:385    .text:00000000000001d0 .LBB55
     /tmp/cc3zY2CU.s:437    .text:0000000000000228 .LBE55
     /tmp/cc3zY2CU.s:3307   .debug_loc:0000000000000082 .LLST3
     /tmp/cc3zY2CU.s:3315   .debug_loc:00000000000000a7 .LLST4
     /tmp/cc3zY2CU.s:3323   .debug_loc:00000000000000cc .LLST5
     /tmp/cc3zY2CU.s:3330   .debug_loc:00000000000000ef .LLST6
     /tmp/cc3zY2CU.s:398    .text:00000000000001e4 .LVL16
     /tmp/cc3zY2CU.s:440    .text:0000000000000228 .LBB56
GAS LISTING /tmp/cc3zY2CU.s 			page 30


     /tmp/cc3zY2CU.s:484    .text:0000000000000264 .LBE56
     /tmp/cc3zY2CU.s:3343   .debug_loc:0000000000000129 .LLST7
     /tmp/cc3zY2CU.s:3490   .debug_str:00000000000000ab .LASF159
     /tmp/cc3zY2CU.s:3350   .debug_loc:000000000000014c .LLST8
     /tmp/cc3zY2CU.s:450    .text:0000000000000230 .LBB57
     /tmp/cc3zY2CU.s:470    .text:0000000000000248 .LBE57
     /tmp/cc3zY2CU.s:3365   .debug_loc:0000000000000177 .LLST9
     /tmp/cc3zY2CU.s:458    .text:000000000000023c .LBB59
     /tmp/cc3zY2CU.s:468    .text:0000000000000248 .LBE59
     /tmp/cc3zY2CU.s:3372   .debug_loc:000000000000019a .LLST10
     /tmp/cc3zY2CU.s:3379   .debug_loc:00000000000001bd .LLST11
     /tmp/cc3zY2CU.s:457    .text:000000000000023c .LVL22
     /tmp/cc3zY2CU.s:487    .text:0000000000000264 .LBB61
     /tmp/cc3zY2CU.s:503    .text:0000000000000288 .LBE61
     /tmp/cc3zY2CU.s:3386   .debug_loc:00000000000001e0 .LLST12
     /tmp/cc3zY2CU.s:493    .text:0000000000000270 .LVL25
     /tmp/cc3zY2CU.s:506    .text:0000000000000288 .LBB62
     /tmp/cc3zY2CU.s:523    .text:00000000000002ac .LBE62
     /tmp/cc3zY2CU.s:3394   .debug_loc:0000000000000205 .LLST13
     /tmp/cc3zY2CU.s:513    .text:0000000000000294 .LVL27
     /tmp/cc3zY2CU.s:526    .text:00000000000002ac .LBB63
     /tmp/cc3zY2CU.s:546    .text:00000000000002d0 .LBE63
     /tmp/cc3zY2CU.s:3402   .debug_loc:000000000000022a .LLST14
     /tmp/cc3zY2CU.s:535    .text:00000000000002bc .LVL29
     /tmp/cc3zY2CU.s:542    .text:00000000000002cc .LVL30
     /tmp/cc3zY2CU.s:258    .text:0000000000000128 .LBB65
     /tmp/cc3zY2CU.s:269    .text:000000000000012c .LBE65
     /tmp/cc3zY2CU.s:3409   .debug_loc:000000000000024d .LLST15
     /tmp/cc3zY2CU.s:274    .text:0000000000000130 .LBB67
     /tmp/cc3zY2CU.s:285    .text:0000000000000134 .LBE67
     /tmp/cc3zY2CU.s:3416   .debug_loc:0000000000000270 .LLST16
     /tmp/cc3zY2CU.s:339    .text:0000000000000184 .LVL10
     /tmp/cc3zY2CU.s:356    .text:00000000000001a4 .LVL11
     /tmp/cc3zY2CU.s:551    .text:00000000000002d8 .LVL32
     /tmp/cc3zY2CU.s:62     .text:0000000000000038 .LBB40
     /tmp/cc3zY2CU.s:78     .text:0000000000000044 .LBE40
     /tmp/cc3zY2CU.s:82     .text:0000000000000048 .LBB42
     /tmp/cc3zY2CU.s:97     .text:0000000000000054 .LBE42
     /tmp/cc3zY2CU.s:101    .text:0000000000000058 .LBB44
     /tmp/cc3zY2CU.s:116    .text:0000000000000064 .LBE44
     /tmp/cc3zY2CU.s:574    .text:0000000000000304 .LBB71
     /tmp/cc3zY2CU.s:589    .text:0000000000000310 .LBE71
     /tmp/cc3zY2CU.s:3423   .debug_loc:0000000000000293 .LLST17
     /tmp/cc3zY2CU.s:602    .text:0000000000000328 .LBB73
     /tmp/cc3zY2CU.s:613    .text:000000000000032c .LBE73
     /tmp/cc3zY2CU.s:3431   .debug_loc:00000000000002b7 .LLST18
     /tmp/cc3zY2CU.s:618    .text:0000000000000330 .LBB75
     /tmp/cc3zY2CU.s:632    .text:0000000000000338 .LBE75
     /tmp/cc3zY2CU.s:3438   .debug_loc:00000000000002da .LLST19
     /tmp/cc3zY2CU.s:150    .text:00000000000000b0 .LVL0
     /tmp/cc3zY2CU.s:597    .text:0000000000000324 .LVL35
     /tmp/cc3zY2CU.s:636    .text:0000000000000340 .LVL40
     /tmp/cc3zY2CU.s:10     .text:0000000000000000 .LFB33
     /tmp/cc3zY2CU.s:40     .text:0000000000000020 .LFE33
     /tmp/cc3zY2CU.s:3494   .debug_str:00000000000000c6 .LASF173
     /tmp/cc3zY2CU.s:3596   .debug_str:00000000000003c4 .LASF160
     /tmp/cc3zY2CU.s:3796   .debug_str:0000000000000a3a .LASF174
GAS LISTING /tmp/cc3zY2CU.s 			page 31


     /tmp/cc3zY2CU.s:3608   .debug_str:0000000000000411 .LASF161
     /tmp/cc3zY2CU.s:3762   .debug_str:0000000000000956 .LASF162
     /tmp/cc3zY2CU.s:3542   .debug_str:0000000000000252 .LASF163
     /tmp/cc3zY2CU.s:3760   .debug_str:000000000000094b .LASF165
     /tmp/cc3zY2CU.s:3750   .debug_str:0000000000000900 .LASF164
     /tmp/cc3zY2CU.s:229    .text:0000000000000104 .LVL1
     /tmp/cc3zY2CU.s:240    .text:0000000000000108 .LVL2
     /tmp/cc3zY2CU.s:314    .text:000000000000014c .LVL8
     /tmp/cc3zY2CU.s:373    .text:00000000000001c0 .LVL12
     /tmp/cc3zY2CU.s:387    .text:00000000000001d0 .LVL14
     /tmp/cc3zY2CU.s:392    .text:00000000000001d4 .LVL15
     /tmp/cc3zY2CU.s:435    .text:0000000000000228 .LVL19
     /tmp/cc3zY2CU.s:418    .text:000000000000020c .LVL17
     /tmp/cc3zY2CU.s:426    .text:0000000000000218 .LVL18
     /tmp/cc3zY2CU.s:444    .text:000000000000022c .LVL20
     /tmp/cc3zY2CU.s:482    .text:0000000000000264 .LVL24
     /tmp/cc3zY2CU.s:448    .text:0000000000000230 .LVL21
     /tmp/cc3zY2CU.s:466    .text:0000000000000248 .LVL23
     /tmp/cc3zY2CU.s:508    .text:0000000000000288 .LVL26
     /tmp/cc3zY2CU.s:530    .text:00000000000002b0 .LVL28
     /tmp/cc3zY2CU.s:544    .text:00000000000002d0 .LVL31
     /tmp/cc3zY2CU.s:257    .text:0000000000000128 .LVL4
     /tmp/cc3zY2CU.s:266    .text:000000000000012c .LVL5
     /tmp/cc3zY2CU.s:273    .text:0000000000000130 .LVL6
     /tmp/cc3zY2CU.s:282    .text:0000000000000134 .LVL7
     /tmp/cc3zY2CU.s:573    .text:0000000000000304 .LVL33
     /tmp/cc3zY2CU.s:586    .text:0000000000000310 .LVL34
     /tmp/cc3zY2CU.s:601    .text:0000000000000328 .LVL36
     /tmp/cc3zY2CU.s:610    .text:000000000000032c .LVL37
     /tmp/cc3zY2CU.s:617    .text:0000000000000330 .LVL38
     /tmp/cc3zY2CU.s:629    .text:0000000000000338 .LVL39
     /tmp/cc3zY2CU.s:649    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc3zY2CU.s:153    .text:00000000000000b4 .LBB47
     /tmp/cc3zY2CU.s:288    .text:0000000000000134 .LBE47
     /tmp/cc3zY2CU.s:307    .text:000000000000014c .LBB70
     /tmp/cc3zY2CU.s:557    .text:00000000000002dc .LBE70

UNDEFINED SYMBOLS
_Z10printErrorv
_ZN3PCB7runningE
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
_ZN3PCB16timeSliceCounterE
_ZN3PCB8dispatchEv
_ZN9Scheduler3putEP3PCB
_ZN3PCB14createProccessEPFvvEPv
_ZN3SCBnwEm
_ZN3SCB4waitEv
_ZN3SCB6signalEv
_ZN3SCB13signalClosingEv
_ZN3SCBdlEPv
console_handler

GAS LISTING /tmp/ccBGIdeY.s 			page 1


   1              		.file	"syscall_c.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z13callInterruptm
   9              	_Z13callInterruptm:
  10              	.LFB43:
  11              		.file 1 "src/syscall_c.cpp"
   1:src/syscall_c.cpp **** #include "../h/syscall_c.h"
   2:src/syscall_c.cpp **** #include "../h/MemoryAllocator.h"
   3:src/syscall_c.cpp **** #include "../h/kernel.h"
   4:src/syscall_c.cpp **** #include "../h/PCB.h"
   5:src/syscall_c.cpp **** 
   6:src/syscall_c.cpp **** extern "C" void interrupt(); // u interrupt treba dodati i cuvanje konteksta
   7:src/syscall_c.cpp **** // prelazak u sistemski rezim i prelazak na sistemsku funkciju zadatu u registru stvec(asemblerska 
   8:src/syscall_c.cpp **** void* callInterrupt(size_t volatile code) {
  12              		.loc 1 8 43
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FE 		addi	sp,sp,-32
  16              		.cfi_def_cfa_offset 32
  17 0004 233C8100 		sd	s0,24(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040102 		addi	s0,sp,32
  20              		.cfi_def_cfa 8, 0
  21 000c 2334A4FE 		sd	a0,-24(s0)
   9:src/syscall_c.cpp ****     void* res;
  22              		.loc 1 9 5
  10:src/syscall_c.cpp ****     asm volatile("ecall");
  23              		.loc 1 10 5
  24              		.loc 1 10 26 is_stmt 0
  25              	#APP
  26              	# 10 "src/syscall_c.cpp" 1
  11              	    asm volatile("mv %0, a0" : "=r" (res));
  27              		ecall
  28              	# 0 "" 2
  29              		.loc 1 11 5 is_stmt 1
  30              		.loc 1 11 43 is_stmt 0
  31              	# 11 "src/syscall_c.cpp" 1
  12              	    return res;
  32              		mv a0, a0
  33              	# 0 "" 2
  34              	.LVL1:
  35              		.loc 1 12 5 is_stmt 1
  13:src/syscall_c.cpp **** }
  36              		.loc 1 13 1 is_stmt 0
  37              	#NO_APP
  38 0018 03348101 		ld	s0,24(sp)
  39              		.cfi_restore 8
  40              		.cfi_def_cfa 2, 32
  41              	.LVL2:
  42 001c 13010102 		addi	sp,sp,32
  43              		.cfi_def_cfa_offset 0
  44              	.LVL3:
  45 0020 67800000 		jr	ra
GAS LISTING /tmp/ccBGIdeY.s 			page 2


  46              		.cfi_endproc
  47              	.LFE43:
  49              		.align	2
  50              		.globl	_Z9mem_allocm
  52              	_Z9mem_allocm:
  53              	.LFB44:
  14:src/syscall_c.cpp **** 
  15:src/syscall_c.cpp **** // a0 code a1 size
  16:src/syscall_c.cpp **** void* mem_alloc(size_t size) {
  54              		.loc 1 16 30 is_stmt 1
  55              		.cfi_startproc
  56              	.LVL4:
  57 0024 130101FF 		addi	sp,sp,-16
  58              		.cfi_def_cfa_offset 16
  59 0028 23341100 		sd	ra,8(sp)
  60 002c 23308100 		sd	s0,0(sp)
  61              		.cfi_offset 1, -8
  62              		.cfi_offset 8, -16
  63 0030 13040101 		addi	s0,sp,16
  64              		.cfi_def_cfa 8, 0
  17:src/syscall_c.cpp ****     size_t code = Kernel::sysCallCodes::mem_alloc; // kod sistemskog poziva
  65              		.loc 1 17 5
  66              	.LVL5:
  18:src/syscall_c.cpp ****     // size je dat u bajtovima, a mi treba da ga prebacimo u blokove i onda opet upisemo u a1
  19:src/syscall_c.cpp ****     size = MemoryAllocator::sizeInBlocks(size); // funkcija menja a0
  67              		.loc 1 19 5
  68              	.LBB4:
  69              	.LBB5:
  70              		.file 2 "src/../h/MemoryAllocator.h"
   1:src/../h/MemoryAllocator.h **** #ifndef PROJECT_BASE_MEMORYALLOCATOR_H
   2:src/../h/MemoryAllocator.h **** #define PROJECT_BASE_MEMORYALLOCATOR_H
   3:src/../h/MemoryAllocator.h **** 
   4:src/../h/MemoryAllocator.h **** #include "hw.h"
   5:src/../h/MemoryAllocator.h **** 
   6:src/../h/MemoryAllocator.h **** class MemoryAllocator {
   7:src/../h/MemoryAllocator.h **** public:
   8:src/../h/MemoryAllocator.h ****     /*
   9:src/../h/MemoryAllocator.h ****     Alocira (najmanje) size bajtova memorije, zaokruženo i poravnato na blokove veličine MEM_BLOC
  10:src/../h/MemoryAllocator.h ****     Svaki alocirani segment ima zaglavlje sa velicinom tog segmenta(vraca se adresa nakon tog zagla
  11:src/../h/MemoryAllocator.h **** 
  12:src/../h/MemoryAllocator.h ****     Vraća:
  13:src/../h/MemoryAllocator.h ****     pokazivač na alocirani deo memorije u slučaju uspeha, nullptr u slučaju neuspeha
  14:src/../h/MemoryAllocator.h **** 
  15:src/../h/MemoryAllocator.h ****     Radi se po algoritmu first fit(alociramo prvi segment koji je >= size). Ako je preostao prostor
  16:src/../h/MemoryAllocator.h ****     jednog bloka, taj preostali prostor se pridruzuje ovom koji smo sad alocirali(jer nema poente d
  17:src/../h/MemoryAllocator.h ****     */
  18:src/../h/MemoryAllocator.h ****     static void* mem_alloc(size_t size);
  19:src/../h/MemoryAllocator.h ****     /*
  20:src/../h/MemoryAllocator.h ****     Oslobađa prostor prethodno zauzet pomoću mem_alloc.
  21:src/../h/MemoryAllocator.h ****     Vraća 0 u slučaju uspeha, BAD_POINTER  flag ako je dostavljen los pokazivac.
  22:src/../h/MemoryAllocator.h ****     Ako je moguce, spaja dva susedna slobodna segmenta u jedan veci
  23:src/../h/MemoryAllocator.h ****     */
  24:src/../h/MemoryAllocator.h ****     static int mem_free(void* memSegment);
  25:src/../h/MemoryAllocator.h **** 
  26:src/../h/MemoryAllocator.h ****     enum memFreeFlags {
  27:src/../h/MemoryAllocator.h ****         BAD_POINTER = -1 // nije koriscen pokazviac iz mem_alloc
  28:src/../h/MemoryAllocator.h ****     };
GAS LISTING /tmp/ccBGIdeY.s 			page 3


  29:src/../h/MemoryAllocator.h **** 
  30:src/../h/MemoryAllocator.h ****     // Vraca minimalan potreban broj blokova za alokaciju memorije velicine size bajtova
  31:src/../h/MemoryAllocator.h ****     static inline size_t sizeInBlocks(size_t size) {
  32:src/../h/MemoryAllocator.h ****         return (size / MEM_BLOCK_SIZE) + (size % MEM_BLOCK_SIZE > 0);
  71              		.loc 2 32 9
  72              		.loc 2 32 22 is_stmt 0
  73 0034 93576500 		srli	a5,a0,6
  74              		.loc 2 32 48
  75 0038 1375F503 		andi	a0,a0,63
  76              	.LVL6:
  77              		.loc 2 32 65
  78 003c 3335A000 		snez	a0,a0
  79              		.loc 2 32 68
  80 0040 3385A700 		add	a0,a5,a0
  81              	.LVL7:
  82              	.LBE5:
  83              	.LBE4:
  20:src/syscall_c.cpp ****     asm volatile("mv a1, %0" : : "r" (size)); // a1 = size
  84              		.loc 1 20 5 is_stmt 1
  85              		.loc 1 20 45 is_stmt 0
  86              	#APP
  87              	# 20 "src/syscall_c.cpp" 1
  21              	
  22:src/syscall_c.cpp ****     return (void*)callInterrupt(code);
  88              		mv a1, a0
  89              	# 0 "" 2
  90              		.loc 1 22 5 is_stmt 1
  91              		.loc 1 22 32 is_stmt 0
  92              	#NO_APP
  93 0048 13051000 		li	a0,1
  94              	.LVL8:
  95 004c 97000000 		call	_Z13callInterruptm
  95      E7800000 
  96              	.LVL9:
  23:src/syscall_c.cpp **** }
  97              		.loc 1 23 1
  98 0054 83308100 		ld	ra,8(sp)
  99              		.cfi_restore 1
 100 0058 03340100 		ld	s0,0(sp)
 101              		.cfi_restore 8
 102              		.cfi_def_cfa 2, 16
 103 005c 13010101 		addi	sp,sp,16
 104              		.cfi_def_cfa_offset 0
 105 0060 67800000 		jr	ra
 106              		.cfi_endproc
 107              	.LFE44:
 109              		.align	2
 110              		.globl	_Z8mem_freePv
 112              	_Z8mem_freePv:
 113              	.LFB45:
  24:src/syscall_c.cpp **** 
  25:src/syscall_c.cpp **** // a0 code a1 memSegment
  26:src/syscall_c.cpp **** int mem_free (void* memSegment) {
 114              		.loc 1 26 33 is_stmt 1
 115              		.cfi_startproc
 116              	.LVL10:
 117 0064 130101FF 		addi	sp,sp,-16
GAS LISTING /tmp/ccBGIdeY.s 			page 4


 118              		.cfi_def_cfa_offset 16
 119 0068 23341100 		sd	ra,8(sp)
 120 006c 23308100 		sd	s0,0(sp)
 121              		.cfi_offset 1, -8
 122              		.cfi_offset 8, -16
 123 0070 13040101 		addi	s0,sp,16
 124              		.cfi_def_cfa 8, 0
  27:src/syscall_c.cpp ****     size_t code = Kernel::sysCallCodes::mem_free; // kod sistemskog poziva
 125              		.loc 1 27 5
 126              	.LVL11:
  28:src/syscall_c.cpp ****     asm volatile("mv a1, a0"); // a1 = memSegment
 127              		.loc 1 28 5
 128              		.loc 1 28 30 is_stmt 0
 129              	#APP
 130              	# 28 "src/syscall_c.cpp" 1
  29              	
  30:src/syscall_c.cpp ****     return (size_t)(callInterrupt(code));
 131              		mv a1, a0
 132              	# 0 "" 2
 133              		.loc 1 30 5 is_stmt 1
 134              		.loc 1 30 34 is_stmt 0
 135              	#NO_APP
 136 0078 13052000 		li	a0,2
 137              	.LVL12:
 138 007c 97000000 		call	_Z13callInterruptm
 138      E7800000 
 139              	.LVL13:
  31:src/syscall_c.cpp **** }
 140              		.loc 1 31 1
 141 0084 1B050500 		sext.w	a0,a0
 142 0088 83308100 		ld	ra,8(sp)
 143              		.cfi_restore 1
 144 008c 03340100 		ld	s0,0(sp)
 145              		.cfi_restore 8
 146              		.cfi_def_cfa 2, 16
 147 0090 13010101 		addi	sp,sp,16
 148              		.cfi_def_cfa_offset 0
 149 0094 67800000 		jr	ra
 150              		.cfi_endproc
 151              	.LFE45:
 153              		.align	2
 154              		.globl	_Z18thread_create_onlyPP3PCBPFvPvES2_
 156              	_Z18thread_create_onlyPP3PCBPFvPvES2_:
 157              	.LFB46:
  32:src/syscall_c.cpp **** 
  33:src/syscall_c.cpp **** // a0 - code a1 - handle a2 - startRoutine a3 - arg a4 - stackSpace, a5 - deleteArgFlag
  34:src/syscall_c.cpp **** int thread_create_only (thread_t* handle, void(*startRoutine)(void*), void* arg) {
 158              		.loc 1 34 82 is_stmt 1
 159              		.cfi_startproc
 160              	.LVL14:
 161 0098 130101FF 		addi	sp,sp,-16
 162              		.cfi_def_cfa_offset 16
 163 009c 23341100 		sd	ra,8(sp)
 164 00a0 23308100 		sd	s0,0(sp)
 165              		.cfi_offset 1, -8
 166              		.cfi_offset 8, -16
 167 00a4 13040101 		addi	s0,sp,16
GAS LISTING /tmp/ccBGIdeY.s 			page 5


 168              		.cfi_def_cfa 8, 0
  35:src/syscall_c.cpp ****     size_t code = Kernel::sysCallCodes::thread_create;
 169              		.loc 1 35 5
 170              	.LVL15:
  36:src/syscall_c.cpp ****     asm volatile("mv a3, a2"); // a3 = arg
 171              		.loc 1 36 5
 172              		.loc 1 36 30 is_stmt 0
 173              	#APP
 174              	# 36 "src/syscall_c.cpp" 1
  37              	    asm volatile("mv a2, a1"); // a2 = startRoutine
 175              		mv a3, a2
 176              	# 0 "" 2
 177              		.loc 1 37 5 is_stmt 1
 178              		.loc 1 37 30 is_stmt 0
 179              	# 37 "src/syscall_c.cpp" 1
  38              	    asm volatile("mv a4, a0"); // a4 = handle privremeno cuvamo da bismo posle vratili u a1
 180              		mv a2, a1
 181              	# 0 "" 2
 182              		.loc 1 38 5 is_stmt 1
 183              		.loc 1 38 30 is_stmt 0
 184              	# 38 "src/syscall_c.cpp" 1
  39              	
  40:src/syscall_c.cpp **** 
  41:src/syscall_c.cpp ****     size_t* stack = (size_t*)mem_alloc(sizeof(size_t)*DEFAULT_STACK_SIZE); // pravimo stack procesa
 185              		mv a4, a0
 186              	# 0 "" 2
 187              		.loc 1 41 5 is_stmt 1
 188              		.loc 1 41 39 is_stmt 0
 189              	#NO_APP
 190 00b4 37850000 		li	a0,32768
 191              	.LVL16:
 192 00b8 97000000 		call	_Z9mem_allocm
 192      E7800000 
 193              	.LVL17:
  42:src/syscall_c.cpp ****     if(stack == nullptr) return -1;
 194              		.loc 1 42 5 is_stmt 1
 195 00c0 630A0502 		beqz	a0,.L9
  43:src/syscall_c.cpp **** 
  44:src/syscall_c.cpp ****     asm volatile("mv a1, a4"); // a1 = a5(handle)
 196              		.loc 1 44 5
 197              		.loc 1 44 30 is_stmt 0
 198              	#APP
 199              	# 44 "src/syscall_c.cpp" 1
  45              	    asm volatile("mv a4, %0" : : "r" (stack));
 200              		mv a1, a4
 201              	# 0 "" 2
 202              		.loc 1 45 5 is_stmt 1
 203              		.loc 1 45 46 is_stmt 0
 204              	# 45 "src/syscall_c.cpp" 1
  46              	
  47:src/syscall_c.cpp ****     handle = (thread_t*)(callInterrupt(code)); // vraca se pokazivac na PCB, ili nullptr ako je neu
 205              		mv a4, a0
 206              	# 0 "" 2
 207              		.loc 1 47 5 is_stmt 1
 208              		.loc 1 47 39 is_stmt 0
 209              	#NO_APP
 210 00cc 13051001 		li	a0,17
GAS LISTING /tmp/ccBGIdeY.s 			page 6


 211              	.LVL18:
 212 00d0 97000000 		call	_Z13callInterruptm
 212      E7800000 
 213              	.LVL19:
  48:src/syscall_c.cpp ****     if(*handle == nullptr) {
 214              		.loc 1 48 5 is_stmt 1
 215              		.loc 1 48 8 is_stmt 0
 216 00d8 83370500 		ld	a5,0(a0)
 217              		.loc 1 48 5
 218 00dc 63800702 		beqz	a5,.L10
  49:src/syscall_c.cpp ****         return -1;
  50:src/syscall_c.cpp ****     }
  51:src/syscall_c.cpp ****     return 0;
 219              		.loc 1 51 12
 220 00e0 13050000 		li	a0,0
 221              	.LVL20:
 222              	.L8:
  52:src/syscall_c.cpp **** }
 223              		.loc 1 52 1
 224 00e4 83308100 		ld	ra,8(sp)
 225              		.cfi_remember_state
 226              		.cfi_restore 1
 227 00e8 03340100 		ld	s0,0(sp)
 228              		.cfi_restore 8
 229              		.cfi_def_cfa 2, 16
 230 00ec 13010101 		addi	sp,sp,16
 231              		.cfi_def_cfa_offset 0
 232 00f0 67800000 		jr	ra
 233              	.LVL21:
 234              	.L9:
 235              		.cfi_restore_state
  42:src/syscall_c.cpp **** 
 236              		.loc 1 42 34
 237 00f4 1305F0FF 		li	a0,-1
 238              	.LVL22:
 239 00f8 6FF0DFFE 		j	.L8
 240              	.LVL23:
 241              	.L10:
  49:src/syscall_c.cpp ****         return -1;
 242              		.loc 1 49 17
 243 00fc 1305F0FF 		li	a0,-1
 244              	.LVL24:
 245 0100 6FF05FFE 		j	.L8
 246              		.cfi_endproc
 247              	.LFE46:
 249              		.align	2
 250              		.globl	_Z15thread_dispatchv
 252              	_Z15thread_dispatchv:
 253              	.LFB48:
  53:src/syscall_c.cpp **** 
  54:src/syscall_c.cpp **** int thread_create(thread_t* handle, void(*startRoutine)(void*), void* arg) {
  55:src/syscall_c.cpp ****     int res = thread_create_only(handle, startRoutine, arg);
  56:src/syscall_c.cpp ****     thread_start(handle);
  57:src/syscall_c.cpp ****     return res;
  58:src/syscall_c.cpp **** }
  59:src/syscall_c.cpp **** 
  60:src/syscall_c.cpp **** void thread_dispatch () {
GAS LISTING /tmp/ccBGIdeY.s 			page 7


 254              		.loc 1 60 25 is_stmt 1
 255              		.cfi_startproc
 256 0104 130101FF 		addi	sp,sp,-16
 257              		.cfi_def_cfa_offset 16
 258 0108 23341100 		sd	ra,8(sp)
 259 010c 23308100 		sd	s0,0(sp)
 260              		.cfi_offset 1, -8
 261              		.cfi_offset 8, -16
 262 0110 13040101 		addi	s0,sp,16
 263              		.cfi_def_cfa 8, 0
  61:src/syscall_c.cpp ****     size_t code = Kernel::sysCallCodes::thread_dispatch;
 264              		.loc 1 61 5
 265              	.LVL25:
  62:src/syscall_c.cpp ****     callInterrupt(code);
 266              		.loc 1 62 5
 267              		.loc 1 62 18 is_stmt 0
 268 0114 13053001 		li	a0,19
 269 0118 97000000 		call	_Z13callInterruptm
 269      E7800000 
 270              	.LVL26:
  63:src/syscall_c.cpp **** }
 271              		.loc 1 63 1
 272 0120 83308100 		ld	ra,8(sp)
 273              		.cfi_restore 1
 274 0124 03340100 		ld	s0,0(sp)
 275              		.cfi_restore 8
 276              		.cfi_def_cfa 2, 16
 277 0128 13010101 		addi	sp,sp,16
 278              		.cfi_def_cfa_offset 0
 279 012c 67800000 		jr	ra
 280              		.cfi_endproc
 281              	.LFE48:
 283              		.align	2
 284              		.globl	_Z11thread_exitv
 286              	_Z11thread_exitv:
 287              	.LFB49:
  64:src/syscall_c.cpp **** 
  65:src/syscall_c.cpp **** int thread_exit () {
 288              		.loc 1 65 20 is_stmt 1
 289              		.cfi_startproc
 290 0130 130101FF 		addi	sp,sp,-16
 291              		.cfi_def_cfa_offset 16
 292 0134 23341100 		sd	ra,8(sp)
 293 0138 23308100 		sd	s0,0(sp)
 294              		.cfi_offset 1, -8
 295              		.cfi_offset 8, -16
 296 013c 13040101 		addi	s0,sp,16
 297              		.cfi_def_cfa 8, 0
  66:src/syscall_c.cpp ****     size_t code = Kernel::sysCallCodes::thread_exit;
 298              		.loc 1 66 5
 299              	.LVL27:
  67:src/syscall_c.cpp ****     return (size_t)(callInterrupt(code));
 300              		.loc 1 67 5
 301              		.loc 1 67 34 is_stmt 0
 302 0140 13052001 		li	a0,18
 303 0144 97000000 		call	_Z13callInterruptm
 303      E7800000 
GAS LISTING /tmp/ccBGIdeY.s 			page 8


 304              	.LVL28:
  68:src/syscall_c.cpp **** }
 305              		.loc 1 68 1
 306 014c 1B050500 		sext.w	a0,a0
 307 0150 83308100 		ld	ra,8(sp)
 308              		.cfi_restore 1
 309 0154 03340100 		ld	s0,0(sp)
 310              		.cfi_restore 8
 311              		.cfi_def_cfa 2, 16
 312 0158 13010101 		addi	sp,sp,16
 313              		.cfi_def_cfa_offset 0
 314 015c 67800000 		jr	ra
 315              		.cfi_endproc
 316              	.LFE49:
 318              		.align	2
 319              		.globl	_Z12thread_startPP3PCB
 321              	_Z12thread_startPP3PCB:
 322              	.LFB50:
  69:src/syscall_c.cpp **** 
  70:src/syscall_c.cpp **** void thread_start(thread_t* handle) {
 323              		.loc 1 70 37 is_stmt 1
 324              		.cfi_startproc
 325              	.LVL29:
 326 0160 130101FF 		addi	sp,sp,-16
 327              		.cfi_def_cfa_offset 16
 328 0164 23341100 		sd	ra,8(sp)
 329 0168 23308100 		sd	s0,0(sp)
 330              		.cfi_offset 1, -8
 331              		.cfi_offset 8, -16
 332 016c 13040101 		addi	s0,sp,16
 333              		.cfi_def_cfa 8, 0
  71:src/syscall_c.cpp ****     size_t code = Kernel::sysCallCodes::thread_start;
 334              		.loc 1 71 5
 335              	.LVL30:
  72:src/syscall_c.cpp ****     asm volatile("mv a1, a0"); // a1 = handle
 336              		.loc 1 72 5
 337              		.loc 1 72 30 is_stmt 0
 338              	#APP
 339              	# 72 "src/syscall_c.cpp" 1
  73              	    callInterrupt(code);
 340              		mv a1, a0
 341              	# 0 "" 2
 342              		.loc 1 73 5 is_stmt 1
 343              		.loc 1 73 18 is_stmt 0
 344              	#NO_APP
 345 0174 13054001 		li	a0,20
 346              	.LVL31:
 347 0178 97000000 		call	_Z13callInterruptm
 347      E7800000 
 348              	.LVL32:
  74:src/syscall_c.cpp **** }
 349              		.loc 1 74 1
 350 0180 83308100 		ld	ra,8(sp)
 351              		.cfi_restore 1
 352 0184 03340100 		ld	s0,0(sp)
 353              		.cfi_restore 8
 354              		.cfi_def_cfa 2, 16
GAS LISTING /tmp/ccBGIdeY.s 			page 9


 355 0188 13010101 		addi	sp,sp,16
 356              		.cfi_def_cfa_offset 0
 357 018c 67800000 		jr	ra
 358              		.cfi_endproc
 359              	.LFE50:
 361              		.align	2
 362              		.globl	_Z13thread_createPP3PCBPFvPvES2_
 364              	_Z13thread_createPP3PCBPFvPvES2_:
 365              	.LFB47:
  54:src/syscall_c.cpp ****     int res = thread_create_only(handle, startRoutine, arg);
 366              		.loc 1 54 76 is_stmt 1
 367              		.cfi_startproc
 368              	.LVL33:
 369 0190 130101FE 		addi	sp,sp,-32
 370              		.cfi_def_cfa_offset 32
 371 0194 233C1100 		sd	ra,24(sp)
 372 0198 23388100 		sd	s0,16(sp)
 373 019c 23349100 		sd	s1,8(sp)
 374 01a0 23302101 		sd	s2,0(sp)
 375              		.cfi_offset 1, -8
 376              		.cfi_offset 8, -16
 377              		.cfi_offset 9, -24
 378              		.cfi_offset 18, -32
 379 01a4 13040102 		addi	s0,sp,32
 380              		.cfi_def_cfa 8, 0
 381 01a8 13090500 		mv	s2,a0
  55:src/syscall_c.cpp ****     thread_start(handle);
 382              		.loc 1 55 5
  55:src/syscall_c.cpp ****     thread_start(handle);
 383              		.loc 1 55 33 is_stmt 0
 384 01ac 97000000 		call	_Z18thread_create_onlyPP3PCBPFvPvES2_
 384      E7800000 
 385              	.LVL34:
 386 01b4 93040500 		mv	s1,a0
 387              	.LVL35:
  56:src/syscall_c.cpp ****     return res;
 388              		.loc 1 56 5 is_stmt 1
  56:src/syscall_c.cpp ****     return res;
 389              		.loc 1 56 17 is_stmt 0
 390 01b8 13050900 		mv	a0,s2
 391 01bc 97000000 		call	_Z12thread_startPP3PCB
 391      E7800000 
 392              	.LVL36:
  57:src/syscall_c.cpp **** }
 393              		.loc 1 57 5 is_stmt 1
  58:src/syscall_c.cpp **** 
 394              		.loc 1 58 1 is_stmt 0
 395 01c4 13850400 		mv	a0,s1
 396 01c8 83308101 		ld	ra,24(sp)
 397              		.cfi_restore 1
 398 01cc 03340101 		ld	s0,16(sp)
 399              		.cfi_restore 8
 400              		.cfi_def_cfa 2, 32
 401 01d0 83348100 		ld	s1,8(sp)
 402              		.cfi_restore 9
 403              	.LVL37:
 404 01d4 03390100 		ld	s2,0(sp)
GAS LISTING /tmp/ccBGIdeY.s 			page 10


 405              		.cfi_restore 18
 406              	.LVL38:
 407 01d8 13010102 		addi	sp,sp,32
 408              		.cfi_def_cfa_offset 0
 409 01dc 67800000 		jr	ra
 410              		.cfi_endproc
 411              	.LFE47:
 413              		.align	2
 414              		.globl	_Z8sem_openPP3SCBj
 416              	_Z8sem_openPP3SCBj:
 417              	.LFB51:
  75:src/syscall_c.cpp **** 
  76:src/syscall_c.cpp **** int sem_open (sem_t* handle, unsigned init) {
 418              		.loc 1 76 45 is_stmt 1
 419              		.cfi_startproc
 420              	.LVL39:
 421 01e0 130101FF 		addi	sp,sp,-16
 422              		.cfi_def_cfa_offset 16
 423 01e4 23341100 		sd	ra,8(sp)
 424 01e8 23308100 		sd	s0,0(sp)
 425              		.cfi_offset 1, -8
 426              		.cfi_offset 8, -16
 427 01ec 13040101 		addi	s0,sp,16
 428              		.cfi_def_cfa 8, 0
  77:src/syscall_c.cpp ****     size_t code = Kernel::sysCallCodes::sem_open;
 429              		.loc 1 77 5
 430              	.LVL40:
  78:src/syscall_c.cpp **** 
  79:src/syscall_c.cpp ****     asm volatile("mv a2, a1"); // a2 = init
 431              		.loc 1 79 5
 432              		.loc 1 79 30 is_stmt 0
 433              	#APP
 434              	# 79 "src/syscall_c.cpp" 1
  80              	    asm volatile("mv a1, a0"); // a1 = handle
 435              		mv a2, a1
 436              	# 0 "" 2
 437              		.loc 1 80 5 is_stmt 1
 438              		.loc 1 80 30 is_stmt 0
 439              	# 80 "src/syscall_c.cpp" 1
  81              	
  82:src/syscall_c.cpp ****     handle = (sem_t*)callInterrupt(code);
 440              		mv a1, a0
 441              	# 0 "" 2
 442              		.loc 1 82 5 is_stmt 1
 443              		.loc 1 82 35 is_stmt 0
 444              	#NO_APP
 445 01f8 13051002 		li	a0,33
 446              	.LVL41:
 447 01fc 97000000 		call	_Z13callInterruptm
 447      E7800000 
 448              	.LVL42:
  83:src/syscall_c.cpp ****     if(*handle == nullptr) {
 449              		.loc 1 83 5 is_stmt 1
 450              		.loc 1 83 8 is_stmt 0
 451 0204 83370500 		ld	a5,0(a0)
 452              		.loc 1 83 5
 453 0208 638C0700 		beqz	a5,.L22
GAS LISTING /tmp/ccBGIdeY.s 			page 11


  84:src/syscall_c.cpp ****         return -1;
  85:src/syscall_c.cpp ****     }
  86:src/syscall_c.cpp **** 
  87:src/syscall_c.cpp ****     return 0;
 454              		.loc 1 87 12
 455 020c 13050000 		li	a0,0
 456              	.LVL43:
 457              	.L21:
  88:src/syscall_c.cpp **** }
 458              		.loc 1 88 1
 459 0210 83308100 		ld	ra,8(sp)
 460              		.cfi_remember_state
 461              		.cfi_restore 1
 462 0214 03340100 		ld	s0,0(sp)
 463              		.cfi_restore 8
 464              		.cfi_def_cfa 2, 16
 465 0218 13010101 		addi	sp,sp,16
 466              		.cfi_def_cfa_offset 0
 467 021c 67800000 		jr	ra
 468              	.LVL44:
 469              	.L22:
 470              		.cfi_restore_state
  84:src/syscall_c.cpp ****         return -1;
 471              		.loc 1 84 17
 472 0220 1305F0FF 		li	a0,-1
 473              	.LVL45:
 474 0224 6FF0DFFE 		j	.L21
 475              		.cfi_endproc
 476              	.LFE51:
 478              		.align	2
 479              		.globl	_Z8sem_waitP3SCB
 481              	_Z8sem_waitP3SCB:
 482              	.LFB52:
  89:src/syscall_c.cpp **** 
  90:src/syscall_c.cpp **** int sem_wait (sem_t volatile handle) {
 483              		.loc 1 90 38 is_stmt 1
 484              		.cfi_startproc
 485              	.LVL46:
 486 0228 130101FE 		addi	sp,sp,-32
 487              		.cfi_def_cfa_offset 32
 488 022c 233C1100 		sd	ra,24(sp)
 489 0230 23388100 		sd	s0,16(sp)
 490              		.cfi_offset 1, -8
 491              		.cfi_offset 8, -16
 492 0234 13040102 		addi	s0,sp,32
 493              		.cfi_def_cfa 8, 0
 494 0238 2334A4FE 		sd	a0,-24(s0)
  91:src/syscall_c.cpp ****     size_t code = Kernel::sysCallCodes::sem_wait;
 495              		.loc 1 91 5
 496              	.LVL47:
  92:src/syscall_c.cpp ****     if(handle == nullptr) return -1;
 497              		.loc 1 92 5
 498              		.loc 1 92 8 is_stmt 0
 499 023c 833784FE 		ld	a5,-24(s0)
 500              		.loc 1 92 5
 501 0240 63840702 		beqz	a5,.L26
  93:src/syscall_c.cpp ****     asm volatile("mv a1, a0");
GAS LISTING /tmp/ccBGIdeY.s 			page 12


 502              		.loc 1 93 5 is_stmt 1
 503              		.loc 1 93 30 is_stmt 0
 504              	#APP
 505              	# 93 "src/syscall_c.cpp" 1
  94              	
  95:src/syscall_c.cpp ****     return (int)(size_t)callInterrupt(code);
 506              		mv a1, a0
 507              	# 0 "" 2
 508              		.loc 1 95 5 is_stmt 1
 509              		.loc 1 95 38 is_stmt 0
 510              	#NO_APP
 511 0248 13053002 		li	a0,35
 512              	.LVL48:
 513 024c 97000000 		call	_Z13callInterruptm
 513      E7800000 
 514              	.LVL49:
 515              		.loc 1 95 43
 516 0254 1B050500 		sext.w	a0,a0
 517              	.L25:
  96:src/syscall_c.cpp **** }
 518              		.loc 1 96 1
 519 0258 83308101 		ld	ra,24(sp)
 520              		.cfi_remember_state
 521              		.cfi_restore 1
 522 025c 03340101 		ld	s0,16(sp)
 523              		.cfi_restore 8
 524              		.cfi_def_cfa 2, 32
 525              	.LVL50:
 526 0260 13010102 		addi	sp,sp,32
 527              		.cfi_def_cfa_offset 0
 528              	.LVL51:
 529 0264 67800000 		jr	ra
 530              	.LVL52:
 531              	.L26:
 532              		.cfi_restore_state
  92:src/syscall_c.cpp ****     asm volatile("mv a1, a0");
 533              		.loc 1 92 35
 534 0268 1305F0FF 		li	a0,-1
 535              	.LVL53:
 536 026c 6FF0DFFE 		j	.L25
 537              		.cfi_endproc
 538              	.LFE52:
 540              		.align	2
 541              		.globl	_Z10sem_signalP3SCB
 543              	_Z10sem_signalP3SCB:
 544              	.LFB53:
  97:src/syscall_c.cpp **** 
  98:src/syscall_c.cpp **** int sem_signal (sem_t handle) {
 545              		.loc 1 98 31 is_stmt 1
 546              		.cfi_startproc
 547              	.LVL54:
  99:src/syscall_c.cpp ****     size_t code = Kernel::sysCallCodes::sem_signal;
 548              		.loc 1 99 5
 100:src/syscall_c.cpp ****     if(handle == nullptr) return -1;
 549              		.loc 1 100 5
 550 0270 630C0502 		beqz	a0,.L30
  98:src/syscall_c.cpp ****     size_t code = Kernel::sysCallCodes::sem_signal;
GAS LISTING /tmp/ccBGIdeY.s 			page 13


 551              		.loc 1 98 31 is_stmt 0
 552 0274 130101FF 		addi	sp,sp,-16
 553              		.cfi_def_cfa_offset 16
 554 0278 23341100 		sd	ra,8(sp)
 555 027c 23308100 		sd	s0,0(sp)
 556              		.cfi_offset 1, -8
 557              		.cfi_offset 8, -16
 558 0280 13040101 		addi	s0,sp,16
 559              		.cfi_def_cfa 8, 0
 101:src/syscall_c.cpp ****     asm volatile("mv a1, a0");
 560              		.loc 1 101 5 is_stmt 1
 561              		.loc 1 101 30 is_stmt 0
 562              	#APP
 563              	# 101 "src/syscall_c.cpp" 1
 102              	
 103:src/syscall_c.cpp ****     callInterrupt(code);
 564              		mv a1, a0
 565              	# 0 "" 2
 566              		.loc 1 103 5 is_stmt 1
 567              		.loc 1 103 18 is_stmt 0
 568              	#NO_APP
 569 0288 13054002 		li	a0,36
 570              	.LVL55:
 571 028c 97000000 		call	_Z13callInterruptm
 571      E7800000 
 572              	.LVL56:
 104:src/syscall_c.cpp **** 
 105:src/syscall_c.cpp ****     return 0;
 573              		.loc 1 105 5 is_stmt 1
 574              		.loc 1 105 12 is_stmt 0
 575 0294 13050000 		li	a0,0
 106:src/syscall_c.cpp **** }
 576              		.loc 1 106 1
 577 0298 83308100 		ld	ra,8(sp)
 578              		.cfi_restore 1
 579 029c 03340100 		ld	s0,0(sp)
 580              		.cfi_restore 8
 581              		.cfi_def_cfa 2, 16
 582 02a0 13010101 		addi	sp,sp,16
 583              		.cfi_def_cfa_offset 0
 584 02a4 67800000 		jr	ra
 585              	.LVL57:
 586              	.L30:
 100:src/syscall_c.cpp ****     asm volatile("mv a1, a0");
 587              		.loc 1 100 35
 588 02a8 1305F0FF 		li	a0,-1
 589              	.LVL58:
 590              		.loc 1 106 1
 591 02ac 67800000 		ret
 592              		.cfi_endproc
 593              	.LFE53:
 595              		.align	2
 596              		.globl	_Z9sem_closeP3SCB
 598              	_Z9sem_closeP3SCB:
 599              	.LFB54:
 107:src/syscall_c.cpp **** 
 108:src/syscall_c.cpp **** int sem_close (sem_t handle) {
GAS LISTING /tmp/ccBGIdeY.s 			page 14


 600              		.loc 1 108 30 is_stmt 1
 601              		.cfi_startproc
 602              	.LVL59:
 109:src/syscall_c.cpp ****     size_t code = Kernel::sysCallCodes::sem_close;
 603              		.loc 1 109 5
 110:src/syscall_c.cpp ****     if(handle == nullptr) return -1;
 604              		.loc 1 110 5
 605 02b0 630C0502 		beqz	a0,.L37
 108:src/syscall_c.cpp ****     size_t code = Kernel::sysCallCodes::sem_close;
 606              		.loc 1 108 30 is_stmt 0
 607 02b4 130101FF 		addi	sp,sp,-16
 608              		.cfi_def_cfa_offset 16
 609 02b8 23341100 		sd	ra,8(sp)
 610 02bc 23308100 		sd	s0,0(sp)
 611              		.cfi_offset 1, -8
 612              		.cfi_offset 8, -16
 613 02c0 13040101 		addi	s0,sp,16
 614              		.cfi_def_cfa 8, 0
 111:src/syscall_c.cpp **** 
 112:src/syscall_c.cpp ****     asm volatile("mv a1, a0");
 615              		.loc 1 112 5 is_stmt 1
 616              		.loc 1 112 30 is_stmt 0
 617              	#APP
 618              	# 112 "src/syscall_c.cpp" 1
 113              	    callInterrupt(code);
 619              		mv a1, a0
 620              	# 0 "" 2
 621              		.loc 1 113 5 is_stmt 1
 622              		.loc 1 113 18 is_stmt 0
 623              	#NO_APP
 624 02c8 13052002 		li	a0,34
 625              	.LVL60:
 626 02cc 97000000 		call	_Z13callInterruptm
 626      E7800000 
 627              	.LVL61:
 114:src/syscall_c.cpp ****     return 0;
 628              		.loc 1 114 5 is_stmt 1
 629              		.loc 1 114 12 is_stmt 0
 630 02d4 13050000 		li	a0,0
 115:src/syscall_c.cpp **** }
 631              		.loc 1 115 1
 632 02d8 83308100 		ld	ra,8(sp)
 633              		.cfi_restore 1
 634 02dc 03340100 		ld	s0,0(sp)
 635              		.cfi_restore 8
 636              		.cfi_def_cfa 2, 16
 637 02e0 13010101 		addi	sp,sp,16
 638              		.cfi_def_cfa_offset 0
 639 02e4 67800000 		jr	ra
 640              	.LVL62:
 641              	.L37:
 110:src/syscall_c.cpp **** 
 642              		.loc 1 110 35
 643 02e8 1305F0FF 		li	a0,-1
 644              	.LVL63:
 645              		.loc 1 115 1
 646 02ec 67800000 		ret
GAS LISTING /tmp/ccBGIdeY.s 			page 15


 647              		.cfi_endproc
 648              	.LFE54:
 650              		.align	2
 651              		.globl	_Z10time_sleepm
 653              	_Z10time_sleepm:
 654              	.LFB55:
 116:src/syscall_c.cpp **** 
 117:src/syscall_c.cpp **** int time_sleep (time_t time) {
 655              		.loc 1 117 30 is_stmt 1
 656              		.cfi_startproc
 657              	.LVL64:
 118:src/syscall_c.cpp ****     size_t code = Kernel::sysCallCodes::time_sleep;
 658              		.loc 1 118 5
 119:src/syscall_c.cpp ****     if(time <= 0) return -1;
 659              		.loc 1 119 5
 660 02f0 63000504 		beqz	a0,.L44
 117:src/syscall_c.cpp ****     size_t code = Kernel::sysCallCodes::time_sleep;
 661              		.loc 1 117 30 is_stmt 0
 662 02f4 130101FF 		addi	sp,sp,-16
 663              		.cfi_def_cfa_offset 16
 664 02f8 23341100 		sd	ra,8(sp)
 665 02fc 23308100 		sd	s0,0(sp)
 666              		.cfi_offset 1, -8
 667              		.cfi_offset 8, -16
 668 0300 13040101 		addi	s0,sp,16
 669              		.cfi_def_cfa 8, 0
 120:src/syscall_c.cpp **** 
 121:src/syscall_c.cpp ****     asm volatile("mv a1, a0");
 670              		.loc 1 121 5 is_stmt 1
 671              		.loc 1 121 30 is_stmt 0
 672              	#APP
 673              	# 121 "src/syscall_c.cpp" 1
 122              	    callInterrupt(code);
 674              		mv a1, a0
 675              	# 0 "" 2
 676              		.loc 1 122 5 is_stmt 1
 677              		.loc 1 122 18 is_stmt 0
 678              	#NO_APP
 679 0308 13051003 		li	a0,49
 680              	.LVL65:
 681 030c 97000000 		call	_Z13callInterruptm
 681      E7800000 
 682              	.LVL66:
 123:src/syscall_c.cpp **** 
 124:src/syscall_c.cpp ****     thread_dispatch(); // radimo odmah dispatch da bi zaustavili tekuci proces
 683              		.loc 1 124 5 is_stmt 1
 684              		.loc 1 124 20 is_stmt 0
 685 0314 97000000 		call	_Z15thread_dispatchv
 685      E7800000 
 686              	.LVL67:
 125:src/syscall_c.cpp **** 
 126:src/syscall_c.cpp ****     return 0;
 687              		.loc 1 126 5 is_stmt 1
 688              		.loc 1 126 12 is_stmt 0
 689 031c 13050000 		li	a0,0
 127:src/syscall_c.cpp **** }
 690              		.loc 1 127 1
GAS LISTING /tmp/ccBGIdeY.s 			page 16


 691 0320 83308100 		ld	ra,8(sp)
 692              		.cfi_restore 1
 693 0324 03340100 		ld	s0,0(sp)
 694              		.cfi_restore 8
 695              		.cfi_def_cfa 2, 16
 696 0328 13010101 		addi	sp,sp,16
 697              		.cfi_def_cfa_offset 0
 698 032c 67800000 		jr	ra
 699              	.LVL68:
 700              	.L44:
 119:src/syscall_c.cpp **** 
 701              		.loc 1 119 27
 702 0330 1305F0FF 		li	a0,-1
 703              	.LVL69:
 704              		.loc 1 127 1
 705 0334 67800000 		ret
 706              		.cfi_endproc
 707              	.LFE55:
 709              		.align	2
 710              		.globl	_Z4getcv
 712              	_Z4getcv:
 713              	.LFB56:
 128:src/syscall_c.cpp **** 
 129:src/syscall_c.cpp **** char getc () {
 714              		.loc 1 129 14 is_stmt 1
 715              		.cfi_startproc
 716 0338 130101FF 		addi	sp,sp,-16
 717              		.cfi_def_cfa_offset 16
 718 033c 23341100 		sd	ra,8(sp)
 719 0340 23308100 		sd	s0,0(sp)
 720              		.cfi_offset 1, -8
 721              		.cfi_offset 8, -16
 722 0344 13040101 		addi	s0,sp,16
 723              		.cfi_def_cfa 8, 0
 130:src/syscall_c.cpp ****     size_t code = Kernel::sysCallCodes::getc;
 724              		.loc 1 130 5
 725              	.LVL70:
 131:src/syscall_c.cpp ****     return (char)(size_t)callInterrupt(code);
 726              		.loc 1 131 5
 727              		.loc 1 131 39 is_stmt 0
 728 0348 13051004 		li	a0,65
 729 034c 97000000 		call	_Z13callInterruptm
 729      E7800000 
 730              	.LVL71:
 132:src/syscall_c.cpp **** }
 731              		.loc 1 132 1
 732 0354 1375F50F 		andi	a0,a0,0xff
 733 0358 83308100 		ld	ra,8(sp)
 734              		.cfi_restore 1
 735 035c 03340100 		ld	s0,0(sp)
 736              		.cfi_restore 8
 737              		.cfi_def_cfa 2, 16
 738 0360 13010101 		addi	sp,sp,16
 739              		.cfi_def_cfa_offset 0
 740 0364 67800000 		jr	ra
 741              		.cfi_endproc
 742              	.LFE56:
GAS LISTING /tmp/ccBGIdeY.s 			page 17


 744              		.align	2
 745              		.globl	_Z4putcc
 747              	_Z4putcc:
 748              	.LFB57:
 133:src/syscall_c.cpp **** 
 134:src/syscall_c.cpp **** void putc(char c) {
 749              		.loc 1 134 19 is_stmt 1
 750              		.cfi_startproc
 751              	.LVL72:
 752 0368 130101FF 		addi	sp,sp,-16
 753              		.cfi_def_cfa_offset 16
 754 036c 23341100 		sd	ra,8(sp)
 755 0370 23308100 		sd	s0,0(sp)
 756              		.cfi_offset 1, -8
 757              		.cfi_offset 8, -16
 758 0374 13040101 		addi	s0,sp,16
 759              		.cfi_def_cfa 8, 0
 135:src/syscall_c.cpp ****     size_t code = Kernel::sysCallCodes::putc;
 760              		.loc 1 135 5
 761              	.LVL73:
 136:src/syscall_c.cpp ****     asm volatile("mv a1, a0"); // a1 = c
 762              		.loc 1 136 5
 763              		.loc 1 136 30 is_stmt 0
 764              	#APP
 765              	# 136 "src/syscall_c.cpp" 1
 137              	    callInterrupt(code);
 766              		mv a1, a0
 767              	# 0 "" 2
 768              		.loc 1 137 5 is_stmt 1
 769              		.loc 1 137 18 is_stmt 0
 770              	#NO_APP
 771 037c 13052004 		li	a0,66
 772              	.LVL74:
 773 0380 97000000 		call	_Z13callInterruptm
 773      E7800000 
 774              	.LVL75:
 138:src/syscall_c.cpp **** }
 775              		.loc 1 138 1
 776 0388 83308100 		ld	ra,8(sp)
 777              		.cfi_restore 1
 778 038c 03340100 		ld	s0,0(sp)
 779              		.cfi_restore 8
 780              		.cfi_def_cfa 2, 16
 781 0390 13010101 		addi	sp,sp,16
 782              		.cfi_def_cfa_offset 0
 783 0394 67800000 		jr	ra
 784              		.cfi_endproc
 785              	.LFE57:
 787              	.Letext0:
 788              		.file 3 "src/../h/hw.h"
 789              		.file 4 "src/../h/PCB.h"
 790              		.file 5 "src/../h/SCB.h"
 791              		.file 6 "src/../h/syscall_c.h"
GAS LISTING /tmp/ccBGIdeY.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 syscall_c.cpp
     /tmp/ccBGIdeY.s:9      .text:0000000000000000 _Z13callInterruptm
     /tmp/ccBGIdeY.s:13     .text:0000000000000000 .L0 
     /tmp/ccBGIdeY.s:15     .text:0000000000000000 .L0 
     /tmp/ccBGIdeY.s:16     .text:0000000000000004 .L0 
     /tmp/ccBGIdeY.s:18     .text:0000000000000008 .L0 
     /tmp/ccBGIdeY.s:20     .text:000000000000000c .L0 
     /tmp/ccBGIdeY.s:23     .text:0000000000000010 .L0 
     /tmp/ccBGIdeY.s:24     .text:0000000000000010 .L0 
   src/syscall_c.cpp:10     .text:0000000000000010 .L0 
     /tmp/ccBGIdeY.s:30     .text:0000000000000014 .L0 
   src/syscall_c.cpp:11     .text:0000000000000014 .L0 
     /tmp/ccBGIdeY.s:36     .text:0000000000000018 .L0 
     /tmp/ccBGIdeY.s:38     .text:0000000000000018 .L0 
     /tmp/ccBGIdeY.s:39     .text:000000000000001c .L0 
     /tmp/ccBGIdeY.s:40     .text:000000000000001c .L0 
     /tmp/ccBGIdeY.s:43     .text:0000000000000020 .L0 
     /tmp/ccBGIdeY.s:46     .text:0000000000000024 .L0 
     /tmp/ccBGIdeY.s:52     .text:0000000000000024 _Z9mem_allocm
     /tmp/ccBGIdeY.s:55     .text:0000000000000024 .L0 
     /tmp/ccBGIdeY.s:57     .text:0000000000000024 .L0 
     /tmp/ccBGIdeY.s:58     .text:0000000000000028 .L0 
     /tmp/ccBGIdeY.s:61     .text:0000000000000030 .L0 
     /tmp/ccBGIdeY.s:62     .text:0000000000000030 .L0 
     /tmp/ccBGIdeY.s:64     .text:0000000000000034 .L0 
     /tmp/ccBGIdeY.s:67     .text:0000000000000034 .L0 
     /tmp/ccBGIdeY.s:71     .text:0000000000000034 .L0 
     /tmp/ccBGIdeY.s:72     .text:0000000000000034 .L0 
     /tmp/ccBGIdeY.s:73     .text:0000000000000034 .L0 
     /tmp/ccBGIdeY.s:75     .text:0000000000000038 .L0 
     /tmp/ccBGIdeY.s:78     .text:000000000000003c .L0 
     /tmp/ccBGIdeY.s:80     .text:0000000000000040 .L0 
     /tmp/ccBGIdeY.s:85     .text:0000000000000044 .L0 
   src/syscall_c.cpp:20     .text:0000000000000044 .L0 
     /tmp/ccBGIdeY.s:91     .text:0000000000000048 .L0 
     /tmp/ccBGIdeY.s:93     .text:0000000000000048 .L0 
     /tmp/ccBGIdeY.s:98     .text:0000000000000054 .L0 
     /tmp/ccBGIdeY.s:99     .text:0000000000000058 .L0 
     /tmp/ccBGIdeY.s:101    .text:000000000000005c .L0 
     /tmp/ccBGIdeY.s:102    .text:000000000000005c .L0 
     /tmp/ccBGIdeY.s:104    .text:0000000000000060 .L0 
     /tmp/ccBGIdeY.s:106    .text:0000000000000064 .L0 
     /tmp/ccBGIdeY.s:112    .text:0000000000000064 _Z8mem_freePv
     /tmp/ccBGIdeY.s:115    .text:0000000000000064 .L0 
     /tmp/ccBGIdeY.s:117    .text:0000000000000064 .L0 
     /tmp/ccBGIdeY.s:118    .text:0000000000000068 .L0 
     /tmp/ccBGIdeY.s:121    .text:0000000000000070 .L0 
     /tmp/ccBGIdeY.s:122    .text:0000000000000070 .L0 
     /tmp/ccBGIdeY.s:124    .text:0000000000000074 .L0 
     /tmp/ccBGIdeY.s:127    .text:0000000000000074 .L0 
     /tmp/ccBGIdeY.s:128    .text:0000000000000074 .L0 
   src/syscall_c.cpp:28     .text:0000000000000074 .L0 
     /tmp/ccBGIdeY.s:134    .text:0000000000000078 .L0 
     /tmp/ccBGIdeY.s:136    .text:0000000000000078 .L0 
     /tmp/ccBGIdeY.s:141    .text:0000000000000084 .L0 
     /tmp/ccBGIdeY.s:143    .text:000000000000008c .L0 
GAS LISTING /tmp/ccBGIdeY.s 			page 19


     /tmp/ccBGIdeY.s:145    .text:0000000000000090 .L0 
     /tmp/ccBGIdeY.s:146    .text:0000000000000090 .L0 
     /tmp/ccBGIdeY.s:148    .text:0000000000000094 .L0 
     /tmp/ccBGIdeY.s:150    .text:0000000000000098 .L0 
     /tmp/ccBGIdeY.s:156    .text:0000000000000098 _Z18thread_create_onlyPP3PCBPFvPvES2_
     /tmp/ccBGIdeY.s:159    .text:0000000000000098 .L0 
     /tmp/ccBGIdeY.s:161    .text:0000000000000098 .L0 
     /tmp/ccBGIdeY.s:162    .text:000000000000009c .L0 
     /tmp/ccBGIdeY.s:165    .text:00000000000000a4 .L0 
     /tmp/ccBGIdeY.s:166    .text:00000000000000a4 .L0 
     /tmp/ccBGIdeY.s:168    .text:00000000000000a8 .L0 
     /tmp/ccBGIdeY.s:171    .text:00000000000000a8 .L0 
     /tmp/ccBGIdeY.s:172    .text:00000000000000a8 .L0 
   src/syscall_c.cpp:36     .text:00000000000000a8 .L0 
     /tmp/ccBGIdeY.s:178    .text:00000000000000ac .L0 
   src/syscall_c.cpp:37     .text:00000000000000ac .L0 
     /tmp/ccBGIdeY.s:183    .text:00000000000000b0 .L0 
   src/syscall_c.cpp:38     .text:00000000000000b0 .L0 
     /tmp/ccBGIdeY.s:188    .text:00000000000000b4 .L0 
     /tmp/ccBGIdeY.s:190    .text:00000000000000b4 .L0 
     /tmp/ccBGIdeY.s:195    .text:00000000000000c0 .L0 
     /tmp/ccBGIdeY.s:197    .text:00000000000000c4 .L0 
   src/syscall_c.cpp:44     .text:00000000000000c4 .L0 
     /tmp/ccBGIdeY.s:203    .text:00000000000000c8 .L0 
   src/syscall_c.cpp:45     .text:00000000000000c8 .L0 
     /tmp/ccBGIdeY.s:208    .text:00000000000000cc .L0 
     /tmp/ccBGIdeY.s:210    .text:00000000000000cc .L0 
     /tmp/ccBGIdeY.s:215    .text:00000000000000d8 .L0 
     /tmp/ccBGIdeY.s:216    .text:00000000000000d8 .L0 
     /tmp/ccBGIdeY.s:218    .text:00000000000000dc .L0 
     /tmp/ccBGIdeY.s:220    .text:00000000000000e0 .L0 
     /tmp/ccBGIdeY.s:224    .text:00000000000000e4 .L0 
     /tmp/ccBGIdeY.s:225    .text:00000000000000e8 .L0 
     /tmp/ccBGIdeY.s:226    .text:00000000000000e8 .L0 
     /tmp/ccBGIdeY.s:228    .text:00000000000000ec .L0 
     /tmp/ccBGIdeY.s:229    .text:00000000000000ec .L0 
     /tmp/ccBGIdeY.s:231    .text:00000000000000f0 .L0 
     /tmp/ccBGIdeY.s:235    .text:00000000000000f4 .L0 
     /tmp/ccBGIdeY.s:237    .text:00000000000000f4 .L0 
     /tmp/ccBGIdeY.s:243    .text:00000000000000fc .L0 
     /tmp/ccBGIdeY.s:246    .text:0000000000000104 .L0 
     /tmp/ccBGIdeY.s:252    .text:0000000000000104 _Z15thread_dispatchv
     /tmp/ccBGIdeY.s:255    .text:0000000000000104 .L0 
     /tmp/ccBGIdeY.s:256    .text:0000000000000104 .L0 
     /tmp/ccBGIdeY.s:257    .text:0000000000000108 .L0 
     /tmp/ccBGIdeY.s:260    .text:0000000000000110 .L0 
     /tmp/ccBGIdeY.s:261    .text:0000000000000110 .L0 
     /tmp/ccBGIdeY.s:263    .text:0000000000000114 .L0 
     /tmp/ccBGIdeY.s:266    .text:0000000000000114 .L0 
     /tmp/ccBGIdeY.s:267    .text:0000000000000114 .L0 
     /tmp/ccBGIdeY.s:268    .text:0000000000000114 .L0 
     /tmp/ccBGIdeY.s:272    .text:0000000000000120 .L0 
     /tmp/ccBGIdeY.s:273    .text:0000000000000124 .L0 
     /tmp/ccBGIdeY.s:275    .text:0000000000000128 .L0 
     /tmp/ccBGIdeY.s:276    .text:0000000000000128 .L0 
     /tmp/ccBGIdeY.s:278    .text:000000000000012c .L0 
     /tmp/ccBGIdeY.s:280    .text:0000000000000130 .L0 
GAS LISTING /tmp/ccBGIdeY.s 			page 20


     /tmp/ccBGIdeY.s:286    .text:0000000000000130 _Z11thread_exitv
     /tmp/ccBGIdeY.s:289    .text:0000000000000130 .L0 
     /tmp/ccBGIdeY.s:290    .text:0000000000000130 .L0 
     /tmp/ccBGIdeY.s:291    .text:0000000000000134 .L0 
     /tmp/ccBGIdeY.s:294    .text:000000000000013c .L0 
     /tmp/ccBGIdeY.s:295    .text:000000000000013c .L0 
     /tmp/ccBGIdeY.s:297    .text:0000000000000140 .L0 
     /tmp/ccBGIdeY.s:300    .text:0000000000000140 .L0 
     /tmp/ccBGIdeY.s:301    .text:0000000000000140 .L0 
     /tmp/ccBGIdeY.s:302    .text:0000000000000140 .L0 
     /tmp/ccBGIdeY.s:306    .text:000000000000014c .L0 
     /tmp/ccBGIdeY.s:308    .text:0000000000000154 .L0 
     /tmp/ccBGIdeY.s:310    .text:0000000000000158 .L0 
     /tmp/ccBGIdeY.s:311    .text:0000000000000158 .L0 
     /tmp/ccBGIdeY.s:313    .text:000000000000015c .L0 
     /tmp/ccBGIdeY.s:315    .text:0000000000000160 .L0 
     /tmp/ccBGIdeY.s:321    .text:0000000000000160 _Z12thread_startPP3PCB
     /tmp/ccBGIdeY.s:324    .text:0000000000000160 .L0 
     /tmp/ccBGIdeY.s:326    .text:0000000000000160 .L0 
     /tmp/ccBGIdeY.s:327    .text:0000000000000164 .L0 
     /tmp/ccBGIdeY.s:330    .text:000000000000016c .L0 
     /tmp/ccBGIdeY.s:331    .text:000000000000016c .L0 
     /tmp/ccBGIdeY.s:333    .text:0000000000000170 .L0 
     /tmp/ccBGIdeY.s:336    .text:0000000000000170 .L0 
     /tmp/ccBGIdeY.s:337    .text:0000000000000170 .L0 
   src/syscall_c.cpp:72     .text:0000000000000170 .L0 
     /tmp/ccBGIdeY.s:343    .text:0000000000000174 .L0 
     /tmp/ccBGIdeY.s:345    .text:0000000000000174 .L0 
     /tmp/ccBGIdeY.s:350    .text:0000000000000180 .L0 
     /tmp/ccBGIdeY.s:351    .text:0000000000000184 .L0 
     /tmp/ccBGIdeY.s:353    .text:0000000000000188 .L0 
     /tmp/ccBGIdeY.s:354    .text:0000000000000188 .L0 
     /tmp/ccBGIdeY.s:356    .text:000000000000018c .L0 
     /tmp/ccBGIdeY.s:358    .text:0000000000000190 .L0 
     /tmp/ccBGIdeY.s:364    .text:0000000000000190 _Z13thread_createPP3PCBPFvPvES2_
     /tmp/ccBGIdeY.s:367    .text:0000000000000190 .L0 
     /tmp/ccBGIdeY.s:369    .text:0000000000000190 .L0 
     /tmp/ccBGIdeY.s:370    .text:0000000000000194 .L0 
     /tmp/ccBGIdeY.s:375    .text:00000000000001a4 .L0 
     /tmp/ccBGIdeY.s:376    .text:00000000000001a4 .L0 
     /tmp/ccBGIdeY.s:377    .text:00000000000001a4 .L0 
     /tmp/ccBGIdeY.s:378    .text:00000000000001a4 .L0 
     /tmp/ccBGIdeY.s:380    .text:00000000000001a8 .L0 
     /tmp/ccBGIdeY.s:383    .text:00000000000001ac .L0 
     /tmp/ccBGIdeY.s:384    .text:00000000000001ac .L0 
     /tmp/ccBGIdeY.s:389    .text:00000000000001b8 .L0 
     /tmp/ccBGIdeY.s:390    .text:00000000000001b8 .L0 
     /tmp/ccBGIdeY.s:394    .text:00000000000001c4 .L0 
     /tmp/ccBGIdeY.s:395    .text:00000000000001c4 .L0 
     /tmp/ccBGIdeY.s:397    .text:00000000000001cc .L0 
     /tmp/ccBGIdeY.s:399    .text:00000000000001d0 .L0 
     /tmp/ccBGIdeY.s:400    .text:00000000000001d0 .L0 
     /tmp/ccBGIdeY.s:402    .text:00000000000001d4 .L0 
     /tmp/ccBGIdeY.s:405    .text:00000000000001d8 .L0 
     /tmp/ccBGIdeY.s:408    .text:00000000000001dc .L0 
     /tmp/ccBGIdeY.s:410    .text:00000000000001e0 .L0 
     /tmp/ccBGIdeY.s:416    .text:00000000000001e0 _Z8sem_openPP3SCBj
GAS LISTING /tmp/ccBGIdeY.s 			page 21


     /tmp/ccBGIdeY.s:419    .text:00000000000001e0 .L0 
     /tmp/ccBGIdeY.s:421    .text:00000000000001e0 .L0 
     /tmp/ccBGIdeY.s:422    .text:00000000000001e4 .L0 
     /tmp/ccBGIdeY.s:425    .text:00000000000001ec .L0 
     /tmp/ccBGIdeY.s:426    .text:00000000000001ec .L0 
     /tmp/ccBGIdeY.s:428    .text:00000000000001f0 .L0 
     /tmp/ccBGIdeY.s:431    .text:00000000000001f0 .L0 
     /tmp/ccBGIdeY.s:432    .text:00000000000001f0 .L0 
   src/syscall_c.cpp:79     .text:00000000000001f0 .L0 
     /tmp/ccBGIdeY.s:438    .text:00000000000001f4 .L0 
   src/syscall_c.cpp:80     .text:00000000000001f4 .L0 
     /tmp/ccBGIdeY.s:443    .text:00000000000001f8 .L0 
     /tmp/ccBGIdeY.s:445    .text:00000000000001f8 .L0 
     /tmp/ccBGIdeY.s:450    .text:0000000000000204 .L0 
     /tmp/ccBGIdeY.s:451    .text:0000000000000204 .L0 
     /tmp/ccBGIdeY.s:453    .text:0000000000000208 .L0 
     /tmp/ccBGIdeY.s:455    .text:000000000000020c .L0 
     /tmp/ccBGIdeY.s:459    .text:0000000000000210 .L0 
     /tmp/ccBGIdeY.s:460    .text:0000000000000214 .L0 
     /tmp/ccBGIdeY.s:461    .text:0000000000000214 .L0 
     /tmp/ccBGIdeY.s:463    .text:0000000000000218 .L0 
     /tmp/ccBGIdeY.s:464    .text:0000000000000218 .L0 
     /tmp/ccBGIdeY.s:466    .text:000000000000021c .L0 
     /tmp/ccBGIdeY.s:470    .text:0000000000000220 .L0 
     /tmp/ccBGIdeY.s:472    .text:0000000000000220 .L0 
     /tmp/ccBGIdeY.s:475    .text:0000000000000228 .L0 
     /tmp/ccBGIdeY.s:481    .text:0000000000000228 _Z8sem_waitP3SCB
     /tmp/ccBGIdeY.s:484    .text:0000000000000228 .L0 
     /tmp/ccBGIdeY.s:486    .text:0000000000000228 .L0 
     /tmp/ccBGIdeY.s:487    .text:000000000000022c .L0 
     /tmp/ccBGIdeY.s:490    .text:0000000000000234 .L0 
     /tmp/ccBGIdeY.s:491    .text:0000000000000234 .L0 
     /tmp/ccBGIdeY.s:493    .text:0000000000000238 .L0 
     /tmp/ccBGIdeY.s:497    .text:000000000000023c .L0 
     /tmp/ccBGIdeY.s:498    .text:000000000000023c .L0 
     /tmp/ccBGIdeY.s:499    .text:000000000000023c .L0 
     /tmp/ccBGIdeY.s:501    .text:0000000000000240 .L0 
     /tmp/ccBGIdeY.s:503    .text:0000000000000244 .L0 
   src/syscall_c.cpp:93     .text:0000000000000244 .L0 
     /tmp/ccBGIdeY.s:509    .text:0000000000000248 .L0 
     /tmp/ccBGIdeY.s:511    .text:0000000000000248 .L0 
     /tmp/ccBGIdeY.s:516    .text:0000000000000254 .L0 
     /tmp/ccBGIdeY.s:519    .text:0000000000000258 .L0 
     /tmp/ccBGIdeY.s:520    .text:000000000000025c .L0 
     /tmp/ccBGIdeY.s:521    .text:000000000000025c .L0 
     /tmp/ccBGIdeY.s:523    .text:0000000000000260 .L0 
     /tmp/ccBGIdeY.s:524    .text:0000000000000260 .L0 
     /tmp/ccBGIdeY.s:527    .text:0000000000000264 .L0 
     /tmp/ccBGIdeY.s:532    .text:0000000000000268 .L0 
     /tmp/ccBGIdeY.s:534    .text:0000000000000268 .L0 
     /tmp/ccBGIdeY.s:537    .text:0000000000000270 .L0 
     /tmp/ccBGIdeY.s:543    .text:0000000000000270 _Z10sem_signalP3SCB
     /tmp/ccBGIdeY.s:546    .text:0000000000000270 .L0 
     /tmp/ccBGIdeY.s:548    .text:0000000000000270 .L0 
     /tmp/ccBGIdeY.s:549    .text:0000000000000270 .L0 
     /tmp/ccBGIdeY.s:550    .text:0000000000000270 .L0 
     /tmp/ccBGIdeY.s:552    .text:0000000000000274 .L0 
GAS LISTING /tmp/ccBGIdeY.s 			page 22


     /tmp/ccBGIdeY.s:553    .text:0000000000000278 .L0 
     /tmp/ccBGIdeY.s:556    .text:0000000000000280 .L0 
     /tmp/ccBGIdeY.s:557    .text:0000000000000280 .L0 
     /tmp/ccBGIdeY.s:559    .text:0000000000000284 .L0 
     /tmp/ccBGIdeY.s:561    .text:0000000000000284 .L0 
   src/syscall_c.cpp:101    .text:0000000000000284 .L0 
     /tmp/ccBGIdeY.s:567    .text:0000000000000288 .L0 
     /tmp/ccBGIdeY.s:569    .text:0000000000000288 .L0 
     /tmp/ccBGIdeY.s:574    .text:0000000000000294 .L0 
     /tmp/ccBGIdeY.s:575    .text:0000000000000294 .L0 
     /tmp/ccBGIdeY.s:577    .text:0000000000000298 .L0 
     /tmp/ccBGIdeY.s:578    .text:000000000000029c .L0 
     /tmp/ccBGIdeY.s:580    .text:00000000000002a0 .L0 
     /tmp/ccBGIdeY.s:581    .text:00000000000002a0 .L0 
     /tmp/ccBGIdeY.s:583    .text:00000000000002a4 .L0 
     /tmp/ccBGIdeY.s:588    .text:00000000000002a8 .L0 
     /tmp/ccBGIdeY.s:591    .text:00000000000002ac .L0 
     /tmp/ccBGIdeY.s:592    .text:00000000000002b0 .L0 
     /tmp/ccBGIdeY.s:598    .text:00000000000002b0 _Z9sem_closeP3SCB
     /tmp/ccBGIdeY.s:601    .text:00000000000002b0 .L0 
     /tmp/ccBGIdeY.s:603    .text:00000000000002b0 .L0 
     /tmp/ccBGIdeY.s:604    .text:00000000000002b0 .L0 
     /tmp/ccBGIdeY.s:605    .text:00000000000002b0 .L0 
     /tmp/ccBGIdeY.s:607    .text:00000000000002b4 .L0 
     /tmp/ccBGIdeY.s:608    .text:00000000000002b8 .L0 
     /tmp/ccBGIdeY.s:611    .text:00000000000002c0 .L0 
     /tmp/ccBGIdeY.s:612    .text:00000000000002c0 .L0 
     /tmp/ccBGIdeY.s:614    .text:00000000000002c4 .L0 
     /tmp/ccBGIdeY.s:616    .text:00000000000002c4 .L0 
   src/syscall_c.cpp:112    .text:00000000000002c4 .L0 
     /tmp/ccBGIdeY.s:622    .text:00000000000002c8 .L0 
     /tmp/ccBGIdeY.s:624    .text:00000000000002c8 .L0 
     /tmp/ccBGIdeY.s:629    .text:00000000000002d4 .L0 
     /tmp/ccBGIdeY.s:630    .text:00000000000002d4 .L0 
     /tmp/ccBGIdeY.s:632    .text:00000000000002d8 .L0 
     /tmp/ccBGIdeY.s:633    .text:00000000000002dc .L0 
     /tmp/ccBGIdeY.s:635    .text:00000000000002e0 .L0 
     /tmp/ccBGIdeY.s:636    .text:00000000000002e0 .L0 
     /tmp/ccBGIdeY.s:638    .text:00000000000002e4 .L0 
     /tmp/ccBGIdeY.s:643    .text:00000000000002e8 .L0 
     /tmp/ccBGIdeY.s:646    .text:00000000000002ec .L0 
     /tmp/ccBGIdeY.s:647    .text:00000000000002f0 .L0 
     /tmp/ccBGIdeY.s:653    .text:00000000000002f0 _Z10time_sleepm
     /tmp/ccBGIdeY.s:656    .text:00000000000002f0 .L0 
     /tmp/ccBGIdeY.s:658    .text:00000000000002f0 .L0 
     /tmp/ccBGIdeY.s:659    .text:00000000000002f0 .L0 
     /tmp/ccBGIdeY.s:660    .text:00000000000002f0 .L0 
     /tmp/ccBGIdeY.s:662    .text:00000000000002f4 .L0 
     /tmp/ccBGIdeY.s:663    .text:00000000000002f8 .L0 
     /tmp/ccBGIdeY.s:666    .text:0000000000000300 .L0 
     /tmp/ccBGIdeY.s:667    .text:0000000000000300 .L0 
     /tmp/ccBGIdeY.s:669    .text:0000000000000304 .L0 
     /tmp/ccBGIdeY.s:671    .text:0000000000000304 .L0 
   src/syscall_c.cpp:121    .text:0000000000000304 .L0 
     /tmp/ccBGIdeY.s:677    .text:0000000000000308 .L0 
     /tmp/ccBGIdeY.s:679    .text:0000000000000308 .L0 
     /tmp/ccBGIdeY.s:684    .text:0000000000000314 .L0 
GAS LISTING /tmp/ccBGIdeY.s 			page 23


     /tmp/ccBGIdeY.s:685    .text:0000000000000314 .L0 
     /tmp/ccBGIdeY.s:688    .text:000000000000031c .L0 
     /tmp/ccBGIdeY.s:689    .text:000000000000031c .L0 
     /tmp/ccBGIdeY.s:691    .text:0000000000000320 .L0 
     /tmp/ccBGIdeY.s:692    .text:0000000000000324 .L0 
     /tmp/ccBGIdeY.s:694    .text:0000000000000328 .L0 
     /tmp/ccBGIdeY.s:695    .text:0000000000000328 .L0 
     /tmp/ccBGIdeY.s:697    .text:000000000000032c .L0 
     /tmp/ccBGIdeY.s:702    .text:0000000000000330 .L0 
     /tmp/ccBGIdeY.s:705    .text:0000000000000334 .L0 
     /tmp/ccBGIdeY.s:706    .text:0000000000000338 .L0 
     /tmp/ccBGIdeY.s:712    .text:0000000000000338 _Z4getcv
     /tmp/ccBGIdeY.s:715    .text:0000000000000338 .L0 
     /tmp/ccBGIdeY.s:716    .text:0000000000000338 .L0 
     /tmp/ccBGIdeY.s:717    .text:000000000000033c .L0 
     /tmp/ccBGIdeY.s:720    .text:0000000000000344 .L0 
     /tmp/ccBGIdeY.s:721    .text:0000000000000344 .L0 
     /tmp/ccBGIdeY.s:723    .text:0000000000000348 .L0 
     /tmp/ccBGIdeY.s:726    .text:0000000000000348 .L0 
     /tmp/ccBGIdeY.s:727    .text:0000000000000348 .L0 
     /tmp/ccBGIdeY.s:728    .text:0000000000000348 .L0 
     /tmp/ccBGIdeY.s:732    .text:0000000000000354 .L0 
     /tmp/ccBGIdeY.s:734    .text:000000000000035c .L0 
     /tmp/ccBGIdeY.s:736    .text:0000000000000360 .L0 
     /tmp/ccBGIdeY.s:737    .text:0000000000000360 .L0 
     /tmp/ccBGIdeY.s:739    .text:0000000000000364 .L0 
     /tmp/ccBGIdeY.s:741    .text:0000000000000368 .L0 
     /tmp/ccBGIdeY.s:747    .text:0000000000000368 _Z4putcc
     /tmp/ccBGIdeY.s:750    .text:0000000000000368 .L0 
     /tmp/ccBGIdeY.s:752    .text:0000000000000368 .L0 
     /tmp/ccBGIdeY.s:753    .text:000000000000036c .L0 
     /tmp/ccBGIdeY.s:756    .text:0000000000000374 .L0 
     /tmp/ccBGIdeY.s:757    .text:0000000000000374 .L0 
     /tmp/ccBGIdeY.s:759    .text:0000000000000378 .L0 
     /tmp/ccBGIdeY.s:762    .text:0000000000000378 .L0 
     /tmp/ccBGIdeY.s:763    .text:0000000000000378 .L0 
   src/syscall_c.cpp:136    .text:0000000000000378 .L0 
     /tmp/ccBGIdeY.s:769    .text:000000000000037c .L0 
     /tmp/ccBGIdeY.s:771    .text:000000000000037c .L0 
     /tmp/ccBGIdeY.s:776    .text:0000000000000388 .L0 
     /tmp/ccBGIdeY.s:777    .text:000000000000038c .L0 
     /tmp/ccBGIdeY.s:779    .text:0000000000000390 .L0 
     /tmp/ccBGIdeY.s:780    .text:0000000000000390 .L0 
     /tmp/ccBGIdeY.s:782    .text:0000000000000394 .L0 
     /tmp/ccBGIdeY.s:784    .text:0000000000000398 .L0 
     /tmp/ccBGIdeY.s:792    .text:0000000000000398 .L0 
     /tmp/ccBGIdeY.s:234    .text:00000000000000f4 .L9
     /tmp/ccBGIdeY.s:241    .text:00000000000000fc .L10
     /tmp/ccBGIdeY.s:222    .text:00000000000000e4 .L8
     /tmp/ccBGIdeY.s:469    .text:0000000000000220 .L22
     /tmp/ccBGIdeY.s:457    .text:0000000000000210 .L21
     /tmp/ccBGIdeY.s:531    .text:0000000000000268 .L26
     /tmp/ccBGIdeY.s:517    .text:0000000000000258 .L25
     /tmp/ccBGIdeY.s:586    .text:00000000000002a8 .L30
     /tmp/ccBGIdeY.s:641    .text:00000000000002e8 .L37
     /tmp/ccBGIdeY.s:700    .text:0000000000000330 .L44
     /tmp/ccBGIdeY.s:2319   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
GAS LISTING /tmp/ccBGIdeY.s 			page 24


     /tmp/ccBGIdeY.s:3870   .debug_str:000000000000082a .LASF155
     /tmp/ccBGIdeY.s:3758   .debug_str:00000000000004aa .LASF156
     /tmp/ccBGIdeY.s:3702   .debug_str:00000000000002d1 .LASF157
     /tmp/ccBGIdeY.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccBGIdeY.s:787    .text:0000000000000398 .Letext0
     /tmp/ccBGIdeY.s:3612   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccBGIdeY.s:3708   .debug_str:0000000000000305 .LASF0
     /tmp/ccBGIdeY.s:3736   .debug_str:00000000000003f1 .LASF1
     /tmp/ccBGIdeY.s:3814   .debug_str:0000000000000685 .LASF2
     /tmp/ccBGIdeY.s:3822   .debug_str:00000000000006cc .LASF4
     /tmp/ccBGIdeY.s:3720   .debug_str:0000000000000354 .LASF3
     /tmp/ccBGIdeY.s:3624   .debug_str:0000000000000039 .LASF5
     /tmp/ccBGIdeY.s:3790   .debug_str:00000000000005c8 .LASF6
     /tmp/ccBGIdeY.s:3780   .debug_str:0000000000000583 .LASF7
     /tmp/ccBGIdeY.s:3730   .debug_str:00000000000003cf .LASF8
     /tmp/ccBGIdeY.s:3684   .debug_str:000000000000023b .LASF9
     /tmp/ccBGIdeY.s:3690   .debug_str:000000000000027a .LASF10
     /tmp/ccBGIdeY.s:3646   .debug_str:00000000000000ea .LASF11
     /tmp/ccBGIdeY.s:3680   .debug_str:0000000000000220 .LASF12
     /tmp/ccBGIdeY.s:3650   .debug_str:00000000000000fe .LASF13
     /tmp/ccBGIdeY.s:3644   .debug_str:00000000000000da .LASF14
     /tmp/ccBGIdeY.s:3846   .debug_str:0000000000000788 .LASF15
     /tmp/ccBGIdeY.s:3672   .debug_str:00000000000001cd .LASF16
     /tmp/ccBGIdeY.s:3838   .debug_str:000000000000074e .LASF17
     /tmp/ccBGIdeY.s:3856   .debug_str:00000000000007c1 .LASF18
     /tmp/ccBGIdeY.s:3906   .debug_str:00000000000009f9 .LASF20
     /tmp/ccBGIdeY.s:3666   .debug_str:0000000000000179 .LASF19
     /tmp/ccBGIdeY.s:3882   .debug_str:0000000000000932 .LASF21
     /tmp/ccBGIdeY.s:3854   .debug_str:00000000000007b1 .LASF22
     /tmp/ccBGIdeY.s:3722   .debug_str:0000000000000366 .LASF23
     /tmp/ccBGIdeY.s:3678   .debug_str:0000000000000210 .LASF26
     /tmp/ccBGIdeY.s:3938   .debug_str:0000000000000af8 .LASF28
     /tmp/ccBGIdeY.s:3692   .debug_str:0000000000000288 .LASF24
     /tmp/ccBGIdeY.s:3742   .debug_str:0000000000000430 .LASF25
     /tmp/ccBGIdeY.s:3764   .debug_str:00000000000004dc .LASF27
     /tmp/ccBGIdeY.s:3934   .debug_str:0000000000000ad6 .LASF29
     /tmp/ccBGIdeY.s:3860   .debug_str:00000000000007d1 .LASF30
     /tmp/ccBGIdeY.s:3920   .debug_str:0000000000000a74 .LASF31
     /tmp/ccBGIdeY.s:3886   .debug_str:0000000000000972 .LASF32
     /tmp/ccBGIdeY.s:3872   .debug_str:00000000000008ee .LASF33
     /tmp/ccBGIdeY.s:3660   .debug_str:0000000000000155 .LASF34
     /tmp/ccBGIdeY.s:3818   .debug_str:00000000000006a6 .LASF35
     /tmp/ccBGIdeY.s:3638   .debug_str:00000000000000bc .LASF36
     /tmp/ccBGIdeY.s:3694   .debug_str:0000000000000296 .LASF37
     /tmp/ccBGIdeY.s:3930   .debug_str:0000000000000ab5 .LASF38
     /tmp/ccBGIdeY.s:3626   .debug_str:0000000000000040 .LASF39
     /tmp/ccBGIdeY.s:3834   .debug_str:0000000000000739 .LASF158
     /tmp/ccBGIdeY.s:3740   .debug_str:000000000000042a .LASF114
     /tmp/ccBGIdeY.s:3744   .debug_str:000000000000044a .LASF116
     /tmp/ccBGIdeY.s:3868   .debug_str:0000000000000822 .LASF107
     /tmp/ccBGIdeY.s:3734   .debug_str:00000000000003ec .LASF40
     /tmp/ccBGIdeY.s:3924   .debug_str:0000000000000a97 .LASF41
     /tmp/ccBGIdeY.s:3928   .debug_str:0000000000000aa8 .LASF42
     /tmp/ccBGIdeY.s:3674   .debug_str:00000000000001e3 .LASF43
     /tmp/ccBGIdeY.s:3616   .debug_str:0000000000000007 .LASF44
     /tmp/ccBGIdeY.s:3716   .debug_str:0000000000000335 .LASF75
     /tmp/ccBGIdeY.s:3700   .debug_str:00000000000002c6 .LASF159
GAS LISTING /tmp/ccBGIdeY.s 			page 25


     /tmp/ccBGIdeY.s:3636   .debug_str:00000000000000a6 .LASF160
     /tmp/ccBGIdeY.s:3654   .debug_str:0000000000000121 .LASF81
     /tmp/ccBGIdeY.s:3620   .debug_str:000000000000001f .LASF45
     /tmp/ccBGIdeY.s:3832   .debug_str:0000000000000733 .LASF46
     /tmp/ccBGIdeY.s:3902   .debug_str:00000000000009e1 .LASF47
     /tmp/ccBGIdeY.s:3732   .debug_str:00000000000003e2 .LASF48
     /tmp/ccBGIdeY.s:3926   .debug_str:0000000000000aa3 .LASF49
     /tmp/ccBGIdeY.s:3836   .debug_str:0000000000000745 .LASF50
     /tmp/ccBGIdeY.s:3774   .debug_str:000000000000055e .LASF51
     /tmp/ccBGIdeY.s:3748   .debug_str:0000000000000464 .LASF52
     /tmp/ccBGIdeY.s:3910   .debug_str:0000000000000a1e .LASF53
     /tmp/ccBGIdeY.s:3664   .debug_str:000000000000016b .LASF54
     /tmp/ccBGIdeY.s:3878   .debug_str:000000000000091e .LASF55
     /tmp/ccBGIdeY.s:3828   .debug_str:0000000000000719 .LASF109
     /tmp/ccBGIdeY.s:3662   .debug_str:0000000000000162 .LASF61
     /tmp/ccBGIdeY.s:3630   .debug_str:0000000000000075 .LASF63
     /tmp/ccBGIdeY.s:3710   .debug_str:0000000000000312 .LASF56
     /tmp/ccBGIdeY.s:3896   .debug_str:00000000000009a0 .LASF58
     /tmp/ccBGIdeY.s:3712   .debug_str:0000000000000321 .LASF57
     /tmp/ccBGIdeY.s:3824   .debug_str:00000000000006d3 .LASF59
     /tmp/ccBGIdeY.s:3746   .debug_str:000000000000045a .LASF60
     /tmp/ccBGIdeY.s:3796   .debug_str:00000000000005eb .LASF62
     /tmp/ccBGIdeY.s:3912   .debug_str:0000000000000a2b .LASF64
     /tmp/ccBGIdeY.s:3752   .debug_str:0000000000000494 .LASF65
     /tmp/ccBGIdeY.s:3642   .debug_str:00000000000000ce .LASF66
     /tmp/ccBGIdeY.s:3686   .debug_str:000000000000024b .LASF67
     /tmp/ccBGIdeY.s:3874   .debug_str:0000000000000907 .LASF68
     /tmp/ccBGIdeY.s:3904   .debug_str:00000000000009ea .LASF69
     /tmp/ccBGIdeY.s:3852   .debug_str:00000000000007aa .LASF70
     /tmp/ccBGIdeY.s:3726   .debug_str:00000000000003b0 .LASF71
     /tmp/ccBGIdeY.s:3622   .debug_str:000000000000002a .LASF72
     /tmp/ccBGIdeY.s:3898   .debug_str:00000000000009be .LASF73
     /tmp/ccBGIdeY.s:3862   .debug_str:00000000000007dc .LASF74
     /tmp/ccBGIdeY.s:3850   .debug_str:000000000000079d .LASF76
     /tmp/ccBGIdeY.s:3812   .debug_str:0000000000000675 .LASF77
     /tmp/ccBGIdeY.s:3916   .debug_str:0000000000000a4b .LASF78
     /tmp/ccBGIdeY.s:3820   .debug_str:00000000000006be .LASF79
     /tmp/ccBGIdeY.s:3668   .debug_str:000000000000018c .LASF80
     /tmp/ccBGIdeY.s:3794   .debug_str:00000000000005df .LASF82
     /tmp/ccBGIdeY.s:3706   .debug_str:00000000000002ff .LASF83
     /tmp/ccBGIdeY.s:3792   .debug_str:00000000000005cf .LASF84
     /tmp/ccBGIdeY.s:3618   .debug_str:0000000000000017 .LASF85
     /tmp/ccBGIdeY.s:3932   .debug_str:0000000000000ac4 .LASF86
     /tmp/ccBGIdeY.s:3842   .debug_str:0000000000000775 .LASF87
     /tmp/ccBGIdeY.s:3772   .debug_str:0000000000000559 .LASF88
     /tmp/ccBGIdeY.s:3704   .debug_str:00000000000002f6 .LASF89
     /tmp/ccBGIdeY.s:3892   .debug_str:000000000000098e .LASF90
     /tmp/ccBGIdeY.s:3640   .debug_str:00000000000000c8 .LASF91
     /tmp/ccBGIdeY.s:3778   .debug_str:0000000000000573 .LASF92
     /tmp/ccBGIdeY.s:3682   .debug_str:000000000000022f .LASF161
     /tmp/ccBGIdeY.s:3900   .debug_str:00000000000009d8 .LASF93
     /tmp/ccBGIdeY.s:3914   .debug_str:0000000000000a46 .LASF94
     /tmp/ccBGIdeY.s:3648   .debug_str:00000000000000f9 .LASF95
     /tmp/ccBGIdeY.s:3614   .debug_str:0000000000000000 .LASF96
     /tmp/ccBGIdeY.s:3808   .debug_str:000000000000063c .LASF97
     /tmp/ccBGIdeY.s:3724   .debug_str:0000000000000382 .LASF162
     /tmp/ccBGIdeY.s:3880   .debug_str:0000000000000928 .LASF98
GAS LISTING /tmp/ccBGIdeY.s 			page 26


     /tmp/ccBGIdeY.s:3884   .debug_str:0000000000000951 .LASF99
     /tmp/ccBGIdeY.s:3894   .debug_str:0000000000000997 .LASF100
     /tmp/ccBGIdeY.s:3766   .debug_str:00000000000004ea .LASF101
     /tmp/ccBGIdeY.s:3658   .debug_str:0000000000000148 .LASF102
     /tmp/ccBGIdeY.s:3770   .debug_str:0000000000000534 .LASF103
     /tmp/ccBGIdeY.s:3776   .debug_str:0000000000000566 .LASF104
     /tmp/ccBGIdeY.s:3750   .debug_str:000000000000046f .LASF105
     /tmp/ccBGIdeY.s:3632   .debug_str:0000000000000088 .LASF106
     /tmp/ccBGIdeY.s:3908   .debug_str:0000000000000a10 .LASF108
     /tmp/ccBGIdeY.s:3864   .debug_str:00000000000007e8 .LASF110
     /tmp/ccBGIdeY.s:3768   .debug_str:000000000000050b .LASF111
     /tmp/ccBGIdeY.s:3760   .debug_str:00000000000004bc .LASF112
     /tmp/ccBGIdeY.s:3826   .debug_str:00000000000006f1 .LASF113
     /tmp/ccBGIdeY.s:3718   .debug_str:0000000000000342 .LASF115
     /tmp/ccBGIdeY.s:3866   .debug_str:00000000000007f8 .LASF117
     /tmp/ccBGIdeY.s:3784   .debug_str:00000000000005a3 .LASF118
     /tmp/ccBGIdeY.s:3670   .debug_str:00000000000001a5 .LASF119
     /tmp/ccBGIdeY.s:3756   .debug_str:00000000000004a5 .LASF120
     /tmp/ccBGIdeY.s:3848   .debug_str:0000000000000794 .LASF121
     /tmp/ccBGIdeY.s:748    .text:0000000000000368 .LFB57
     /tmp/ccBGIdeY.s:785    .text:0000000000000398 .LFE57
     /tmp/ccBGIdeY.s:3207   .debug_loc:0000000000000000 .LLST19
     /tmp/ccBGIdeY.s:3888   .debug_str:0000000000000980 .LASF122
     /tmp/ccBGIdeY.s:774    .text:0000000000000388 .LVL75
     /tmp/ccBGIdeY.s:3858   .debug_str:00000000000007cc .LASF123
     /tmp/ccBGIdeY.s:3714   .debug_str:0000000000000330 .LASF124
     /tmp/ccBGIdeY.s:3890   .debug_str:0000000000000985 .LASF126
     /tmp/ccBGIdeY.s:713    .text:0000000000000338 .LFB56
     /tmp/ccBGIdeY.s:742    .text:0000000000000368 .LFE56
     /tmp/ccBGIdeY.s:730    .text:0000000000000354 .LVL71
     /tmp/ccBGIdeY.s:3810   .debug_str:000000000000066a .LASF125
     /tmp/ccBGIdeY.s:3788   .debug_str:00000000000005b8 .LASF127
     /tmp/ccBGIdeY.s:654    .text:00000000000002f0 .LFB55
     /tmp/ccBGIdeY.s:707    .text:0000000000000338 .LFE55
     /tmp/ccBGIdeY.s:3786   .debug_str:00000000000005b3 .LASF128
     /tmp/ccBGIdeY.s:3221   .debug_loc:0000000000000039 .LLST18
     /tmp/ccBGIdeY.s:682    .text:0000000000000314 .LVL66
     /tmp/ccBGIdeY.s:686    .text:000000000000031c .LVL67
     /tmp/ccBGIdeY.s:3798   .debug_str:00000000000005fb .LASF129
     /tmp/ccBGIdeY.s:3876   .debug_str:000000000000090c .LASF130
     /tmp/ccBGIdeY.s:599    .text:00000000000002b0 .LFB54
     /tmp/ccBGIdeY.s:648    .text:00000000000002f0 .LFE54
     /tmp/ccBGIdeY.s:3936   .debug_str:0000000000000af1 .LASF131
     /tmp/ccBGIdeY.s:3246   .debug_loc:000000000000009b .LLST17
     /tmp/ccBGIdeY.s:627    .text:00000000000002d4 .LVL61
     /tmp/ccBGIdeY.s:3698   .debug_str:00000000000002bb .LASF132
     /tmp/ccBGIdeY.s:3656   .debug_str:0000000000000134 .LASF133
     /tmp/ccBGIdeY.s:544    .text:0000000000000270 .LFB53
     /tmp/ccBGIdeY.s:593    .text:00000000000002b0 .LFE53
     /tmp/ccBGIdeY.s:3271   .debug_loc:00000000000000fd .LLST16
     /tmp/ccBGIdeY.s:572    .text:0000000000000294 .LVL56
     /tmp/ccBGIdeY.s:3830   .debug_str:000000000000072a .LASF134
     /tmp/ccBGIdeY.s:3762   .debug_str:00000000000004cb .LASF135
     /tmp/ccBGIdeY.s:482    .text:0000000000000228 .LFB52
     /tmp/ccBGIdeY.s:538    .text:0000000000000270 .LFE52
     /tmp/ccBGIdeY.s:3296   .debug_loc:000000000000015f .LLST15
     /tmp/ccBGIdeY.s:514    .text:0000000000000254 .LVL49
GAS LISTING /tmp/ccBGIdeY.s 			page 27


     /tmp/ccBGIdeY.s:3806   .debug_str:0000000000000633 .LASF136
     /tmp/ccBGIdeY.s:3804   .debug_str:0000000000000620 .LASF137
     /tmp/ccBGIdeY.s:417    .text:00000000000001e0 .LFB51
     /tmp/ccBGIdeY.s:476    .text:0000000000000228 .LFE51
     /tmp/ccBGIdeY.s:3327   .debug_loc:00000000000001e5 .LLST13
     /tmp/ccBGIdeY.s:3634   .debug_str:00000000000000a1 .LASF138
     /tmp/ccBGIdeY.s:3349   .debug_loc:0000000000000244 .LLST14
     /tmp/ccBGIdeY.s:448    .text:0000000000000204 .LVL42
     /tmp/ccBGIdeY.s:3782   .debug_str:0000000000000596 .LASF139
     /tmp/ccBGIdeY.s:3688   .debug_str:0000000000000263 .LASF140
     /tmp/ccBGIdeY.s:322    .text:0000000000000160 .LFB50
     /tmp/ccBGIdeY.s:359    .text:0000000000000190 .LFE50
     /tmp/ccBGIdeY.s:3363   .debug_loc:000000000000027d .LLST8
     /tmp/ccBGIdeY.s:348    .text:0000000000000180 .LVL32
     /tmp/ccBGIdeY.s:3754   .debug_str:0000000000000499 .LASF141
     /tmp/ccBGIdeY.s:3840   .debug_str:0000000000000764 .LASF142
     /tmp/ccBGIdeY.s:287    .text:0000000000000130 .LFB49
     /tmp/ccBGIdeY.s:316    .text:0000000000000160 .LFE49
     /tmp/ccBGIdeY.s:304    .text:000000000000014c .LVL28
     /tmp/ccBGIdeY.s:3800   .debug_str:0000000000000605 .LASF143
     /tmp/ccBGIdeY.s:3628   .debug_str:0000000000000060 .LASF144
     /tmp/ccBGIdeY.s:253    .text:0000000000000104 .LFB48
     /tmp/ccBGIdeY.s:281    .text:0000000000000130 .LFE48
     /tmp/ccBGIdeY.s:270    .text:0000000000000120 .LVL26
     /tmp/ccBGIdeY.s:3844   .debug_str:000000000000077a .LASF145
     /tmp/ccBGIdeY.s:3676   .debug_str:00000000000001ef .LASF146
     /tmp/ccBGIdeY.s:365    .text:0000000000000190 .LFB47
     /tmp/ccBGIdeY.s:411    .text:00000000000001e0 .LFE47
     /tmp/ccBGIdeY.s:3377   .debug_loc:00000000000002b6 .LLST9
     /tmp/ccBGIdeY.s:3922   .debug_str:0000000000000a8a .LASF147
     /tmp/ccBGIdeY.s:3395   .debug_loc:0000000000000302 .LLST10
     /tmp/ccBGIdeY.s:3409   .debug_loc:000000000000033b .LLST11
     /tmp/ccBGIdeY.s:3423   .debug_loc:0000000000000374 .LLST12
     /tmp/ccBGIdeY.s:385    .text:00000000000001b4 .LVL34
     /tmp/ccBGIdeY.s:392    .text:00000000000001c4 .LVL36
     /tmp/ccBGIdeY.s:3652   .debug_str:000000000000010e .LASF148
     /tmp/ccBGIdeY.s:3738   .debug_str:0000000000000404 .LASF149
     /tmp/ccBGIdeY.s:157    .text:0000000000000098 .LFB46
     /tmp/ccBGIdeY.s:247    .text:0000000000000104 .LFE46
     /tmp/ccBGIdeY.s:3430   .debug_loc:0000000000000397 .LLST4
     /tmp/ccBGIdeY.s:3459   .debug_loc:000000000000040c .LLST5
     /tmp/ccBGIdeY.s:3473   .debug_loc:0000000000000445 .LLST6
     /tmp/ccBGIdeY.s:3487   .debug_loc:000000000000047e .LLST7
     /tmp/ccBGIdeY.s:193    .text:00000000000000c0 .LVL17
     /tmp/ccBGIdeY.s:213    .text:00000000000000d8 .LVL19
     /tmp/ccBGIdeY.s:3918   .debug_str:0000000000000a66 .LASF150
     /tmp/ccBGIdeY.s:113    .text:0000000000000064 .LFB45
     /tmp/ccBGIdeY.s:151    .text:0000000000000098 .LFE45
     /tmp/ccBGIdeY.s:3802   .debug_str:0000000000000615 .LASF151
     /tmp/ccBGIdeY.s:3498   .debug_loc:00000000000004b4 .LLST3
     /tmp/ccBGIdeY.s:139    .text:0000000000000084 .LVL13
     /tmp/ccBGIdeY.s:3696   .debug_str:00000000000002ad .LASF152
     /tmp/ccBGIdeY.s:53     .text:0000000000000024 .LFB44
     /tmp/ccBGIdeY.s:107    .text:0000000000000064 .LFE44
     /tmp/ccBGIdeY.s:3512   .debug_loc:00000000000004ed .LLST1
     /tmp/ccBGIdeY.s:68     .text:0000000000000034 .LBB4
     /tmp/ccBGIdeY.s:83     .text:0000000000000044 .LBE4
GAS LISTING /tmp/ccBGIdeY.s 			page 28


     /tmp/ccBGIdeY.s:3563   .debug_loc:0000000000000578 .LLST2
     /tmp/ccBGIdeY.s:96     .text:0000000000000054 .LVL9
     /tmp/ccBGIdeY.s:3728   .debug_str:00000000000003c1 .LASF153
     /tmp/ccBGIdeY.s:3816   .debug_str:0000000000000693 .LASF154
     /tmp/ccBGIdeY.s:10     .text:0000000000000000 .LFB43
     /tmp/ccBGIdeY.s:47     .text:0000000000000024 .LFE43
     /tmp/ccBGIdeY.s:3577   .debug_loc:00000000000005b1 .LLST0
     /tmp/ccBGIdeY.s:751    .text:0000000000000368 .LVL72
     /tmp/ccBGIdeY.s:772    .text:0000000000000380 .LVL74
     /tmp/ccBGIdeY.s:657    .text:00000000000002f0 .LVL64
     /tmp/ccBGIdeY.s:680    .text:000000000000030c .LVL65
     /tmp/ccBGIdeY.s:699    .text:0000000000000330 .LVL68
     /tmp/ccBGIdeY.s:703    .text:0000000000000334 .LVL69
     /tmp/ccBGIdeY.s:602    .text:00000000000002b0 .LVL59
     /tmp/ccBGIdeY.s:625    .text:00000000000002cc .LVL60
     /tmp/ccBGIdeY.s:640    .text:00000000000002e8 .LVL62
     /tmp/ccBGIdeY.s:644    .text:00000000000002ec .LVL63
     /tmp/ccBGIdeY.s:547    .text:0000000000000270 .LVL54
     /tmp/ccBGIdeY.s:570    .text:000000000000028c .LVL55
     /tmp/ccBGIdeY.s:585    .text:00000000000002a8 .LVL57
     /tmp/ccBGIdeY.s:589    .text:00000000000002ac .LVL58
     /tmp/ccBGIdeY.s:485    .text:0000000000000228 .LVL46
     /tmp/ccBGIdeY.s:512    .text:000000000000024c .LVL48
     /tmp/ccBGIdeY.s:525    .text:0000000000000260 .LVL50
     /tmp/ccBGIdeY.s:528    .text:0000000000000264 .LVL51
     /tmp/ccBGIdeY.s:530    .text:0000000000000268 .LVL52
     /tmp/ccBGIdeY.s:535    .text:000000000000026c .LVL53
     /tmp/ccBGIdeY.s:420    .text:00000000000001e0 .LVL39
     /tmp/ccBGIdeY.s:446    .text:00000000000001fc .LVL41
     /tmp/ccBGIdeY.s:456    .text:0000000000000210 .LVL43
     /tmp/ccBGIdeY.s:468    .text:0000000000000220 .LVL44
     /tmp/ccBGIdeY.s:473    .text:0000000000000224 .LVL45
     /tmp/ccBGIdeY.s:325    .text:0000000000000160 .LVL29
     /tmp/ccBGIdeY.s:346    .text:0000000000000178 .LVL31
     /tmp/ccBGIdeY.s:368    .text:0000000000000190 .LVL33
     /tmp/ccBGIdeY.s:406    .text:00000000000001d8 .LVL38
     /tmp/ccBGIdeY.s:387    .text:00000000000001b8 .LVL35
     /tmp/ccBGIdeY.s:403    .text:00000000000001d4 .LVL37
     /tmp/ccBGIdeY.s:160    .text:0000000000000098 .LVL14
     /tmp/ccBGIdeY.s:191    .text:00000000000000b8 .LVL16
     /tmp/ccBGIdeY.s:221    .text:00000000000000e4 .LVL20
     /tmp/ccBGIdeY.s:233    .text:00000000000000f4 .LVL21
     /tmp/ccBGIdeY.s:240    .text:00000000000000fc .LVL23
     /tmp/ccBGIdeY.s:244    .text:0000000000000100 .LVL24
     /tmp/ccBGIdeY.s:211    .text:00000000000000d0 .LVL18
     /tmp/ccBGIdeY.s:238    .text:00000000000000f8 .LVL22
     /tmp/ccBGIdeY.s:116    .text:0000000000000064 .LVL10
     /tmp/ccBGIdeY.s:137    .text:000000000000007c .LVL12
     /tmp/ccBGIdeY.s:56     .text:0000000000000024 .LVL4
     /tmp/ccBGIdeY.s:76     .text:000000000000003c .LVL6
     /tmp/ccBGIdeY.s:81     .text:0000000000000044 .LVL7
     /tmp/ccBGIdeY.s:94     .text:000000000000004c .LVL8
     /tmp/ccBGIdeY.s:66     .text:0000000000000034 .LVL5
     /tmp/ccBGIdeY.s:14     .text:0000000000000000 .LVL0
     /tmp/ccBGIdeY.s:34     .text:0000000000000018 .LVL1
     /tmp/ccBGIdeY.s:41     .text:000000000000001c .LVL2
     /tmp/ccBGIdeY.s:44     .text:0000000000000020 .LVL3
GAS LISTING /tmp/ccBGIdeY.s 			page 29


     /tmp/ccBGIdeY.s:793    .debug_info:0000000000000000 .Ldebug_info0

NO UNDEFINED SYMBOLS

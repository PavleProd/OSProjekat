GAS LISTING /tmp/ccL43kNP.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z11idleProcessv
   9              	_Z11idleProcessv:
  10              	.LFB41:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../h/hw.h"
   2:src/main.cpp  **** #include "../h/console.h"
   3:src/main.cpp  **** #include "../h/MemoryAllocator.h"
   4:src/main.cpp  **** #include "../h/syscall_c.h"
   5:src/main.cpp  **** #include "../h/print.h"
   6:src/main.cpp  **** #include "../h/PCB.h"
   7:src/main.cpp  **** #include "../h/kernel.h"
   8:src/main.cpp  **** #include "../h/syscall_cpp.h"
   9:src/main.cpp  **** #include "../h/SCB.h"
  10:src/main.cpp  **** 
  11:src/main.cpp  **** bool finished[2];
  12:src/main.cpp  **** 
  13:src/main.cpp  **** void sleepyRun(void *arg) {
  14:src/main.cpp  ****     time_t sleep_time = *((time_t *) arg);
  15:src/main.cpp  ****     int i = 6;
  16:src/main.cpp  ****     while (--i > 0) {
  17:src/main.cpp  **** 
  18:src/main.cpp  ****         printString("Hello ");
  19:src/main.cpp  ****         printInteger(sleep_time);
  20:src/main.cpp  ****         printString(" !\n");
  21:src/main.cpp  ****         time_sleep(sleep_time);
  22:src/main.cpp  ****     }
  23:src/main.cpp  ****     finished[sleep_time/10-1] = true;
  24:src/main.cpp  **** }
  25:src/main.cpp  **** 
  26:src/main.cpp  **** 
  27:src/main.cpp  **** // Kernel inicijalizaccija
  28:src/main.cpp  **** void idleProcess() {
  12              		.loc 1 28 20
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  20              	.L2:
  29:src/main.cpp  ****     while(true) {}
  21              		.loc 1 29 5 discriminator 1
  22              		.loc 1 29 5 discriminator 1
  23 000c 6F000000 		j	.L2
  24              		.cfi_endproc
  25              	.LFE41:
  27              		.section	.rodata.str1.8,"aMS",@progbits,1
  28              		.align	3
  29              	.LC0:
  30 0000 48656C6C 		.string	"Hello "
GAS LISTING /tmp/ccL43kNP.s 			page 2


  30      6F2000
  31 0007 00       		.align	3
  32              	.LC1:
  33 0008 20210A00 		.string	" !\n"
  34              		.text
  35              		.align	2
  36              		.globl	_Z9sleepyRunPv
  38              	_Z9sleepyRunPv:
  39              	.LFB40:
  13:src/main.cpp  ****     time_t sleep_time = *((time_t *) arg);
  40              		.loc 1 13 27
  41              		.cfi_startproc
  42              	.LVL0:
  43 0010 130101FE 		addi	sp,sp,-32
  44              		.cfi_def_cfa_offset 32
  45 0014 233C1100 		sd	ra,24(sp)
  46 0018 23388100 		sd	s0,16(sp)
  47 001c 23349100 		sd	s1,8(sp)
  48 0020 23302101 		sd	s2,0(sp)
  49              		.cfi_offset 1, -8
  50              		.cfi_offset 8, -16
  51              		.cfi_offset 9, -24
  52              		.cfi_offset 18, -32
  53 0024 13040102 		addi	s0,sp,32
  54              		.cfi_def_cfa 8, 0
  14:src/main.cpp  ****     int i = 6;
  55              		.loc 1 14 5
  14:src/main.cpp  ****     int i = 6;
  56              		.loc 1 14 12 is_stmt 0
  57 0028 03390500 		ld	s2,0(a0)
  58              	.LVL1:
  15:src/main.cpp  ****     while (--i > 0) {
  59              		.loc 1 15 5 is_stmt 1
  15:src/main.cpp  ****     while (--i > 0) {
  60              		.loc 1 15 9 is_stmt 0
  61 002c 93046000 		li	s1,6
  62              	.LVL2:
  63              	.L6:
  16:src/main.cpp  **** 
  64              		.loc 1 16 5 is_stmt 1
  16:src/main.cpp  **** 
  65              		.loc 1 16 16
  66 0030 9B84F4FF 		addiw	s1,s1,-1
  67              	.LVL3:
  68 0034 63509004 		blez	s1,.L5
  18:src/main.cpp  ****         printInteger(sleep_time);
  69              		.loc 1 18 9
  18:src/main.cpp  ****         printInteger(sleep_time);
  70              		.loc 1 18 20 is_stmt 0
  71 0038 17050000 		lla	a0,.LC0
  71      13050500 
  72 0040 97000000 		call	_Z11printStringPKc@plt
  72      E7800000 
  73              	.LVL4:
  19:src/main.cpp  ****         printString(" !\n");
  74              		.loc 1 19 9 is_stmt 1
  19:src/main.cpp  ****         printString(" !\n");
GAS LISTING /tmp/ccL43kNP.s 			page 3


  75              		.loc 1 19 21 is_stmt 0
  76 0048 13050900 		mv	a0,s2
  77 004c 97000000 		call	_Z12printIntegerm@plt
  77      E7800000 
  78              	.LVL5:
  20:src/main.cpp  ****         time_sleep(sleep_time);
  79              		.loc 1 20 9 is_stmt 1
  20:src/main.cpp  ****         time_sleep(sleep_time);
  80              		.loc 1 20 20 is_stmt 0
  81 0054 17050000 		lla	a0,.LC1
  81      13050500 
  82 005c 97000000 		call	_Z11printStringPKc@plt
  82      E7800000 
  83              	.LVL6:
  21:src/main.cpp  ****     }
  84              		.loc 1 21 9 is_stmt 1
  21:src/main.cpp  ****     }
  85              		.loc 1 21 19 is_stmt 0
  86 0064 13050900 		mv	a0,s2
  87 0068 97000000 		call	_Z10time_sleepm@plt
  87      E7800000 
  88              	.LVL7:
  16:src/main.cpp  **** 
  89              		.loc 1 16 5
  90 0070 6FF01FFC 		j	.L6
  91              	.L5:
  23:src/main.cpp  **** }
  92              		.loc 1 23 5 is_stmt 1
  23:src/main.cpp  **** }
  93              		.loc 1 23 24 is_stmt 0
  94 0074 9307A000 		li	a5,10
  95 0078 3359F902 		divu	s2,s2,a5
  96              	.LVL8:
  23:src/main.cpp  **** }
  97              		.loc 1 23 27
  98 007c 1309F9FF 		addi	s2,s2,-1
  23:src/main.cpp  **** }
  99              		.loc 1 23 31
 100 0080 97070000 		lla	a5,.LANCHOR0
 100      93870700 
 101 0088 33892701 		add	s2,a5,s2
 102 008c 93071000 		li	a5,1
 103 0090 2300F900 		sb	a5,0(s2)
  24:src/main.cpp  **** 
 104              		.loc 1 24 1
 105 0094 83308101 		ld	ra,24(sp)
 106              		.cfi_restore 1
 107 0098 03340101 		ld	s0,16(sp)
 108              		.cfi_restore 8
 109              		.cfi_def_cfa 2, 32
 110 009c 83348100 		ld	s1,8(sp)
 111              		.cfi_restore 9
 112 00a0 03390100 		ld	s2,0(sp)
 113              		.cfi_restore 18
 114 00a4 13010102 		addi	sp,sp,32
 115              		.cfi_def_cfa_offset 0
 116 00a8 67800000 		jr	ra
GAS LISTING /tmp/ccL43kNP.s 			page 4


 117              		.cfi_endproc
 118              	.LFE40:
 120              		.align	2
 121              		.globl	main
 123              	main:
 124              	.LFB42:
  30:src/main.cpp  **** }
  31:src/main.cpp  **** extern "C" void interrupt();
  32:src/main.cpp  **** // ------------
  33:src/main.cpp  **** int main() {
 125              		.loc 1 33 12 is_stmt 1
 126              		.cfi_startproc
 127 00ac 130101FC 		addi	sp,sp,-64
 128              		.cfi_def_cfa_offset 64
 129 00b0 233C1102 		sd	ra,56(sp)
 130 00b4 23388102 		sd	s0,48(sp)
 131 00b8 23349102 		sd	s1,40(sp)
 132              		.cfi_offset 1, -8
 133              		.cfi_offset 8, -16
 134              		.cfi_offset 9, -24
 135 00bc 13040104 		addi	s0,sp,64
 136              		.cfi_def_cfa 8, 0
  34:src/main.cpp  ****     // Kernel inicijalizacija
  35:src/main.cpp  ****     asm volatile("csrw stvec, %0" : : "r" (&interrupt));
 137              		.loc 1 35 5
 138              		.loc 1 35 56 is_stmt 0
 139 00c0 97070000 		la	a5,interrupt
 139      83B70700 
 140              	#APP
 141              	# 35 "src/main.cpp" 1
  36              	    PCB* main = PCB::createProccess(nullptr, nullptr); // main
 142              		csrw stvec, a5
 143              	# 0 "" 2
 144              		.loc 1 36 5 is_stmt 1
 145              		.loc 1 36 36 is_stmt 0
 146              	#NO_APP
 147 00cc 93050000 		li	a1,0
 148 00d0 13050000 		li	a0,0
 149 00d4 97000000 		call	_ZN3PCB14createProccessEPFvvEPv@plt
 149      E7800000 
 150              	.LVL9:
  37:src/main.cpp  ****     PCB::running = main;
 151              		.loc 1 37 5 is_stmt 1
 152              		.loc 1 37 18 is_stmt 0
 153 00dc 97070000 		la	a5,_ZN3PCB7runningE
 153      83B70700 
 154 00e4 23B0A700 		sd	a0,0(a5)
  38:src/main.cpp  ****     Scheduler::idleProcess = PCB::createProccess(idleProcess, nullptr);
 155              		.loc 1 38 5 is_stmt 1
 156              		.loc 1 38 49 is_stmt 0
 157 00e8 93050000 		li	a1,0
 158 00ec 17050000 		lla	a0,_Z11idleProcessv
 158      13050500 
 159              	.LVL10:
 160 00f4 97000000 		call	_ZN3PCB14createProccessEPFvvEPv@plt
 160      E7800000 
 161              	.LVL11:
GAS LISTING /tmp/ccL43kNP.s 			page 5


 162              		.loc 1 38 28
 163 00fc 97070000 		la	a5,_ZN9Scheduler11idleProcessE
 163      83B70700 
 164 0104 23B0A700 		sd	a0,0(a5)
  39:src/main.cpp  ****     Kernel::ms_sstatus(Kernel::SSTATUS_SIE); // dozvoljavaju se prekidi
 165              		.loc 1 39 5 is_stmt 1
 166              	.LVL12:
 167              	.LBB5:
 168              	.LBB6:
 169              		.file 2 "src/../h/kernel.h"
   1:src/../h/kernel.h **** #ifndef KERNEL_H
   2:src/../h/kernel.h **** #define KERNEL_H
   3:src/../h/kernel.h **** 
   4:src/../h/kernel.h **** #include "hw.h"
   5:src/../h/kernel.h **** 
   6:src/../h/kernel.h **** class Kernel {
   7:src/../h/kernel.h **** public:
   8:src/../h/kernel.h **** 
   9:src/../h/kernel.h ****     // postavlja code u registar a0
  10:src/../h/kernel.h ****     static size_t setCode(size_t code) {
  11:src/../h/kernel.h ****         return code;
  12:src/../h/kernel.h ****     }
  13:src/../h/kernel.h **** 
  14:src/../h/kernel.h ****     // kodovi po kojima se prepoznaju sistemski pozivi
  15:src/../h/kernel.h ****     enum sysCallCodes {
  16:src/../h/kernel.h ****         mem_alloc = 0x01,
  17:src/../h/kernel.h ****         mem_free = 0x02,
  18:src/../h/kernel.h ****         thread_create = 0x11,
  19:src/../h/kernel.h ****         thread_exit = 0x12,
  20:src/../h/kernel.h ****         thread_dispatch = 0x13,
  21:src/../h/kernel.h ****         thread_start = 0x14,
  22:src/../h/kernel.h ****         sem_open = 0x21,
  23:src/../h/kernel.h ****         sem_close = 0x22,
  24:src/../h/kernel.h ****         sem_wait = 0x23,
  25:src/../h/kernel.h ****         sem_signal = 0x24,
  26:src/../h/kernel.h ****         time_sleep = 0x31,
  27:src/../h/kernel.h ****         getc = 0x41,
  28:src/../h/kernel.h ****         putc = 0x42
  29:src/../h/kernel.h ****     };
  30:src/../h/kernel.h **** 
  31:src/../h/kernel.h ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  32:src/../h/kernel.h ****     static void popSppSpie();
  33:src/../h/kernel.h **** 
  34:src/../h/kernel.h ****     // cita registar scause (uzrok nastanka prekida)
  35:src/../h/kernel.h ****     static size_t r_scause() {
  36:src/../h/kernel.h ****         size_t volatile scause;
  37:src/../h/kernel.h ****         __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  38:src/../h/kernel.h ****         return scause;
  39:src/../h/kernel.h ****     }
  40:src/../h/kernel.h **** 
  41:src/../h/kernel.h ****     // upisuje u registar scause (uzrok nastanka prekida)
  42:src/../h/kernel.h ****     static void w_scause(size_t scause) {
  43:src/../h/kernel.h ****         __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  44:src/../h/kernel.h ****     }
  45:src/../h/kernel.h **** 
  46:src/../h/kernel.h ****     // cita registar sepc
  47:src/../h/kernel.h ****     static size_t r_sepc() {
GAS LISTING /tmp/ccL43kNP.s 			page 6


  48:src/../h/kernel.h ****         size_t volatile sepc;
  49:src/../h/kernel.h ****         __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
  50:src/../h/kernel.h ****         return sepc;
  51:src/../h/kernel.h ****     }
  52:src/../h/kernel.h **** 
  53:src/../h/kernel.h ****     // upisuje u registar sepc
  54:src/../h/kernel.h ****     static void w_sepc(size_t sepc) {
  55:src/../h/kernel.h ****         __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
  56:src/../h/kernel.h ****     }
  57:src/../h/kernel.h **** 
  58:src/../h/kernel.h ****     // read register stvec
  59:src/../h/kernel.h ****     static size_t r_stvec() {
  60:src/../h/kernel.h ****         size_t volatile stvec;
  61:src/../h/kernel.h ****         __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
  62:src/../h/kernel.h ****         return stvec;
  63:src/../h/kernel.h ****     }
  64:src/../h/kernel.h **** 
  65:src/../h/kernel.h ****     // write register stvec
  66:src/../h/kernel.h ****     static void w_stvec(size_t stvec) {
  67:src/../h/kernel.h ****         __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  68:src/../h/kernel.h ****     }
  69:src/../h/kernel.h **** 
  70:src/../h/kernel.h ****     // read register stval
  71:src/../h/kernel.h ****     static size_t r_stval() {
  72:src/../h/kernel.h ****         size_t volatile stval;
  73:src/../h/kernel.h ****         __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
  74:src/../h/kernel.h ****         return stval;
  75:src/../h/kernel.h ****     }
  76:src/../h/kernel.h **** 
  77:src/../h/kernel.h ****     // write register stval
  78:src/../h/kernel.h ****     static void w_stval(size_t stval) {
  79:src/../h/kernel.h ****         __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
  80:src/../h/kernel.h ****     }
  81:src/../h/kernel.h **** 
  82:src/../h/kernel.h ****     enum BitMaskSip
  83:src/../h/kernel.h ****     {
  84:src/../h/kernel.h ****         SIP_SSIE = (1 << 1), // da li su dozvoljeni softverski prekidi
  85:src/../h/kernel.h ****         SIP_SEIE = (1 << 9), // da li su dozvoljeni spoljasnji hardverski prekidi
  86:src/../h/kernel.h ****     };
  87:src/../h/kernel.h **** 
  88:src/../h/kernel.h ****     // postavljanje odredjenih bitova (BitMaskSip) u registar sip
  89:src/../h/kernel.h ****     static void ms_sip(size_t mask) {
  90:src/../h/kernel.h ****         __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
  91:src/../h/kernel.h ****     }
  92:src/../h/kernel.h **** 
  93:src/../h/kernel.h ****     // brisanje odredjenih bitova (BitMaskSip) iz registra sip
  94:src/../h/kernel.h ****     static void mc_sip(size_t mask) {
  95:src/../h/kernel.h ****         __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
  96:src/../h/kernel.h ****     }
  97:src/../h/kernel.h **** 
  98:src/../h/kernel.h ****     // citanje iz registra sip
  99:src/../h/kernel.h ****     static size_t r_sip() {
 100:src/../h/kernel.h ****         size_t volatile sip;
 101:src/../h/kernel.h ****         __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 102:src/../h/kernel.h ****         return sip;
 103:src/../h/kernel.h ****     }
 104:src/../h/kernel.h **** 
GAS LISTING /tmp/ccL43kNP.s 			page 7


 105:src/../h/kernel.h ****     // upis u registar sip
 106:src/../h/kernel.h ****     static void w_sip(size_t sip) {
 107:src/../h/kernel.h ****         __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 108:src/../h/kernel.h ****     }
 109:src/../h/kernel.h **** 
 110:src/../h/kernel.h ****     enum BitMaskSstatus
 111:src/../h/kernel.h ****     {
 112:src/../h/kernel.h ****         SSTATUS_SIE = (1 << 1),
 113:src/../h/kernel.h ****         SSTATUS_SPIE = (1 << 5),
 114:src/../h/kernel.h ****         SSTATUS_SPP = (1 << 8),
 115:src/../h/kernel.h ****     };
 116:src/../h/kernel.h **** 
 117:src/../h/kernel.h ****     // mask set register sstatus
 118:src/../h/kernel.h ****     static void ms_sstatus(size_t mask) {
 119:src/../h/kernel.h ****         __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 170              		.loc 2 119 9
 171              		.loc 2 119 72 is_stmt 0
 172 0108 93072000 		li	a5,2
 173              	#APP
 174              	# 119 "src/../h/kernel.h" 1
 120              	    }
 175              		csrs sstatus, a5
 176              	# 0 "" 2
 177              	.LVL13:
 178              	#NO_APP
 179              	.LBE6:
 180              	.LBE5:
  40:src/main.cpp  ****     // ----
  41:src/main.cpp  **** 
  42:src/main.cpp  ****     const int sleepy_thread_count = 2;
 181              		.loc 1 42 5 is_stmt 1
  43:src/main.cpp  ****     time_t sleep_times[sleepy_thread_count] = {10, 20};
 182              		.loc 1 43 5
 183              		.loc 1 43 12 is_stmt 0
 184 0110 9307A000 		li	a5,10
 185 0114 2338F4FC 		sd	a5,-48(s0)
 186 0118 93074001 		li	a5,20
 187 011c 233CF4FC 		sd	a5,-40(s0)
  44:src/main.cpp  ****     thread_t sleepyThread[sleepy_thread_count];
 188              		.loc 1 44 5 is_stmt 1
  45:src/main.cpp  **** 
  46:src/main.cpp  ****     for (int i = 0; i < sleepy_thread_count; i++) {
 189              		.loc 1 46 5
 190              	.LVL14:
 191              	.LBB7:
 192              		.loc 1 46 14 is_stmt 0
 193 0120 93040000 		li	s1,0
 194 0124 6F00C002 		j	.L10
 195              	.LVL15:
 196              	.L13:
  47:src/main.cpp  ****         thread_create(&sleepyThread[i], sleepyRun, sleep_times + i);
 197              		.loc 1 47 9 is_stmt 1
 198              		.loc 1 47 64 is_stmt 0
 199 0128 93973400 		slli	a5,s1,3
 200              		.loc 1 47 22
 201 012c 130604FD 		addi	a2,s0,-48
 202 0130 3306F600 		add	a2,a2,a5
GAS LISTING /tmp/ccL43kNP.s 			page 8


 203 0134 97050000 		lla	a1,_Z9sleepyRunPv
 203      93850500 
 204 013c 130504FC 		addi	a0,s0,-64
 205 0140 3305F500 		add	a0,a0,a5
 206 0144 97000000 		call	_Z13thread_createPP3PCBPFvPvES2_@plt
 206      E7800000 
 207              	.LVL16:
  46:src/main.cpp  ****         thread_create(&sleepyThread[i], sleepyRun, sleep_times + i);
 208              		.loc 1 46 5 is_stmt 1
 209 014c 9B841400 		addiw	s1,s1,1
 210              	.LVL17:
 211              	.L10:
  46:src/main.cpp  ****         thread_create(&sleepyThread[i], sleepyRun, sleep_times + i);
 212              		.loc 1 46 23 discriminator 1
 213 0150 93071000 		li	a5,1
 214 0154 E3DA97FC 		ble	s1,a5,.L13
 215              	.L11:
 216              	.LBE7:
  48:src/main.cpp  ****     }
  49:src/main.cpp  **** 
  50:src/main.cpp  ****     while (!(finished[0] && finished[1])) {}
 217              		.loc 1 50 5
 218              		.loc 1 50 12
 219              		.loc 1 50 24 is_stmt 0
 220 0158 97070000 		lbu	a5,.LANCHOR0
 220      83C70700 
 221              		.loc 1 50 12
 222 0160 E38C07FE 		beqz	a5,.L11
 223              		.loc 1 50 39 discriminator 1
 224 0164 97070000 		lbu	a5,.LANCHOR0+1
 224      83C70700 
 225              		.loc 1 50 12 discriminator 1
 226 016c E38607FE 		beqz	a5,.L11
  51:src/main.cpp  **** 
  52:src/main.cpp  ****     return 0;
 227              		.loc 1 52 5 is_stmt 1
  53:src/main.cpp  **** }...
 228              		.loc 1 53 1 is_stmt 0
 229 0170 13050000 		li	a0,0
 230 0174 83308103 		ld	ra,56(sp)
 231              		.cfi_restore 1
 232 0178 03340103 		ld	s0,48(sp)
 233              		.cfi_restore 8
 234              		.cfi_def_cfa 2, 64
 235 017c 83348102 		ld	s1,40(sp)
 236              		.cfi_restore 9
 237              	.LVL18:
 238 0180 13010104 		addi	sp,sp,64
 239              		.cfi_def_cfa_offset 0
 240 0184 67800000 		jr	ra
 241              		.cfi_endproc
 242              	.LFE42:
 244              		.globl	finished
 245              		.bss
 246              		.align	3
 247              		.set	.LANCHOR0,. + 0
 250              	finished:
GAS LISTING /tmp/ccL43kNP.s 			page 9


 251 0000 0000     		.zero	2
 252              		.text
 253              	.Letext0:
 254              		.file 3 "src/../h/hw.h"
 255              		.file 4 "src/../h/syscall_c.h"
 256              		.file 5 "src/../h/PCB.h"
 257              		.file 6 "src/../h/print.h"
GAS LISTING /tmp/ccL43kNP.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccL43kNP.s:9      .text:0000000000000000 _Z11idleProcessv
     /tmp/ccL43kNP.s:13     .text:0000000000000000 .L0 
     /tmp/ccL43kNP.s:14     .text:0000000000000000 .L0 
     /tmp/ccL43kNP.s:15     .text:0000000000000004 .L0 
     /tmp/ccL43kNP.s:17     .text:0000000000000008 .L0 
     /tmp/ccL43kNP.s:19     .text:000000000000000c .L0 
     /tmp/ccL43kNP.s:22     .text:000000000000000c .L0 
     /tmp/ccL43kNP.s:23     .text:000000000000000c .L0 
     /tmp/ccL43kNP.s:24     .text:0000000000000010 .L0 
     /tmp/ccL43kNP.s:38     .text:0000000000000010 _Z9sleepyRunPv
     /tmp/ccL43kNP.s:41     .text:0000000000000010 .L0 
     /tmp/ccL43kNP.s:43     .text:0000000000000010 .L0 
     /tmp/ccL43kNP.s:44     .text:0000000000000014 .L0 
     /tmp/ccL43kNP.s:49     .text:0000000000000024 .L0 
     /tmp/ccL43kNP.s:50     .text:0000000000000024 .L0 
     /tmp/ccL43kNP.s:51     .text:0000000000000024 .L0 
     /tmp/ccL43kNP.s:52     .text:0000000000000024 .L0 
     /tmp/ccL43kNP.s:54     .text:0000000000000028 .L0 
     /tmp/ccL43kNP.s:56     .text:0000000000000028 .L0 
     /tmp/ccL43kNP.s:57     .text:0000000000000028 .L0 
     /tmp/ccL43kNP.s:60     .text:000000000000002c .L0 
     /tmp/ccL43kNP.s:61     .text:000000000000002c .L0 
     /tmp/ccL43kNP.s:65     .text:0000000000000030 .L0 
     /tmp/ccL43kNP.s:66     .text:0000000000000030 .L0 
     /tmp/ccL43kNP.s:70     .text:0000000000000038 .L0 
     /tmp/ccL43kNP.s:71     .text:0000000000000038 .L0 
     /tmp/ccL43kNP.s:75     .text:0000000000000048 .L0 
     /tmp/ccL43kNP.s:76     .text:0000000000000048 .L0 
     /tmp/ccL43kNP.s:80     .text:0000000000000054 .L0 
     /tmp/ccL43kNP.s:81     .text:0000000000000054 .L0 
     /tmp/ccL43kNP.s:85     .text:0000000000000064 .L0 
     /tmp/ccL43kNP.s:86     .text:0000000000000064 .L0 
     /tmp/ccL43kNP.s:90     .text:0000000000000070 .L0 
     /tmp/ccL43kNP.s:93     .text:0000000000000074 .L0 
     /tmp/ccL43kNP.s:94     .text:0000000000000074 .L0 
     /tmp/ccL43kNP.s:98     .text:000000000000007c .L0 
     /tmp/ccL43kNP.s:100    .text:0000000000000080 .L0 
     /tmp/ccL43kNP.s:105    .text:0000000000000094 .L0 
     /tmp/ccL43kNP.s:106    .text:0000000000000098 .L0 
     /tmp/ccL43kNP.s:108    .text:000000000000009c .L0 
     /tmp/ccL43kNP.s:109    .text:000000000000009c .L0 
     /tmp/ccL43kNP.s:111    .text:00000000000000a0 .L0 
     /tmp/ccL43kNP.s:113    .text:00000000000000a4 .L0 
     /tmp/ccL43kNP.s:115    .text:00000000000000a8 .L0 
     /tmp/ccL43kNP.s:117    .text:00000000000000ac .L0 
     /tmp/ccL43kNP.s:123    .text:00000000000000ac main
     /tmp/ccL43kNP.s:126    .text:00000000000000ac .L0 
     /tmp/ccL43kNP.s:127    .text:00000000000000ac .L0 
     /tmp/ccL43kNP.s:128    .text:00000000000000b0 .L0 
     /tmp/ccL43kNP.s:132    .text:00000000000000bc .L0 
     /tmp/ccL43kNP.s:133    .text:00000000000000bc .L0 
     /tmp/ccL43kNP.s:134    .text:00000000000000bc .L0 
     /tmp/ccL43kNP.s:136    .text:00000000000000c0 .L0 
     /tmp/ccL43kNP.s:138    .text:00000000000000c0 .L0 
     /tmp/ccL43kNP.s:139    .text:00000000000000c0 .L0 
GAS LISTING /tmp/ccL43kNP.s 			page 11


     /tmp/ccL43kNP.s:145    .text:00000000000000cc .L0 
     /tmp/ccL43kNP.s:147    .text:00000000000000cc .L0 
     /tmp/ccL43kNP.s:152    .text:00000000000000dc .L0 
     /tmp/ccL43kNP.s:153    .text:00000000000000dc .L0 
     /tmp/ccL43kNP.s:156    .text:00000000000000e8 .L0 
     /tmp/ccL43kNP.s:157    .text:00000000000000e8 .L0 
     /tmp/ccL43kNP.s:163    .text:00000000000000fc .L0 
     /tmp/ccL43kNP.s:170    .text:0000000000000108 .L0 
     /tmp/ccL43kNP.s:171    .text:0000000000000108 .L0 
     /tmp/ccL43kNP.s:172    .text:0000000000000108 .L0 
     /tmp/ccL43kNP.s:182    .text:0000000000000110 .L0 
     /tmp/ccL43kNP.s:183    .text:0000000000000110 .L0 
     /tmp/ccL43kNP.s:184    .text:0000000000000110 .L0 
     /tmp/ccL43kNP.s:189    .text:0000000000000120 .L0 
     /tmp/ccL43kNP.s:192    .text:0000000000000120 .L0 
     /tmp/ccL43kNP.s:193    .text:0000000000000120 .L0 
     /tmp/ccL43kNP.s:198    .text:0000000000000128 .L0 
     /tmp/ccL43kNP.s:199    .text:0000000000000128 .L0 
     /tmp/ccL43kNP.s:201    .text:000000000000012c .L0 
     /tmp/ccL43kNP.s:209    .text:000000000000014c .L0 
     /tmp/ccL43kNP.s:213    .text:0000000000000150 .L0 
     /tmp/ccL43kNP.s:218    .text:0000000000000158 .L0 
     /tmp/ccL43kNP.s:219    .text:0000000000000158 .L0 
     /tmp/ccL43kNP.s:220    .text:0000000000000158 .L0 
     /tmp/ccL43kNP.s:222    .text:0000000000000160 .L0 
     /tmp/ccL43kNP.s:224    .text:0000000000000164 .L0 
     /tmp/ccL43kNP.s:226    .text:000000000000016c .L0 
     /tmp/ccL43kNP.s:228    .text:0000000000000170 .L0 
     /tmp/ccL43kNP.s:229    .text:0000000000000170 .L0 
     /tmp/ccL43kNP.s:231    .text:0000000000000178 .L0 
     /tmp/ccL43kNP.s:233    .text:000000000000017c .L0 
     /tmp/ccL43kNP.s:234    .text:000000000000017c .L0 
     /tmp/ccL43kNP.s:236    .text:0000000000000180 .L0 
     /tmp/ccL43kNP.s:239    .text:0000000000000184 .L0 
     /tmp/ccL43kNP.s:241    .text:0000000000000188 .L0 
     /tmp/ccL43kNP.s:250    .bss:0000000000000000 finished
     /tmp/ccL43kNP.s:247    .bss:0000000000000000 .LANCHOR0
     /tmp/ccL43kNP.s:258    .text:0000000000000188 .L0 
     /tmp/ccL43kNP.s:29     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccL43kNP.s:71     .text:0000000000000038 .L0 
     /tmp/ccL43kNP.s:32     .rodata.str1.8:0000000000000008 .LC1
     /tmp/ccL43kNP.s:81     .text:0000000000000054 .L0 
     /tmp/ccL43kNP.s:100    .text:0000000000000080 .L0 
     /tmp/ccL43kNP.s:139    .text:00000000000000c0 .L0 
     /tmp/ccL43kNP.s:153    .text:00000000000000dc .L0 
     /tmp/ccL43kNP.s:158    .text:00000000000000ec .L0 
     /tmp/ccL43kNP.s:163    .text:00000000000000fc .L0 
     /tmp/ccL43kNP.s:203    .text:0000000000000134 .L0 
     /tmp/ccL43kNP.s:220    .text:0000000000000158 .L0 
     /tmp/ccL43kNP.s:224    .text:0000000000000164 .L0 
     /tmp/ccL43kNP.s:20     .text:000000000000000c .L2
     /tmp/ccL43kNP.s:91     .text:0000000000000074 .L5
     /tmp/ccL43kNP.s:63     .text:0000000000000030 .L6
     /tmp/ccL43kNP.s:211    .text:0000000000000150 .L10
     /tmp/ccL43kNP.s:196    .text:0000000000000128 .L13
     /tmp/ccL43kNP.s:215    .text:0000000000000158 .L11
     /tmp/ccL43kNP.s:1248   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
GAS LISTING /tmp/ccL43kNP.s 			page 12


     /tmp/ccL43kNP.s:2363   .debug_str:0000000000000603 .LASF122
     /tmp/ccL43kNP.s:2217   .debug_str:00000000000001e4 .LASF123
     /tmp/ccL43kNP.s:2335   .debug_str:0000000000000544 .LASF124
     /tmp/ccL43kNP.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccL43kNP.s:253    .text:0000000000000188 .Letext0
     /tmp/ccL43kNP.s:2157   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccL43kNP.s:2231   .debug_str:0000000000000244 .LASF0
     /tmp/ccL43kNP.s:2253   .debug_str:00000000000002e7 .LASF1
     /tmp/ccL43kNP.s:2321   .debug_str:00000000000004d1 .LASF2
     /tmp/ccL43kNP.s:2325   .debug_str:00000000000004f2 .LASF4
     /tmp/ccL43kNP.s:2243   .debug_str:0000000000000297 .LASF3
     /tmp/ccL43kNP.s:2165   .debug_str:000000000000002d .LASF5
     /tmp/ccL43kNP.s:2301   .debug_str:0000000000000448 .LASF6
     /tmp/ccL43kNP.s:2295   .debug_str:0000000000000411 .LASF7
     /tmp/ccL43kNP.s:2247   .debug_str:00000000000002c5 .LASF8
     /tmp/ccL43kNP.s:2219   .debug_str:00000000000001f1 .LASF9
     /tmp/ccL43kNP.s:2223   .debug_str:0000000000000212 .LASF10
     /tmp/ccL43kNP.s:2181   .debug_str:00000000000000bc .LASF11
     /tmp/ccL43kNP.s:2215   .debug_str:00000000000001d5 .LASF12
     /tmp/ccL43kNP.s:2183   .debug_str:00000000000000cb .LASF13
     /tmp/ccL43kNP.s:2179   .debug_str:00000000000000ac .LASF14
     /tmp/ccL43kNP.s:2349   .debug_str:00000000000005b5 .LASF15
     /tmp/ccL43kNP.s:2201   .debug_str:0000000000000152 .LASF16
     /tmp/ccL43kNP.s:2341   .debug_str:0000000000000577 .LASF17
     /tmp/ccL43kNP.s:2269   .debug_str:000000000000035c .LASF18
     /tmp/ccL43kNP.s:2385   .debug_str:000000000000076e .LASF19
     /tmp/ccL43kNP.s:2355   .debug_str:00000000000005d8 .LASF20
     /tmp/ccL43kNP.s:2395   .debug_str:00000000000007b2 .LASF22
     /tmp/ccL43kNP.s:2195   .debug_str:0000000000000125 .LASF21
     /tmp/ccL43kNP.s:2371   .debug_str:00000000000006f6 .LASF23
     /tmp/ccL43kNP.s:2353   .debug_str:00000000000005c8 .LASF24
     /tmp/ccL43kNP.s:2245   .debug_str:00000000000002a9 .LASF25
     /tmp/ccL43kNP.s:2209   .debug_str:00000000000001a2 .LASF28
     /tmp/ccL43kNP.s:2423   .debug_str:0000000000000880 .LASF30
     /tmp/ccL43kNP.s:2225   .debug_str:0000000000000220 .LASF26
     /tmp/ccL43kNP.s:2257   .debug_str:0000000000000300 .LASF27
     /tmp/ccL43kNP.s:2273   .debug_str:0000000000000367 .LASF29
     /tmp/ccL43kNP.s:2421   .debug_str:0000000000000865 .LASF31
     /tmp/ccL43kNP.s:2357   .debug_str:00000000000005e3 .LASF32
     /tmp/ccL43kNP.s:2407   .debug_str:0000000000000810 .LASF33
     /tmp/ccL43kNP.s:2377   .debug_str:0000000000000733 .LASF34
     /tmp/ccL43kNP.s:2365   .debug_str:00000000000006c7 .LASF35
     /tmp/ccL43kNP.s:2417   .debug_str:000000000000084e .LASF36
     /tmp/ccL43kNP.s:2169   .debug_str:000000000000003f .LASF37
     /tmp/ccL43kNP.s:2337   .debug_str:0000000000000562 .LASF125
     /tmp/ccL43kNP.s:2255   .debug_str:00000000000002fa .LASF69
     /tmp/ccL43kNP.s:2259   .debug_str:000000000000031a .LASF71
     /tmp/ccL43kNP.s:2359   .debug_str:00000000000005ee .LASF126
     /tmp/ccL43kNP.s:2251   .debug_str:00000000000002e2 .LASF38
     /tmp/ccL43kNP.s:2409   .debug_str:0000000000000826 .LASF39
     /tmp/ccL43kNP.s:2415   .debug_str:0000000000000841 .LASF40
     /tmp/ccL43kNP.s:2205   .debug_str:0000000000000175 .LASF41
     /tmp/ccL43kNP.s:2161   .debug_str:0000000000000012 .LASF42
     /tmp/ccL43kNP.s:2239   .debug_str:0000000000000275 .LASF78
     /tmp/ccL43kNP.s:2229   .debug_str:0000000000000239 .LASF73
     /tmp/ccL43kNP.s:2175   .debug_str:0000000000000089 .LASF75
     /tmp/ccL43kNP.s:2185   .debug_str:00000000000000db .LASF127
GAS LISTING /tmp/ccL43kNP.s 			page 13


     /tmp/ccL43kNP.s:2163   .debug_str:0000000000000022 .LASF43
     /tmp/ccL43kNP.s:2271   .debug_str:0000000000000361 .LASF44
     /tmp/ccL43kNP.s:2393   .debug_str:00000000000007a9 .LASF45
     /tmp/ccL43kNP.s:2249   .debug_str:00000000000002d8 .LASF46
     /tmp/ccL43kNP.s:2411   .debug_str:0000000000000832 .LASF47
     /tmp/ccL43kNP.s:2339   .debug_str:000000000000056e .LASF48
     /tmp/ccL43kNP.s:2291   .debug_str:00000000000003f0 .LASF49
     /tmp/ccL43kNP.s:2265   .debug_str:0000000000000349 .LASF50
     /tmp/ccL43kNP.s:2397   .debug_str:00000000000007c9 .LASF51
     /tmp/ccL43kNP.s:2193   .debug_str:0000000000000117 .LASF52
     /tmp/ccL43kNP.s:2367   .debug_str:00000000000006e0 .LASF53
     /tmp/ccL43kNP.s:2333   .debug_str:0000000000000533 .LASF128
     /tmp/ccL43kNP.s:2191   .debug_str:000000000000010e .LASF59
     /tmp/ccL43kNP.s:2171   .debug_str:000000000000005f .LASF61
     /tmp/ccL43kNP.s:2233   .debug_str:0000000000000251 .LASF54
     /tmp/ccL43kNP.s:2389   .debug_str:0000000000000781 .LASF56
     /tmp/ccL43kNP.s:2235   .debug_str:0000000000000260 .LASF55
     /tmp/ccL43kNP.s:2329   .debug_str:0000000000000500 .LASF57
     /tmp/ccL43kNP.s:2263   .debug_str:000000000000033f .LASF58
     /tmp/ccL43kNP.s:2307   .debug_str:0000000000000462 .LASF60
     /tmp/ccL43kNP.s:2399   .debug_str:00000000000007d6 .LASF62
     /tmp/ccL43kNP.s:2351   .debug_str:00000000000005c1 .LASF63
     /tmp/ccL43kNP.s:2379   .debug_str:0000000000000741 .LASF129
     /tmp/ccL43kNP.s:2211   .debug_str:00000000000001b2 .LASF64
     /tmp/ccL43kNP.s:2361   .debug_str:00000000000005f6 .LASF65
     /tmp/ccL43kNP.s:2187   .debug_str:00000000000000ee .LASF66
     /tmp/ccL43kNP.s:2401   .debug_str:00000000000007f1 .LASF67
     /tmp/ccL43kNP.s:2241   .debug_str:0000000000000282 .LASF68
     /tmp/ccL43kNP.s:2227   .debug_str:000000000000022e .LASF70
     /tmp/ccL43kNP.s:2293   .debug_str:00000000000003f8 .LASF72
     /tmp/ccL43kNP.s:2375   .debug_str:000000000000072a .LASF74
     /tmp/ccL43kNP.s:2317   .debug_str:00000000000004b0 .LASF76
     /tmp/ccL43kNP.s:2315   .debug_str:00000000000004a7 .LASF77
     /tmp/ccL43kNP.s:2309   .debug_str:0000000000000472 .LASF79
     /tmp/ccL43kNP.s:2305   .debug_str:000000000000045b .LASF80
     /tmp/ccL43kNP.s:2289   .debug_str:00000000000003dc .LASF81
     /tmp/ccL43kNP.s:2287   .debug_str:00000000000003d5 .LASF82
     /tmp/ccL43kNP.s:2311   .debug_str:0000000000000488 .LASF83
     /tmp/ccL43kNP.s:2279   .debug_str:0000000000000399 .LASF84
     /tmp/ccL43kNP.s:2331   .debug_str:000000000000051e .LASF85
     /tmp/ccL43kNP.s:2281   .debug_str:00000000000003a1 .LASF86
     /tmp/ccL43kNP.s:2261   .debug_str:000000000000032a .LASF87
     /tmp/ccL43kNP.s:2267   .debug_str:0000000000000354 .LASF88
     /tmp/ccL43kNP.s:2277   .debug_str:0000000000000384 .LASF89
     /tmp/ccL43kNP.s:2419   .debug_str:000000000000085d .LASF90
     /tmp/ccL43kNP.s:2373   .debug_str:0000000000000715 .LASF91
     /tmp/ccL43kNP.s:2345   .debug_str:00000000000005a0 .LASF92
     /tmp/ccL43kNP.s:2297   .debug_str:0000000000000424 .LASF93
     /tmp/ccL43kNP.s:2327   .debug_str:00000000000004f9 .LASF94
     /tmp/ccL43kNP.s:2189   .debug_str:00000000000000fa .LASF95
     /tmp/ccL43kNP.s:2197   .debug_str:0000000000000138 .LASF96
     /tmp/ccL43kNP.s:2323   .debug_str:00000000000004df .LASF97
     /tmp/ccL43kNP.s:2237   .debug_str:000000000000026f .LASF98
     /tmp/ccL43kNP.s:2285   .debug_str:00000000000003c2 .LASF99
     /tmp/ccL43kNP.s:2167   .debug_str:0000000000000034 .LASF100
     /tmp/ccL43kNP.s:2383   .debug_str:0000000000000755 .LASF101
     /tmp/ccL43kNP.s:2319   .debug_str:00000000000004c6 .LASF102
GAS LISTING /tmp/ccL43kNP.s 			page 14


     /tmp/ccL43kNP.s:2283   .debug_str:00000000000003a9 .LASF103
     /tmp/ccL43kNP.s:2391   .debug_str:000000000000079f .LASF104
     /tmp/ccL43kNP.s:2213   .debug_str:00000000000001be .LASF105
     /tmp/ccL43kNP.s:2387   .debug_str:0000000000000777 .LASF106
     /tmp/ccL43kNP.s:2173   .debug_str:0000000000000072 .LASF107
     /tmp/ccL43kNP.s:124    .text:00000000000000ac .LFB42
     /tmp/ccL43kNP.s:242    .text:0000000000000188 .LFE42
     /tmp/ccL43kNP.s:2084   .debug_loc:0000000000000000 .LLST3
     /tmp/ccL43kNP.s:2199   .debug_str:000000000000013e .LASF108
     /tmp/ccL43kNP.s:2369   .debug_str:00000000000006ea .LASF109
     /tmp/ccL43kNP.s:2177   .debug_str:000000000000009f .LASF110
     /tmp/ccL43kNP.s:191    .text:0000000000000120 .LBB7
     /tmp/ccL43kNP.s:216    .text:0000000000000158 .LBE7
     /tmp/ccL43kNP.s:2091   .debug_loc:0000000000000023 .LLST5
     /tmp/ccL43kNP.s:207    .text:000000000000014c .LVL16
     /tmp/ccL43kNP.s:167    .text:0000000000000108 .LBB5
     /tmp/ccL43kNP.s:180    .text:0000000000000110 .LBE5
     /tmp/ccL43kNP.s:2103   .debug_loc:000000000000005a .LLST4
     /tmp/ccL43kNP.s:150    .text:00000000000000dc .LVL9
     /tmp/ccL43kNP.s:161    .text:00000000000000fc .LVL11
     /tmp/ccL43kNP.s:2303   .debug_str:000000000000044f .LASF130
     /tmp/ccL43kNP.s:2221   .debug_str:0000000000000201 .LASF131
     /tmp/ccL43kNP.s:10     .text:0000000000000000 .LFB41
     /tmp/ccL43kNP.s:25     .text:0000000000000010 .LFE41
     /tmp/ccL43kNP.s:2413   .debug_str:0000000000000837 .LASF111
     /tmp/ccL43kNP.s:2275   .debug_str:0000000000000375 .LASF112
     /tmp/ccL43kNP.s:39     .text:0000000000000010 .LFB40
     /tmp/ccL43kNP.s:118    .text:00000000000000ac .LFE40
     /tmp/ccL43kNP.s:2111   .debug_loc:000000000000007e .LLST0
     /tmp/ccL43kNP.s:2403   .debug_str:00000000000007f9 .LASF113
     /tmp/ccL43kNP.s:2125   .debug_loc:00000000000000b7 .LLST1
     /tmp/ccL43kNP.s:2132   .debug_loc:00000000000000da .LLST2
     /tmp/ccL43kNP.s:73     .text:0000000000000048 .LVL4
     /tmp/ccL43kNP.s:78     .text:0000000000000054 .LVL5
     /tmp/ccL43kNP.s:83     .text:0000000000000064 .LVL6
     /tmp/ccL43kNP.s:88     .text:0000000000000070 .LVL7
     /tmp/ccL43kNP.s:2381   .debug_str:0000000000000750 .LASF132
     /tmp/ccL43kNP.s:2207   .debug_str:0000000000000181 .LASF114
     /tmp/ccL43kNP.s:2347   .debug_str:00000000000005a7 .LASF116
     /tmp/ccL43kNP.s:2343   .debug_str:000000000000058d .LASF115
     /tmp/ccL43kNP.s:2405   .debug_str:0000000000000804 .LASF117
     /tmp/ccL43kNP.s:2159   .debug_str:0000000000000000 .LASF118
     /tmp/ccL43kNP.s:2203   .debug_str:0000000000000168 .LASF119
     /tmp/ccL43kNP.s:2299   .debug_str:0000000000000438 .LASF120
     /tmp/ccL43kNP.s:2313   .debug_str:000000000000049c .LASF121
     /tmp/ccL43kNP.s:159    .text:00000000000000f4 .LVL10
     /tmp/ccL43kNP.s:190    .text:0000000000000120 .LVL14
     /tmp/ccL43kNP.s:195    .text:0000000000000128 .LVL15
     /tmp/ccL43kNP.s:237    .text:0000000000000180 .LVL18
     /tmp/ccL43kNP.s:166    .text:0000000000000108 .LVL12
     /tmp/ccL43kNP.s:177    .text:0000000000000110 .LVL13
     /tmp/ccL43kNP.s:42     .text:0000000000000010 .LVL0
     /tmp/ccL43kNP.s:62     .text:0000000000000030 .LVL2
     /tmp/ccL43kNP.s:58     .text:000000000000002c .LVL1
     /tmp/ccL43kNP.s:96     .text:000000000000007c .LVL8
     /tmp/ccL43kNP.s:67     .text:0000000000000034 .LVL3
     /tmp/ccL43kNP.s:259    .debug_info:0000000000000000 .Ldebug_info0
GAS LISTING /tmp/ccL43kNP.s 			page 15



UNDEFINED SYMBOLS
_Z11printStringPKc
_Z12printIntegerm
_Z10time_sleepm
interrupt
_ZN3PCB14createProccessEPFvvEPv
_ZN3PCB7runningE
_ZN9Scheduler11idleProcessE
_Z13thread_createPP3PCBPFvPvES2_

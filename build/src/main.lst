GAS LISTING /tmp/ccN2zSXx.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	idleProcess
   9              	idleProcess:
  10              	.LFB34:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../h/hw.h"
   2:src/main.cpp  **** #include "../h/syscall_c.h"
   3:src/main.cpp  **** #include "../h/PCB.h"
   4:src/main.cpp  **** #include "../h/kernel.h"
   5:src/main.cpp  **** #include "../h/SCB.h"
   6:src/main.cpp  **** #include "../h/CCB.h"
   7:src/main.cpp  **** #include "../h/userMain.h"
   8:src/main.cpp  **** 
   9:src/main.cpp  **** // Kernel inicijalizacija
  10:src/main.cpp  **** extern "C" void interrupt();
  11:src/main.cpp  **** extern "C" void idleProcess(void*) {
  12              		.loc 1 11 36
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  20              	.L2:
  12:src/main.cpp  ****     while(true) {}
  21              		.loc 1 12 5 discriminator 1
  22              		.loc 1 12 5 discriminator 1
  23 000c 6F000000 		j	.L2
  24              		.cfi_endproc
  25              	.LFE34:
  27              		.align	2
  28              		.globl	_Z8userModev
  30              	_Z8userModev:
  31              	.LFB32:
  32              		.file 2 "src/../h/userMain.h"
   1:src/../h/userMain.h **** #ifndef USERMAIN_H
   2:src/../h/userMain.h **** #define USERMAIN_H
   3:src/../h/userMain.h **** 
   4:src/../h/userMain.h **** PCB* userProcess = nullptr;
   5:src/../h/userMain.h **** 
   6:src/../h/userMain.h **** extern "C" void interrupt();
   7:src/../h/userMain.h **** void userMode() {
  33              		.loc 2 7 17
  34              		.cfi_startproc
  35 0010 130101FF 		addi	sp,sp,-16
  36              		.cfi_def_cfa_offset 16
  37 0014 23348100 		sd	s0,8(sp)
  38              		.cfi_offset 8, -8
  39 0018 13040101 		addi	s0,sp,16
  40              		.cfi_def_cfa 8, 0
   8:src/../h/userMain.h ****     size_t code = Kernel::sysCallCodes::userMode;
GAS LISTING /tmp/ccN2zSXx.s 			page 2


  41              		.loc 2 8 5
  42              	.LVL0:
   9:src/../h/userMain.h ****     asm volatile("mv a0, %0" : : "r" (code));
  43              		.loc 2 9 5
  44              		.loc 2 9 45 is_stmt 0
  45 001c 93073004 		li	a5,67
  46              	#APP
  47              	# 9 "src/../h/userMain.h" 1
  10              	    asm volatile("ecall");
  48              		mv a0, a5
  49              	# 0 "" 2
  50              		.loc 2 10 5 is_stmt 1
  51              		.loc 2 10 26 is_stmt 0
  52              	# 10 "src/../h/userMain.h" 1
  11              	
  12:src/../h/userMain.h **** }
  53              		ecall
  54              	# 0 "" 2
  55              		.loc 2 12 1
  56              	#NO_APP
  57 0028 03348100 		ld	s0,8(sp)
  58              		.cfi_restore 8
  59              		.cfi_def_cfa 2, 16
  60 002c 13010101 		addi	sp,sp,16
  61              		.cfi_def_cfa_offset 0
  62 0030 67800000 		jr	ra
  63              		.cfi_endproc
  64              	.LFE32:
  66              		.align	2
  67              		.globl	_Z15userMainWrapperPv
  69              	_Z15userMainWrapperPv:
  70              	.LFB33:
  13:src/../h/userMain.h **** void userMain();
  14:src/../h/userMain.h **** void userMainWrapper(void*) {
  71              		.loc 2 14 29 is_stmt 1
  72              		.cfi_startproc
  73 0034 130101FF 		addi	sp,sp,-16
  74              		.cfi_def_cfa_offset 16
  75 0038 23341100 		sd	ra,8(sp)
  76 003c 23308100 		sd	s0,0(sp)
  77              		.cfi_offset 1, -8
  78              		.cfi_offset 8, -16
  79 0040 13040101 		addi	s0,sp,16
  80              		.cfi_def_cfa 8, 0
  15:src/../h/userMain.h ****     userMode();
  81              		.loc 2 15 5
  82              		.loc 2 15 13 is_stmt 0
  83 0044 97000000 		call	_Z8userModev
  83      E7800000 
  84              	.LVL1:
  16:src/../h/userMain.h ****     userMain();
  85              		.loc 2 16 5 is_stmt 1
  86              		.loc 2 16 13 is_stmt 0
  87 004c 97000000 		call	_Z8userMainv@plt
  87      E7800000 
  88              	.LVL2:
  17:src/../h/userMain.h **** }
GAS LISTING /tmp/ccN2zSXx.s 			page 3


  89              		.loc 2 17 1
  90 0054 83308100 		ld	ra,8(sp)
  91              		.cfi_restore 1
  92 0058 03340100 		ld	s0,0(sp)
  93              		.cfi_restore 8
  94              		.cfi_def_cfa 2, 16
  95 005c 13010101 		addi	sp,sp,16
  96              		.cfi_def_cfa_offset 0
  97 0060 67800000 		jr	ra
  98              		.cfi_endproc
  99              	.LFE33:
 101              		.align	2
 102              		.globl	main
 104              	main:
 105              	.LFB35:
  13:src/main.cpp  **** }
  14:src/main.cpp  **** // ------------
  15:src/main.cpp  **** 
  16:src/main.cpp  **** int main() {
 106              		.loc 1 16 12 is_stmt 1
 107              		.cfi_startproc
 108 0064 130101FF 		addi	sp,sp,-16
 109              		.cfi_def_cfa_offset 16
 110 0068 23341100 		sd	ra,8(sp)
 111 006c 23308100 		sd	s0,0(sp)
 112              		.cfi_offset 1, -8
 113              		.cfi_offset 8, -16
 114 0070 13040101 		addi	s0,sp,16
 115              		.cfi_def_cfa 8, 0
  17:src/main.cpp  ****     // Kernel inicijalizacija
  18:src/main.cpp  ****     asm volatile("csrw stvec, %0" : : "r" (&interrupt));
 116              		.loc 1 18 5
 117              		.loc 1 18 56 is_stmt 0
 118 0074 97070000 		la	a5,interrupt
 118      83B70700 
 119              	#APP
 120              	# 18 "src/main.cpp" 1
  19              	    PCB* main = PCB::createProccess(nullptr, nullptr); // main proces(ne pravimo stek)
 121              		csrw stvec, a5
 122              	# 0 "" 2
 123              		.loc 1 19 5 is_stmt 1
 124              		.loc 1 19 36 is_stmt 0
 125              	#NO_APP
 126 0080 93050000 		li	a1,0
 127 0084 13050000 		li	a0,0
 128 0088 97000000 		call	_ZN3PCB14createProccessEPFvvEPv@plt
 128      E7800000 
 129              	.LVL3:
  20:src/main.cpp  ****     PCB::running = main;
 130              		.loc 1 20 5 is_stmt 1
 131              		.loc 1 20 18 is_stmt 0
 132 0090 97070000 		la	a5,_ZN3PCB7runningE
 132      83B70700 
 133 0098 23B0A700 		sd	a0,0(a5)
  21:src/main.cpp  **** 
  22:src/main.cpp  ****     sem_open(&CCB::semInput, 0);
 134              		.loc 1 22 5 is_stmt 1
GAS LISTING /tmp/ccN2zSXx.s 			page 4


 135              		.loc 1 22 13 is_stmt 0
 136 009c 93050000 		li	a1,0
 137 00a0 17050000 		la	a0,_ZN3CCB8semInputE
 137      03350500 
 138              	.LVL4:
 139 00a8 97000000 		call	_Z8sem_openPP3SCBj@plt
 139      E7800000 
 140              	.LVL5:
  23:src/main.cpp  ****     sem_open(&CCB::semOutput, 0);
 141              		.loc 1 23 5 is_stmt 1
 142              		.loc 1 23 13 is_stmt 0
 143 00b0 93050000 		li	a1,0
 144 00b4 17050000 		la	a0,_ZN3CCB9semOutputE
 144      03350500 
 145 00bc 97000000 		call	_Z8sem_openPP3SCBj@plt
 145      E7800000 
 146              	.LVL6:
  24:src/main.cpp  ****     sem_open(&CCB::inputBufferEmpty, 0);
 147              		.loc 1 24 5 is_stmt 1
 148              		.loc 1 24 13 is_stmt 0
 149 00c4 93050000 		li	a1,0
 150 00c8 17050000 		la	a0,_ZN3CCB16inputBufferEmptyE
 150      03350500 
 151 00d0 97000000 		call	_Z8sem_openPP3SCBj@plt
 151      E7800000 
 152              	.LVL7:
  25:src/main.cpp  **** 
  26:src/main.cpp  ****     Kernel::ms_sstatus(Kernel::SSTATUS_SIE); // dozvoljavaju se prekidi
 153              		.loc 1 26 5 is_stmt 1
 154              	.LBB12:
 155              	.LBB13:
 156              		.file 3 "src/../h/kernel.h"
   1:src/../h/kernel.h **** #ifndef KERNEL_H
   2:src/../h/kernel.h **** #define KERNEL_H
   3:src/../h/kernel.h **** 
   4:src/../h/kernel.h **** #include "hw.h"
   5:src/../h/kernel.h **** 
   6:src/../h/kernel.h **** class Kernel {
   7:src/../h/kernel.h **** public:
   8:src/../h/kernel.h ****     // postavlja code u registar a0
   9:src/../h/kernel.h ****     static size_t setCode(size_t code) {
  10:src/../h/kernel.h ****         return code;
  11:src/../h/kernel.h ****     }
  12:src/../h/kernel.h **** 
  13:src/../h/kernel.h ****     // kodovi po kojima se prepoznaju sistemski pozivi
  14:src/../h/kernel.h ****     enum sysCallCodes {
  15:src/../h/kernel.h ****         mem_alloc = 0x01,
  16:src/../h/kernel.h ****         mem_free = 0x02,
  17:src/../h/kernel.h ****         thread_create = 0x11,
  18:src/../h/kernel.h ****         thread_exit = 0x12,
  19:src/../h/kernel.h ****         thread_dispatch = 0x13,
  20:src/../h/kernel.h ****         thread_start = 0x14,
  21:src/../h/kernel.h ****         sem_open = 0x21,
  22:src/../h/kernel.h ****         sem_close = 0x22,
  23:src/../h/kernel.h ****         sem_wait = 0x23,
  24:src/../h/kernel.h ****         sem_signal = 0x24,
  25:src/../h/kernel.h ****         time_sleep = 0x31,
GAS LISTING /tmp/ccN2zSXx.s 			page 5


  26:src/../h/kernel.h ****         getc = 0x41,
  27:src/../h/kernel.h ****         putc = 0x42,
  28:src/../h/kernel.h ****         userMode = 0x43
  29:src/../h/kernel.h ****     };
  30:src/../h/kernel.h **** 
  31:src/../h/kernel.h ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  32:src/../h/kernel.h ****     static void popSppSpie();
  33:src/../h/kernel.h **** 
  34:src/../h/kernel.h ****     // cita registar scause (uzrok nastanka prekida)
  35:src/../h/kernel.h ****     static size_t r_scause() {
  36:src/../h/kernel.h ****         size_t volatile scause;
  37:src/../h/kernel.h ****         __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  38:src/../h/kernel.h ****         return scause;
  39:src/../h/kernel.h ****     }
  40:src/../h/kernel.h **** 
  41:src/../h/kernel.h ****     // upisuje u registar scause (uzrok nastanka prekida)
  42:src/../h/kernel.h ****     static void w_scause(size_t scause) {
  43:src/../h/kernel.h ****         __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  44:src/../h/kernel.h ****     }
  45:src/../h/kernel.h **** 
  46:src/../h/kernel.h ****     // cita registar sepc
  47:src/../h/kernel.h ****     static size_t r_sepc() {
  48:src/../h/kernel.h ****         size_t volatile sepc;
  49:src/../h/kernel.h ****         __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
  50:src/../h/kernel.h ****         return sepc;
  51:src/../h/kernel.h ****     }
  52:src/../h/kernel.h **** 
  53:src/../h/kernel.h ****     // upisuje u registar sepc
  54:src/../h/kernel.h ****     static void w_sepc(size_t sepc) {
  55:src/../h/kernel.h ****         __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
  56:src/../h/kernel.h ****     }
  57:src/../h/kernel.h **** 
  58:src/../h/kernel.h ****     // read register stvec
  59:src/../h/kernel.h ****     static size_t r_stvec() {
  60:src/../h/kernel.h ****         size_t volatile stvec;
  61:src/../h/kernel.h ****         __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
  62:src/../h/kernel.h ****         return stvec;
  63:src/../h/kernel.h ****     }
  64:src/../h/kernel.h **** 
  65:src/../h/kernel.h ****     // write register stvec
  66:src/../h/kernel.h ****     static void w_stvec(size_t stvec) {
  67:src/../h/kernel.h ****         __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  68:src/../h/kernel.h ****     }
  69:src/../h/kernel.h **** 
  70:src/../h/kernel.h ****     // read register stval
  71:src/../h/kernel.h ****     static size_t r_stval() {
  72:src/../h/kernel.h ****         size_t volatile stval;
  73:src/../h/kernel.h ****         __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
  74:src/../h/kernel.h ****         return stval;
  75:src/../h/kernel.h ****     }
  76:src/../h/kernel.h **** 
  77:src/../h/kernel.h ****     // write register stval
  78:src/../h/kernel.h ****     static void w_stval(size_t stval) {
  79:src/../h/kernel.h ****         __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
  80:src/../h/kernel.h ****     }
  81:src/../h/kernel.h **** 
  82:src/../h/kernel.h ****     enum BitMaskSip
GAS LISTING /tmp/ccN2zSXx.s 			page 6


  83:src/../h/kernel.h ****     {
  84:src/../h/kernel.h ****         SIP_SSIE = (1 << 1), // da li su dozvoljeni softverski prekidi
  85:src/../h/kernel.h ****         SIP_SEIE = (1 << 9), // da li su dozvoljeni spoljasnji hardverski prekidi
  86:src/../h/kernel.h ****     };
  87:src/../h/kernel.h **** 
  88:src/../h/kernel.h ****     // postavljanje odredjenih bitova (BitMaskSip) u registar sip
  89:src/../h/kernel.h ****     static void ms_sip(size_t mask) {
  90:src/../h/kernel.h ****         __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
  91:src/../h/kernel.h ****     }
  92:src/../h/kernel.h **** 
  93:src/../h/kernel.h ****     // brisanje odredjenih bitova (BitMaskSip) iz registra sip
  94:src/../h/kernel.h ****     static void mc_sip(size_t mask) {
  95:src/../h/kernel.h ****         __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
  96:src/../h/kernel.h ****     }
  97:src/../h/kernel.h **** 
  98:src/../h/kernel.h ****     // citanje iz registra sip
  99:src/../h/kernel.h ****     static size_t r_sip() {
 100:src/../h/kernel.h ****         size_t volatile sip;
 101:src/../h/kernel.h ****         __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 102:src/../h/kernel.h ****         return sip;
 103:src/../h/kernel.h ****     }
 104:src/../h/kernel.h **** 
 105:src/../h/kernel.h ****     // upis u registar sip
 106:src/../h/kernel.h ****     static void w_sip(size_t sip) {
 107:src/../h/kernel.h ****         __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 108:src/../h/kernel.h ****     }
 109:src/../h/kernel.h **** 
 110:src/../h/kernel.h ****     enum BitMaskSstatus
 111:src/../h/kernel.h ****     {
 112:src/../h/kernel.h ****         SSTATUS_SIE = (1 << 1), // ako je 0 - maskiranje spoljasnjih prekida u sistemskom rezimu
 113:src/../h/kernel.h ****         SSTATUS_SPIE = (1 << 5), // prethodna vrednost sie
 114:src/../h/kernel.h ****         SSTATUS_SPP = (1 << 8), // u kom rezimu se desio prekid
 115:src/../h/kernel.h ****     };
 116:src/../h/kernel.h **** 
 117:src/../h/kernel.h ****     // mask set register sstatus
 118:src/../h/kernel.h ****     static void ms_sstatus(size_t mask) {
 119:src/../h/kernel.h ****         __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 157              		.loc 3 119 9
 158              		.loc 3 119 72 is_stmt 0
 159 00d8 93072000 		li	a5,2
 160              	#APP
 161              	# 119 "src/../h/kernel.h" 1
 120              	    }
 162              		csrs sstatus, a5
 163              	# 0 "" 2
 164              	.LVL8:
 165              	#NO_APP
 166              	.LBE13:
 167              	.LBE12:
  27:src/main.cpp  **** 
  28:src/main.cpp  ****     thread_create(&CCB::inputProcces, CCB::inputBody, nullptr); // getc nit (stavljamo je prvi put 
 168              		.loc 1 28 5 is_stmt 1
 169              		.loc 1 28 18 is_stmt 0
 170 00e0 13060000 		li	a2,0
 171 00e4 97050000 		la	a1,_ZN3CCB9inputBodyEPv
 171      83B50500 
 172 00ec 17050000 		la	a0,_ZN3CCB12inputProccesE
GAS LISTING /tmp/ccN2zSXx.s 			page 7


 172      03350500 
 173 00f4 97000000 		call	_Z13thread_createPP3PCBPFvPvES2_@plt
 173      E7800000 
 174              	.LVL9:
  29:src/main.cpp  ****     thread_create(&CCB::outputProcess, CCB::outputBody, nullptr); // putc nit ( stavljamo je prvi p
 175              		.loc 1 29 5 is_stmt 1
 176              		.loc 1 29 18 is_stmt 0
 177 00fc 13060000 		li	a2,0
 178 0100 97050000 		la	a1,_ZN3CCB10outputBodyEPv
 178      83B50500 
 179 0108 17050000 		la	a0,_ZN3CCB13outputProcessE
 179      03350500 
 180 0110 97000000 		call	_Z13thread_createPP3PCBPFvPvES2_@plt
 180      E7800000 
 181              	.LVL10:
  30:src/main.cpp  ****     thread_create_only(&Scheduler::idleProcess, idleProcess, nullptr); // idle nit
 182              		.loc 1 30 5 is_stmt 1
 183              		.loc 1 30 23 is_stmt 0
 184 0118 13060000 		li	a2,0
 185 011c 97050000 		lla	a1,idleProcess
 185      93850500 
 186 0124 17050000 		la	a0,_ZN9Scheduler11idleProcessE
 186      03350500 
 187 012c 97000000 		call	_Z18thread_create_onlyPP3PCBPFvPvES2_@plt
 187      E7800000 
 188              	.LVL11:
  31:src/main.cpp  ****     Scheduler::idleProcess->setFinished(true);
 189              		.loc 1 31 5 is_stmt 1
 190              		.loc 1 31 40 is_stmt 0
 191 0134 97070000 		la	a5,_ZN9Scheduler11idleProcessE
 191      83B70700 
 192 013c 83B70700 		ld	a5,0(a5)
 193              	.LVL12:
 194              	.LBB14:
 195              	.LBB15:
 196              		.file 4 "src/../h/PCB.h"
   1:src/../h/PCB.h **** #ifndef PCB_H
   2:src/../h/PCB.h **** #define PCB_H
   3:src/../h/PCB.h **** 
   4:src/../h/PCB.h **** #include "hw.h"
   5:src/../h/PCB.h **** 
   6:src/../h/PCB.h **** extern "C" void interruptHandler();
   7:src/../h/PCB.h **** 
   8:src/../h/PCB.h **** class PCB {
   9:src/../h/PCB.h **** friend class Scheduler;
  10:src/../h/PCB.h **** friend void interruptHandler();
  11:src/../h/PCB.h **** friend class Kernel;
  12:src/../h/PCB.h **** friend class SCB;
  13:src/../h/PCB.h **** public:
  14:src/../h/PCB.h ****     // vraca true ako se proces zavrsio, false ako nije
  15:src/../h/PCB.h ****     bool isFinished() const {
  16:src/../h/PCB.h ****         return finished;
  17:src/../h/PCB.h ****     }
  18:src/../h/PCB.h ****     // vraca true ako je semafor obrisan pre nego sto je proces odblokiran
  19:src/../h/PCB.h ****     bool isSemaphoreDeleted() const {
  20:src/../h/PCB.h ****         return semDeleted;
  21:src/../h/PCB.h ****     }
GAS LISTING /tmp/ccN2zSXx.s 			page 8


  22:src/../h/PCB.h **** 
  23:src/../h/PCB.h ****     size_t getTimeSleeping() const {
  24:src/../h/PCB.h ****         return timeSleeping;
  25:src/../h/PCB.h ****     }
  26:src/../h/PCB.h **** 
  27:src/../h/PCB.h ****     void setTimeSleeping(size_t newTime) {
  28:src/../h/PCB.h ****         timeSleeping = newTime;
  29:src/../h/PCB.h ****     }
  30:src/../h/PCB.h **** 
  31:src/../h/PCB.h ****     PCB* getNextInList() const {
  32:src/../h/PCB.h ****         return nextInList;
  33:src/../h/PCB.h ****     }
  34:src/../h/PCB.h **** 
  35:src/../h/PCB.h ****     void setNextInList(PCB* next) {
  36:src/../h/PCB.h ****         nextInList = next;
  37:src/../h/PCB.h ****     }
  38:src/../h/PCB.h **** 
  39:src/../h/PCB.h ****     void setBlocked(bool newState) {
  40:src/../h/PCB.h ****         blocked = newState;
  41:src/../h/PCB.h ****     }
  42:src/../h/PCB.h **** 
  43:src/../h/PCB.h ****     void setSemDeleted(bool newState) {
  44:src/../h/PCB.h ****         semDeleted = newState;
  45:src/../h/PCB.h ****     }
  46:src/../h/PCB.h **** 
  47:src/../h/PCB.h ****     void setTimeSlice(time_t timeSlice_) {
  48:src/../h/PCB.h ****         timeSlice = timeSlice_;
  49:src/../h/PCB.h ****     }
  50:src/../h/PCB.h **** 
  51:src/../h/PCB.h ****     void setFinished(bool finished_) {
  52:src/../h/PCB.h ****         finished = finished_;
 197              		.loc 4 52 9 is_stmt 1
 198              		.loc 4 52 18 is_stmt 0
 199 0140 13071000 		li	a4,1
 200 0144 2384E702 		sb	a4,40(a5)
 201              	.LVL13:
 202              	.LBE15:
 203              	.LBE14:
  32:src/main.cpp  ****     Scheduler::idleProcess->setTimeSlice(1);
 204              		.loc 1 32 5 is_stmt 1
 205              	.LBB16:
 206              	.LBB17:
  48:src/../h/PCB.h ****     }
 207              		.loc 4 48 9
  48:src/../h/PCB.h ****     }
 208              		.loc 4 48 19 is_stmt 0
 209 0148 13071000 		li	a4,1
 210 014c 23B0E704 		sd	a4,64(a5)
 211              	.LVL14:
 212              	.LBE17:
 213              	.LBE16:
  33:src/main.cpp  ****     thread_create(&userProcess, userMainWrapper, nullptr);
 214              		.loc 1 33 5 is_stmt 1
 215              		.loc 1 33 18 is_stmt 0
 216 0150 13060000 		li	a2,0
 217 0154 97050000 		lla	a1,_Z15userMainWrapperPv
 217      93850500 
GAS LISTING /tmp/ccN2zSXx.s 			page 9


 218 015c 17050000 		lla	a0,.LANCHOR0
 218      13050500 
 219 0164 97000000 		call	_Z13thread_createPP3PCBPFvPvES2_@plt
 219      E7800000 
 220              	.LVL15:
 221              	.L10:
  34:src/main.cpp  ****     // ----
  35:src/main.cpp  **** 
  36:src/main.cpp  ****     while(!userProcess->isFinished()) {
 222              		.loc 1 36 5 is_stmt 1
 223              		.loc 1 36 11
 224              		.loc 1 36 35 is_stmt 0
 225 016c 97070000 		ld	a5,.LANCHOR0
 225      83B70700 
 226              	.LVL16:
 227              	.LBB18:
 228              	.LBB19:
  16:src/../h/PCB.h ****     }
 229              		.loc 4 16 9 is_stmt 1
  16:src/../h/PCB.h ****     }
 230              		.loc 4 16 16 is_stmt 0
 231 0174 83C78702 		lbu	a5,40(a5)
 232              	.LVL17:
 233              	.LBE19:
 234              	.LBE18:
 235              		.loc 1 36 11
 236 0178 63980700 		bnez	a5,.L9
  37:src/main.cpp  ****         thread_dispatch();
 237              		.loc 1 37 9 is_stmt 1
 238              		.loc 1 37 24 is_stmt 0
 239 017c 97000000 		call	_Z15thread_dispatchv@plt
 239      E7800000 
 240              	.LVL18:
  36:src/main.cpp  ****         thread_dispatch();
 241              		.loc 1 36 5
 242 0184 6FF09FFE 		j	.L10
 243              	.L9:
  38:src/main.cpp  ****     }
  39:src/main.cpp  **** 
  40:src/main.cpp  ****     while(CCB::semOutput->getSemValue() != 0) {
 244              		.loc 1 40 5 is_stmt 1
 245              		.loc 1 40 41
 246              		.loc 1 40 38 is_stmt 0
 247 0188 97070000 		la	a5,_ZN3CCB9semOutputE
 247      83B70700 
 248 0190 83B70700 		ld	a5,0(a5)
 249              	.LVL19:
 250              	.LBB20:
 251              	.LBB21:
 252              		.file 5 "src/../h/SCB.h"
   1:src/../h/SCB.h **** #ifndef PROJECT_BASE_SCB_H
   2:src/../h/SCB.h **** #define PROJECT_BASE_SCB_H
   3:src/../h/SCB.h **** 
   4:src/../h/SCB.h **** #include "PCB.h"
   5:src/../h/SCB.h **** #include "Scheduler.h"
   6:src/../h/SCB.h **** 
   7:src/../h/SCB.h **** class SCB { // Semaphore Control Block
GAS LISTING /tmp/ccN2zSXx.s 			page 10


   8:src/../h/SCB.h **** public:
   9:src/../h/SCB.h ****     int getSemValue() const {
  10:src/../h/SCB.h ****         return semValue;
 253              		.loc 5 10 9 is_stmt 1
 254              		.loc 5 10 16 is_stmt 0
 255 0194 83A70701 		lw	a5,16(a5)
 256              	.LVL20:
 257              	.LBE21:
 258              	.LBE20:
 259              		.loc 1 40 41
 260 0198 63880700 		beqz	a5,.L11
  41:src/main.cpp  ****         thread_dispatch();
 261              		.loc 1 41 9 is_stmt 1
 262              		.loc 1 41 24 is_stmt 0
 263 019c 97000000 		call	_Z15thread_dispatchv@plt
 263      E7800000 
 264              	.LVL21:
  40:src/main.cpp  ****         thread_dispatch();
 265              		.loc 1 40 5
 266 01a4 6FF05FFE 		j	.L9
 267              	.L11:
  42:src/main.cpp  ****     }
  43:src/main.cpp  ****     return 0;
 268              		.loc 1 43 5 is_stmt 1
  44:src/main.cpp  **** }...
 269              		.loc 1 44 1 is_stmt 0
 270 01a8 13050000 		li	a0,0
 271 01ac 83308100 		ld	ra,8(sp)
 272              		.cfi_restore 1
 273 01b0 03340100 		ld	s0,0(sp)
 274              		.cfi_restore 8
 275              		.cfi_def_cfa 2, 16
 276 01b4 13010101 		addi	sp,sp,16
 277              		.cfi_def_cfa_offset 0
 278 01b8 67800000 		jr	ra
 279              		.cfi_endproc
 280              	.LFE35:
 282              		.globl	userProcess
 283              		.bss
 284              		.align	3
 285              		.set	.LANCHOR0,. + 0
 288              	userProcess:
 289 0000 00000000 		.zero	8
 289      00000000 
 290              		.text
 291              	.Letext0:
 292              		.file 6 "src/../h/hw.h"
 293              		.file 7 "src/../h/syscall_c.h"
GAS LISTING /tmp/ccN2zSXx.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccN2zSXx.s:9      .text:0000000000000000 idleProcess
     /tmp/ccN2zSXx.s:13     .text:0000000000000000 .L0 
     /tmp/ccN2zSXx.s:14     .text:0000000000000000 .L0 
     /tmp/ccN2zSXx.s:15     .text:0000000000000004 .L0 
     /tmp/ccN2zSXx.s:17     .text:0000000000000008 .L0 
     /tmp/ccN2zSXx.s:19     .text:000000000000000c .L0 
     /tmp/ccN2zSXx.s:22     .text:000000000000000c .L0 
     /tmp/ccN2zSXx.s:23     .text:000000000000000c .L0 
     /tmp/ccN2zSXx.s:24     .text:0000000000000010 .L0 
     /tmp/ccN2zSXx.s:30     .text:0000000000000010 _Z8userModev
     /tmp/ccN2zSXx.s:34     .text:0000000000000010 .L0 
     /tmp/ccN2zSXx.s:35     .text:0000000000000010 .L0 
     /tmp/ccN2zSXx.s:36     .text:0000000000000014 .L0 
     /tmp/ccN2zSXx.s:38     .text:0000000000000018 .L0 
     /tmp/ccN2zSXx.s:40     .text:000000000000001c .L0 
     /tmp/ccN2zSXx.s:43     .text:000000000000001c .L0 
     /tmp/ccN2zSXx.s:44     .text:000000000000001c .L0 
     /tmp/ccN2zSXx.s:45     .text:000000000000001c .L0 
     /tmp/ccN2zSXx.s:51     .text:0000000000000024 .L0 
 src/../h/userMain.h:10     .text:0000000000000024 .L0 
     /tmp/ccN2zSXx.s:57     .text:0000000000000028 .L0 
     /tmp/ccN2zSXx.s:58     .text:000000000000002c .L0 
     /tmp/ccN2zSXx.s:59     .text:000000000000002c .L0 
     /tmp/ccN2zSXx.s:61     .text:0000000000000030 .L0 
     /tmp/ccN2zSXx.s:63     .text:0000000000000034 .L0 
     /tmp/ccN2zSXx.s:69     .text:0000000000000034 _Z15userMainWrapperPv
     /tmp/ccN2zSXx.s:72     .text:0000000000000034 .L0 
     /tmp/ccN2zSXx.s:73     .text:0000000000000034 .L0 
     /tmp/ccN2zSXx.s:74     .text:0000000000000038 .L0 
     /tmp/ccN2zSXx.s:77     .text:0000000000000040 .L0 
     /tmp/ccN2zSXx.s:78     .text:0000000000000040 .L0 
     /tmp/ccN2zSXx.s:80     .text:0000000000000044 .L0 
     /tmp/ccN2zSXx.s:82     .text:0000000000000044 .L0 
     /tmp/ccN2zSXx.s:83     .text:0000000000000044 .L0 
     /tmp/ccN2zSXx.s:86     .text:000000000000004c .L0 
     /tmp/ccN2zSXx.s:87     .text:000000000000004c .L0 
     /tmp/ccN2zSXx.s:90     .text:0000000000000054 .L0 
     /tmp/ccN2zSXx.s:91     .text:0000000000000058 .L0 
     /tmp/ccN2zSXx.s:93     .text:000000000000005c .L0 
     /tmp/ccN2zSXx.s:94     .text:000000000000005c .L0 
     /tmp/ccN2zSXx.s:96     .text:0000000000000060 .L0 
     /tmp/ccN2zSXx.s:98     .text:0000000000000064 .L0 
     /tmp/ccN2zSXx.s:104    .text:0000000000000064 main
     /tmp/ccN2zSXx.s:107    .text:0000000000000064 .L0 
     /tmp/ccN2zSXx.s:108    .text:0000000000000064 .L0 
     /tmp/ccN2zSXx.s:109    .text:0000000000000068 .L0 
     /tmp/ccN2zSXx.s:112    .text:0000000000000070 .L0 
     /tmp/ccN2zSXx.s:113    .text:0000000000000070 .L0 
     /tmp/ccN2zSXx.s:115    .text:0000000000000074 .L0 
     /tmp/ccN2zSXx.s:117    .text:0000000000000074 .L0 
     /tmp/ccN2zSXx.s:118    .text:0000000000000074 .L0 
     /tmp/ccN2zSXx.s:124    .text:0000000000000080 .L0 
     /tmp/ccN2zSXx.s:126    .text:0000000000000080 .L0 
     /tmp/ccN2zSXx.s:131    .text:0000000000000090 .L0 
     /tmp/ccN2zSXx.s:132    .text:0000000000000090 .L0 
GAS LISTING /tmp/ccN2zSXx.s 			page 12


     /tmp/ccN2zSXx.s:135    .text:000000000000009c .L0 
     /tmp/ccN2zSXx.s:136    .text:000000000000009c .L0 
     /tmp/ccN2zSXx.s:142    .text:00000000000000b0 .L0 
     /tmp/ccN2zSXx.s:143    .text:00000000000000b0 .L0 
     /tmp/ccN2zSXx.s:148    .text:00000000000000c4 .L0 
     /tmp/ccN2zSXx.s:149    .text:00000000000000c4 .L0 
     /tmp/ccN2zSXx.s:157    .text:00000000000000d8 .L0 
     /tmp/ccN2zSXx.s:158    .text:00000000000000d8 .L0 
     /tmp/ccN2zSXx.s:159    .text:00000000000000d8 .L0 
     /tmp/ccN2zSXx.s:169    .text:00000000000000e0 .L0 
     /tmp/ccN2zSXx.s:170    .text:00000000000000e0 .L0 
     /tmp/ccN2zSXx.s:176    .text:00000000000000fc .L0 
     /tmp/ccN2zSXx.s:177    .text:00000000000000fc .L0 
     /tmp/ccN2zSXx.s:183    .text:0000000000000118 .L0 
     /tmp/ccN2zSXx.s:184    .text:0000000000000118 .L0 
     /tmp/ccN2zSXx.s:190    .text:0000000000000134 .L0 
     /tmp/ccN2zSXx.s:191    .text:0000000000000134 .L0 
     /tmp/ccN2zSXx.s:198    .text:0000000000000140 .L0 
     /tmp/ccN2zSXx.s:199    .text:0000000000000140 .L0 
     /tmp/ccN2zSXx.s:207    .text:0000000000000148 .L0 
     /tmp/ccN2zSXx.s:208    .text:0000000000000148 .L0 
     /tmp/ccN2zSXx.s:209    .text:0000000000000148 .L0 
     /tmp/ccN2zSXx.s:215    .text:0000000000000150 .L0 
     /tmp/ccN2zSXx.s:216    .text:0000000000000150 .L0 
     /tmp/ccN2zSXx.s:223    .text:000000000000016c .L0 
     /tmp/ccN2zSXx.s:224    .text:000000000000016c .L0 
     /tmp/ccN2zSXx.s:225    .text:000000000000016c .L0 
     /tmp/ccN2zSXx.s:230    .text:0000000000000174 .L0 
     /tmp/ccN2zSXx.s:231    .text:0000000000000174 .L0 
     /tmp/ccN2zSXx.s:236    .text:0000000000000178 .L0 
     /tmp/ccN2zSXx.s:238    .text:000000000000017c .L0 
     /tmp/ccN2zSXx.s:239    .text:000000000000017c .L0 
     /tmp/ccN2zSXx.s:242    .text:0000000000000184 .L0 
     /tmp/ccN2zSXx.s:245    .text:0000000000000188 .L0 
     /tmp/ccN2zSXx.s:246    .text:0000000000000188 .L0 
     /tmp/ccN2zSXx.s:247    .text:0000000000000188 .L0 
     /tmp/ccN2zSXx.s:254    .text:0000000000000194 .L0 
     /tmp/ccN2zSXx.s:255    .text:0000000000000194 .L0 
     /tmp/ccN2zSXx.s:260    .text:0000000000000198 .L0 
     /tmp/ccN2zSXx.s:262    .text:000000000000019c .L0 
     /tmp/ccN2zSXx.s:263    .text:000000000000019c .L0 
     /tmp/ccN2zSXx.s:266    .text:00000000000001a4 .L0 
     /tmp/ccN2zSXx.s:269    .text:00000000000001a8 .L0 
     /tmp/ccN2zSXx.s:270    .text:00000000000001a8 .L0 
     /tmp/ccN2zSXx.s:272    .text:00000000000001b0 .L0 
     /tmp/ccN2zSXx.s:274    .text:00000000000001b4 .L0 
     /tmp/ccN2zSXx.s:275    .text:00000000000001b4 .L0 
     /tmp/ccN2zSXx.s:277    .text:00000000000001b8 .L0 
     /tmp/ccN2zSXx.s:279    .text:00000000000001bc .L0 
     /tmp/ccN2zSXx.s:288    .bss:0000000000000000 userProcess
     /tmp/ccN2zSXx.s:285    .bss:0000000000000000 .LANCHOR0
     /tmp/ccN2zSXx.s:294    .text:00000000000001bc .L0 
     /tmp/ccN2zSXx.s:118    .text:0000000000000074 .L0 
     /tmp/ccN2zSXx.s:132    .text:0000000000000090 .L0 
     /tmp/ccN2zSXx.s:137    .text:00000000000000a0 .L0 
     /tmp/ccN2zSXx.s:144    .text:00000000000000b4 .L0 
     /tmp/ccN2zSXx.s:150    .text:00000000000000c8 .L0 
GAS LISTING /tmp/ccN2zSXx.s 			page 13


     /tmp/ccN2zSXx.s:171    .text:00000000000000e4 .L0 
     /tmp/ccN2zSXx.s:172    .text:00000000000000ec .L0 
     /tmp/ccN2zSXx.s:178    .text:0000000000000100 .L0 
     /tmp/ccN2zSXx.s:179    .text:0000000000000108 .L0 
     /tmp/ccN2zSXx.s:185    .text:000000000000011c .L0 
     /tmp/ccN2zSXx.s:186    .text:0000000000000124 .L0 
     /tmp/ccN2zSXx.s:191    .text:0000000000000134 .L0 
     /tmp/ccN2zSXx.s:217    .text:0000000000000154 .L0 
     /tmp/ccN2zSXx.s:218    .text:000000000000015c .L0 
     /tmp/ccN2zSXx.s:225    .text:000000000000016c .L0 
     /tmp/ccN2zSXx.s:247    .text:0000000000000188 .L0 
     /tmp/ccN2zSXx.s:20     .text:000000000000000c .L2
     /tmp/ccN2zSXx.s:243    .text:0000000000000188 .L9
     /tmp/ccN2zSXx.s:221    .text:000000000000016c .L10
     /tmp/ccN2zSXx.s:267    .text:00000000000001a8 .L11
     /tmp/ccN2zSXx.s:1610   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccN2zSXx.s:2816   .debug_str:00000000000007d2 .LASF168
     /tmp/ccN2zSXx.s:2606   .debug_str:0000000000000226 .LASF169
     /tmp/ccN2zSXx.s:2630   .debug_str:00000000000002cd .LASF170
     /tmp/ccN2zSXx.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccN2zSXx.s:291    .text:00000000000001bc .Letext0
     /tmp/ccN2zSXx.s:2536   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccN2zSXx.s:2636   .debug_str:0000000000000301 .LASF0
     /tmp/ccN2zSXx.s:2664   .debug_str:00000000000003c3 .LASF1
     /tmp/ccN2zSXx.s:2758   .debug_str:0000000000000668 .LASF2
     /tmp/ccN2zSXx.s:2766   .debug_str:00000000000006af .LASF4
     /tmp/ccN2zSXx.s:2650   .debug_str:0000000000000359 .LASF3
     /tmp/ccN2zSXx.s:2546   .debug_str:0000000000000032 .LASF5
     /tmp/ccN2zSXx.s:2726   .debug_str:0000000000000586 .LASF6
     /tmp/ccN2zSXx.s:2718   .debug_str:0000000000000549 .LASF7
     /tmp/ccN2zSXx.s:2658   .debug_str:00000000000003a1 .LASF8
     /tmp/ccN2zSXx.s:2612   .debug_str:0000000000000244 .LASF9
     /tmp/ccN2zSXx.s:2618   .debug_str:0000000000000279 .LASF10
     /tmp/ccN2zSXx.s:2566   .debug_str:00000000000000e1 .LASF11
     /tmp/ccN2zSXx.s:2604   .debug_str:0000000000000217 .LASF12
     /tmp/ccN2zSXx.s:2568   .debug_str:00000000000000f0 .LASF13
     /tmp/ccN2zSXx.s:2564   .debug_str:00000000000000d1 .LASF14
     /tmp/ccN2zSXx.s:2794   .debug_str:000000000000075f .LASF15
     /tmp/ccN2zSXx.s:2590   .debug_str:000000000000019c .LASF16
     /tmp/ccN2zSXx.s:2784   .debug_str:0000000000000725 .LASF17
     /tmp/ccN2zSXx.s:2804   .debug_str:0000000000000796 .LASF18
     /tmp/ccN2zSXx.s:2856   .debug_str:00000000000009c3 .LASF20
     /tmp/ccN2zSXx.s:2584   .debug_str:000000000000016a .LASF19
     /tmp/ccN2zSXx.s:2828   .debug_str:00000000000008de .LASF21
     /tmp/ccN2zSXx.s:2802   .debug_str:0000000000000786 .LASF22
     /tmp/ccN2zSXx.s:2652   .debug_str:000000000000036b .LASF23
     /tmp/ccN2zSXx.s:2598   .debug_str:00000000000001e4 .LASF26
     /tmp/ccN2zSXx.s:2884   .debug_str:0000000000000aa6 .LASF28
     /tmp/ccN2zSXx.s:2620   .debug_str:0000000000000287 .LASF24
     /tmp/ccN2zSXx.s:2670   .debug_str:0000000000000402 .LASF25
     /tmp/ccN2zSXx.s:2692   .debug_str:0000000000000491 .LASF27
     /tmp/ccN2zSXx.s:2882   .debug_str:0000000000000a8b .LASF29
     /tmp/ccN2zSXx.s:2808   .debug_str:00000000000007a6 .LASF30
     /tmp/ccN2zSXx.s:2866   .debug_str:0000000000000a25 .LASF31
     /tmp/ccN2zSXx.s:2834   .debug_str:000000000000091b .LASF32
     /tmp/ccN2zSXx.s:2818   .debug_str:0000000000000896 .LASF33
     /tmp/ccN2zSXx.s:2578   .debug_str:0000000000000146 .LASF34
GAS LISTING /tmp/ccN2zSXx.s 			page 14


     /tmp/ccN2zSXx.s:2762   .debug_str:0000000000000689 .LASF35
     /tmp/ccN2zSXx.s:2560   .debug_str:00000000000000b9 .LASF36
     /tmp/ccN2zSXx.s:2622   .debug_str:0000000000000295 .LASF37
     /tmp/ccN2zSXx.s:2874   .debug_str:0000000000000a59 .LASF38
     /tmp/ccN2zSXx.s:2550   .debug_str:0000000000000044 .LASF39
     /tmp/ccN2zSXx.s:2780   .debug_str:0000000000000710 .LASF171
     /tmp/ccN2zSXx.s:2668   .debug_str:00000000000003fc .LASF112
     /tmp/ccN2zSXx.s:2672   .debug_str:000000000000041c .LASF114
     /tmp/ccN2zSXx.s:2812   .debug_str:00000000000007bd .LASF172
     /tmp/ccN2zSXx.s:2662   .debug_str:00000000000003be .LASF40
     /tmp/ccN2zSXx.s:2868   .debug_str:0000000000000a3b .LASF41
     /tmp/ccN2zSXx.s:2872   .debug_str:0000000000000a4c .LASF42
     /tmp/ccN2zSXx.s:2594   .debug_str:00000000000001b7 .LASF43
     /tmp/ccN2zSXx.s:2538   .debug_str:0000000000000000 .LASF44
     /tmp/ccN2zSXx.s:2646   .debug_str:0000000000000337 .LASF75
     /tmp/ccN2zSXx.s:2628   .debug_str:00000000000002c2 .LASF116
     /tmp/ccN2zSXx.s:2558   .debug_str:00000000000000a3 .LASF118
     /tmp/ccN2zSXx.s:2572   .debug_str:0000000000000113 .LASF81
     /tmp/ccN2zSXx.s:2542   .debug_str:0000000000000018 .LASF45
     /tmp/ccN2zSXx.s:2778   .debug_str:000000000000070a .LASF46
     /tmp/ccN2zSXx.s:2852   .debug_str:00000000000009ab .LASF47
     /tmp/ccN2zSXx.s:2660   .debug_str:00000000000003b4 .LASF48
     /tmp/ccN2zSXx.s:2870   .debug_str:0000000000000a47 .LASF49
     /tmp/ccN2zSXx.s:2782   .debug_str:000000000000071c .LASF50
     /tmp/ccN2zSXx.s:2714   .debug_str:0000000000000528 .LASF51
     /tmp/ccN2zSXx.s:2678   .debug_str:000000000000044b .LASF52
     /tmp/ccN2zSXx.s:2858   .debug_str:00000000000009da .LASF53
     /tmp/ccN2zSXx.s:2582   .debug_str:000000000000015c .LASF54
     /tmp/ccN2zSXx.s:2822   .debug_str:00000000000008b4 .LASF55
     /tmp/ccN2zSXx.s:2774   .debug_str:00000000000006f0 .LASF173
     /tmp/ccN2zSXx.s:2580   .debug_str:0000000000000153 .LASF61
     /tmp/ccN2zSXx.s:2554   .debug_str:0000000000000079 .LASF63
     /tmp/ccN2zSXx.s:2638   .debug_str:000000000000030e .LASF56
     /tmp/ccN2zSXx.s:2846   .debug_str:0000000000000969 .LASF58
     /tmp/ccN2zSXx.s:2640   .debug_str:000000000000031d .LASF57
     /tmp/ccN2zSXx.s:2770   .debug_str:00000000000006bd .LASF59
     /tmp/ccN2zSXx.s:2676   .debug_str:0000000000000441 .LASF60
     /tmp/ccN2zSXx.s:2736   .debug_str:00000000000005bc .LASF62
     /tmp/ccN2zSXx.s:2860   .debug_str:00000000000009e7 .LASF64
     /tmp/ccN2zSXx.s:2682   .debug_str:000000000000045e .LASF65
     /tmp/ccN2zSXx.s:2562   .debug_str:00000000000000c5 .LASF66
     /tmp/ccN2zSXx.s:2614   .debug_str:0000000000000254 .LASF67
     /tmp/ccN2zSXx.s:2820   .debug_str:00000000000008af .LASF68
     /tmp/ccN2zSXx.s:2854   .debug_str:00000000000009b4 .LASF69
     /tmp/ccN2zSXx.s:2800   .debug_str:000000000000077f .LASF70
     /tmp/ccN2zSXx.s:2656   .debug_str:0000000000000390 .LASF71
     /tmp/ccN2zSXx.s:2544   .debug_str:0000000000000023 .LASF72
     /tmp/ccN2zSXx.s:2850   .debug_str:0000000000000991 .LASF73
     /tmp/ccN2zSXx.s:2810   .debug_str:00000000000007b1 .LASF74
     /tmp/ccN2zSXx.s:2798   .debug_str:0000000000000772 .LASF76
     /tmp/ccN2zSXx.s:2752   .debug_str:0000000000000637 .LASF77
     /tmp/ccN2zSXx.s:2864   .debug_str:0000000000000a0a .LASF78
     /tmp/ccN2zSXx.s:2764   .debug_str:00000000000006a1 .LASF79
     /tmp/ccN2zSXx.s:2588   .debug_str:0000000000000183 .LASF80
     /tmp/ccN2zSXx.s:2732   .debug_str:00000000000005a9 .LASF82
     /tmp/ccN2zSXx.s:2634   .debug_str:00000000000002fb .LASF83
     /tmp/ccN2zSXx.s:2728   .debug_str:000000000000058d .LASF84
GAS LISTING /tmp/ccN2zSXx.s 			page 15


     /tmp/ccN2zSXx.s:2540   .debug_str:0000000000000010 .LASF85
     /tmp/ccN2zSXx.s:2876   .debug_str:0000000000000a68 .LASF86
     /tmp/ccN2zSXx.s:2788   .debug_str:0000000000000745 .LASF87
     /tmp/ccN2zSXx.s:2700   .debug_str:00000000000004c4 .LASF88
     /tmp/ccN2zSXx.s:2632   .debug_str:00000000000002f2 .LASF89
     /tmp/ccN2zSXx.s:2796   .debug_str:000000000000076b .LASF90
     /tmp/ccN2zSXx.s:2616   .debug_str:000000000000026c .LASF105
     /tmp/ccN2zSXx.s:2824   .debug_str:00000000000008be .LASF91
     /tmp/ccN2zSXx.s:2844   .debug_str:0000000000000960 .LASF92
     /tmp/ccN2zSXx.s:2792   .debug_str:0000000000000751 .LASF93
     /tmp/ccN2zSXx.s:2684   .debug_str:0000000000000463 .LASF94
     /tmp/ccN2zSXx.s:2742   .debug_str:00000000000005ec .LASF95
     /tmp/ccN2zSXx.s:2720   .debug_str:000000000000055c .LASF96
     /tmp/ccN2zSXx.s:2746   .debug_str:000000000000060f .LASF97
     /tmp/ccN2zSXx.s:2740   .debug_str:00000000000005e2 .LASF98
     /tmp/ccN2zSXx.s:2776   .debug_str:0000000000000701 .LASF99
     /tmp/ccN2zSXx.s:2624   .debug_str:00000000000002ac .LASF100
     /tmp/ccN2zSXx.s:2750   .debug_str:000000000000062c .LASF101
     /tmp/ccN2zSXx.s:2642   .debug_str:000000000000032c .LASF102
     /tmp/ccN2zSXx.s:2686   .debug_str:000000000000046f .LASF103
     /tmp/ccN2zSXx.s:2654   .debug_str:0000000000000387 .LASF104
     /tmp/ccN2zSXx.s:2836   .debug_str:0000000000000929 .LASF106
     /tmp/ccN2zSXx.s:2600   .debug_str:00000000000001f4 .LASF107
     /tmp/ccN2zSXx.s:2814   .debug_str:00000000000007c5 .LASF108
     /tmp/ccN2zSXx.s:2574   .debug_str:0000000000000126 .LASF109
     /tmp/ccN2zSXx.s:2862   .debug_str:0000000000000a02 .LASF110
     /tmp/ccN2zSXx.s:2648   .debug_str:0000000000000344 .LASF111
     /tmp/ccN2zSXx.s:2626   .debug_str:00000000000002b7 .LASF113
     /tmp/ccN2zSXx.s:2716   .debug_str:0000000000000530 .LASF115
     /tmp/ccN2zSXx.s:2832   .debug_str:0000000000000912 .LASF117
     /tmp/ccN2zSXx.s:2754   .debug_str:0000000000000647 .LASF119
     /tmp/ccN2zSXx.s:2878   .debug_str:0000000000000a7a .LASF120
     /tmp/ccN2zSXx.s:2738   .debug_str:00000000000005cc .LASF121
     /tmp/ccN2zSXx.s:2734   .debug_str:00000000000005b5 .LASF122
     /tmp/ccN2zSXx.s:2710   .debug_str:0000000000000509 .LASF123
     /tmp/ccN2zSXx.s:2708   .debug_str:0000000000000502 .LASF124
     /tmp/ccN2zSXx.s:2748   .debug_str:0000000000000618 .LASF125
     /tmp/ccN2zSXx.s:2696   .debug_str:00000000000004b4 .LASF126
     /tmp/ccN2zSXx.s:2772   .debug_str:00000000000006db .LASF127
     /tmp/ccN2zSXx.s:2698   .debug_str:00000000000004bc .LASF128
     /tmp/ccN2zSXx.s:2674   .debug_str:000000000000042c .LASF129
     /tmp/ccN2zSXx.s:2680   .debug_str:0000000000000456 .LASF130
     /tmp/ccN2zSXx.s:2694   .debug_str:000000000000049f .LASF131
     /tmp/ccN2zSXx.s:2880   .debug_str:0000000000000a83 .LASF132
     /tmp/ccN2zSXx.s:2830   .debug_str:00000000000008fd .LASF133
     /tmp/ccN2zSXx.s:2790   .debug_str:000000000000074a .LASF134
     /tmp/ccN2zSXx.s:2724   .debug_str:0000000000000572 .LASF135
     /tmp/ccN2zSXx.s:2768   .debug_str:00000000000006b6 .LASF136
     /tmp/ccN2zSXx.s:2576   .debug_str:0000000000000132 .LASF137
     /tmp/ccN2zSXx.s:2586   .debug_str:000000000000017d .LASF138
     /tmp/ccN2zSXx.s:2760   .debug_str:0000000000000676 .LASF139
     /tmp/ccN2zSXx.s:2644   .debug_str:0000000000000331 .LASF140
     /tmp/ccN2zSXx.s:2706   .debug_str:00000000000004ef .LASF141
     /tmp/ccN2zSXx.s:2548   .debug_str:0000000000000039 .LASF142
     /tmp/ccN2zSXx.s:2840   .debug_str:000000000000093d .LASF143
     /tmp/ccN2zSXx.s:2756   .debug_str:000000000000065d .LASF144
     /tmp/ccN2zSXx.s:2702   .debug_str:00000000000004c9 .LASF145
GAS LISTING /tmp/ccN2zSXx.s 			page 16


     /tmp/ccN2zSXx.s:2848   .debug_str:0000000000000987 .LASF146
     /tmp/ccN2zSXx.s:2602   .debug_str:0000000000000200 .LASF147
     /tmp/ccN2zSXx.s:2842   .debug_str:0000000000000956 .LASF148
     /tmp/ccN2zSXx.s:2556   .debug_str:000000000000008c .LASF149
     /tmp/ccN2zSXx.s:2806   .debug_str:00000000000007a1 .LASF150
     /tmp/ccN2zSXx.s:2610   .debug_str:0000000000000238 .LASF151
     /tmp/ccN2zSXx.s:105    .text:0000000000000064 .LFB35
     /tmp/ccN2zSXx.s:280    .text:00000000000001bc .LFE35
     /tmp/ccN2zSXx.s:2464   .debug_loc:0000000000000000 .LLST0
     /tmp/ccN2zSXx.s:154    .text:00000000000000d8 .LBB12
     /tmp/ccN2zSXx.s:167    .text:00000000000000e0 .LBE12
     /tmp/ccN2zSXx.s:2471   .debug_loc:0000000000000023 .LLST1
     /tmp/ccN2zSXx.s:194    .text:0000000000000140 .LBB14
     /tmp/ccN2zSXx.s:203    .text:0000000000000148 .LBE14
     /tmp/ccN2zSXx.s:2479   .debug_loc:0000000000000047 .LLST2
     /tmp/ccN2zSXx.s:2487   .debug_loc:000000000000006b .LLST3
     /tmp/ccN2zSXx.s:205    .text:0000000000000148 .LBB16
     /tmp/ccN2zSXx.s:213    .text:0000000000000150 .LBE16
     /tmp/ccN2zSXx.s:2494   .debug_loc:000000000000008e .LLST4
     /tmp/ccN2zSXx.s:2502   .debug_loc:00000000000000b2 .LLST5
     /tmp/ccN2zSXx.s:227    .text:0000000000000174 .LBB18
     /tmp/ccN2zSXx.s:234    .text:0000000000000178 .LBE18
     /tmp/ccN2zSXx.s:2509   .debug_loc:00000000000000d5 .LLST6
     /tmp/ccN2zSXx.s:250    .text:0000000000000194 .LBB20
     /tmp/ccN2zSXx.s:258    .text:0000000000000198 .LBE20
     /tmp/ccN2zSXx.s:2516   .debug_loc:00000000000000f8 .LLST7
     /tmp/ccN2zSXx.s:129    .text:0000000000000090 .LVL3
     /tmp/ccN2zSXx.s:140    .text:00000000000000b0 .LVL5
     /tmp/ccN2zSXx.s:146    .text:00000000000000c4 .LVL6
     /tmp/ccN2zSXx.s:152    .text:00000000000000d8 .LVL7
     /tmp/ccN2zSXx.s:174    .text:00000000000000fc .LVL9
     /tmp/ccN2zSXx.s:181    .text:0000000000000118 .LVL10
     /tmp/ccN2zSXx.s:188    .text:0000000000000134 .LVL11
     /tmp/ccN2zSXx.s:220    .text:000000000000016c .LVL15
     /tmp/ccN2zSXx.s:240    .text:0000000000000184 .LVL18
     /tmp/ccN2zSXx.s:264    .text:00000000000001a4 .LVL21
     /tmp/ccN2zSXx.s:2730   .debug_str:000000000000059d .LASF152
     /tmp/ccN2zSXx.s:10     .text:0000000000000000 .LFB34
     /tmp/ccN2zSXx.s:25     .text:0000000000000010 .LFE34
     /tmp/ccN2zSXx.s:2688   .debug_str:0000000000000474 .LASF153
     /tmp/ccN2zSXx.s:2826   .debug_str:00000000000008c8 .LASF154
     /tmp/ccN2zSXx.s:70     .text:0000000000000034 .LFB33
     /tmp/ccN2zSXx.s:99     .text:0000000000000064 .LFE33
     /tmp/ccN2zSXx.s:84     .text:000000000000004c .LVL1
     /tmp/ccN2zSXx.s:88     .text:0000000000000054 .LVL2
     /tmp/ccN2zSXx.s:2704   .debug_str:00000000000004e2 .LASF155
     /tmp/ccN2zSXx.s:31     .text:0000000000000010 .LFB32
     /tmp/ccN2zSXx.s:64     .text:0000000000000034 .LFE32
     /tmp/ccN2zSXx.s:2592   .debug_str:00000000000001b2 .LASF156
     /tmp/ccN2zSXx.s:2838   .debug_str:0000000000000938 .LASF158
     /tmp/ccN2zSXx.s:2608   .debug_str:0000000000000233 .LASF157
     /tmp/ccN2zSXx.s:2786   .debug_str:000000000000073b .LASF159
     /tmp/ccN2zSXx.s:2712   .debug_str:000000000000051d .LASF160
     /tmp/ccN2zSXx.s:2744   .debug_str:00000000000005fc .LASF161
     /tmp/ccN2zSXx.s:2596   .debug_str:00000000000001c3 .LASF162
     /tmp/ccN2zSXx.s:2666   .debug_str:00000000000003d6 .LASF163
     /tmp/ccN2zSXx.s:2570   .debug_str:0000000000000100 .LASF164
GAS LISTING /tmp/ccN2zSXx.s 			page 17


     /tmp/ccN2zSXx.s:2552   .debug_str:0000000000000064 .LASF165
     /tmp/ccN2zSXx.s:2690   .debug_str:0000000000000484 .LASF166
     /tmp/ccN2zSXx.s:2722   .debug_str:0000000000000569 .LASF167
     /tmp/ccN2zSXx.s:138    .text:00000000000000a8 .LVL4
     /tmp/ccN2zSXx.s:164    .text:00000000000000e0 .LVL8
     /tmp/ccN2zSXx.s:193    .text:0000000000000140 .LVL12
     /tmp/ccN2zSXx.s:201    .text:0000000000000148 .LVL13
     /tmp/ccN2zSXx.s:211    .text:0000000000000150 .LVL14
     /tmp/ccN2zSXx.s:226    .text:0000000000000174 .LVL16
     /tmp/ccN2zSXx.s:232    .text:0000000000000178 .LVL17
     /tmp/ccN2zSXx.s:249    .text:0000000000000194 .LVL19
     /tmp/ccN2zSXx.s:256    .text:0000000000000198 .LVL20
     /tmp/ccN2zSXx.s:295    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Z8userMainv
interrupt
_ZN3PCB14createProccessEPFvvEPv
_ZN3PCB7runningE
_ZN3CCB8semInputE
_Z8sem_openPP3SCBj
_ZN3CCB9semOutputE
_ZN3CCB16inputBufferEmptyE
_ZN3CCB9inputBodyEPv
_ZN3CCB12inputProccesE
_Z13thread_createPP3PCBPFvPvES2_
_ZN3CCB10outputBodyEPv
_ZN3CCB13outputProcessE
_ZN9Scheduler11idleProcessE
_Z18thread_create_onlyPP3PCBPFvPvES2_
_Z15thread_dispatchv

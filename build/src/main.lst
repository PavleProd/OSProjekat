GAS LISTING /tmp/ccSxt52B.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z8userModev
   9              	_Z8userModev:
  10              	.LFB30:
  11              		.file 1 "src/../h/userMain.h"
   1:src/../h/userMain.h **** #ifndef USERMAIN_H
   2:src/../h/userMain.h **** #define USERMAIN_H
   3:src/../h/userMain.h **** 
   4:src/../h/userMain.h **** PCB* userProcess;
   5:src/../h/userMain.h **** 
   6:src/../h/userMain.h **** void userMain();
   7:src/../h/userMain.h **** extern "C" void interrupt();
   8:src/../h/userMain.h **** void userMode() {
  12              		.loc 1 8 17
  13              		.cfi_startproc
  14 0000 130101FE 		addi	sp,sp,-32
  15              		.cfi_def_cfa_offset 32
  16 0004 233C8100 		sd	s0,24(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040102 		addi	s0,sp,32
  19              		.cfi_def_cfa 8, 0
   9:src/../h/userMain.h ****     asm volatile("csrw stvec, %0" : : "r" (&interrupt));
  20              		.loc 1 9 5
  21              		.loc 1 9 56 is_stmt 0
  22 000c 97070000 		la	a5,interrupt
  22      83B70700 
  23              	#APP
  24              	# 9 "src/../h/userMain.h" 1
  10              	    Kernel::mc_sstatus(Kernel::BitMaskSstatus::SSTATUS_SPP); // vraticemo se u korisnicki rezim
  25              		csrw stvec, a5
  26              	# 0 "" 2
  27              		.loc 1 10 5 is_stmt 1
  28              	.LVL0:
  29              	#NO_APP
  30              	.LBB12:
  31              	.LBB13:
  32              		.file 2 "src/../h/kernel.h"
   1:src/../h/kernel.h **** #ifndef KERNEL_H
   2:src/../h/kernel.h **** #define KERNEL_H
   3:src/../h/kernel.h **** 
   4:src/../h/kernel.h **** #include "hw.h"
   5:src/../h/kernel.h **** 
   6:src/../h/kernel.h **** class Kernel {
   7:src/../h/kernel.h **** public:
   8:src/../h/kernel.h ****     // postavlja code u registar a0
   9:src/../h/kernel.h ****     static size_t setCode(size_t code) {
  10:src/../h/kernel.h ****         return code;
  11:src/../h/kernel.h ****     }
  12:src/../h/kernel.h **** 
  13:src/../h/kernel.h ****     // kodovi po kojima se prepoznaju sistemski pozivi
  14:src/../h/kernel.h ****     enum sysCallCodes {
  15:src/../h/kernel.h ****         mem_alloc = 0x01,
GAS LISTING /tmp/ccSxt52B.s 			page 2


  16:src/../h/kernel.h ****         mem_free = 0x02,
  17:src/../h/kernel.h ****         thread_create = 0x11,
  18:src/../h/kernel.h ****         thread_exit = 0x12,
  19:src/../h/kernel.h ****         thread_dispatch = 0x13,
  20:src/../h/kernel.h ****         thread_start = 0x14,
  21:src/../h/kernel.h ****         sem_open = 0x21,
  22:src/../h/kernel.h ****         sem_close = 0x22,
  23:src/../h/kernel.h ****         sem_wait = 0x23,
  24:src/../h/kernel.h ****         sem_signal = 0x24,
  25:src/../h/kernel.h ****         time_sleep = 0x31,
  26:src/../h/kernel.h ****         getc = 0x41,
  27:src/../h/kernel.h ****         putc = 0x42
  28:src/../h/kernel.h ****     };
  29:src/../h/kernel.h **** 
  30:src/../h/kernel.h ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  31:src/../h/kernel.h ****     static void popSppSpie();
  32:src/../h/kernel.h **** 
  33:src/../h/kernel.h ****     // cita registar scause (uzrok nastanka prekida)
  34:src/../h/kernel.h ****     static size_t r_scause() {
  35:src/../h/kernel.h ****         size_t volatile scause;
  36:src/../h/kernel.h ****         __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  37:src/../h/kernel.h ****         return scause;
  38:src/../h/kernel.h ****     }
  39:src/../h/kernel.h **** 
  40:src/../h/kernel.h ****     // upisuje u registar scause (uzrok nastanka prekida)
  41:src/../h/kernel.h ****     static void w_scause(size_t scause) {
  42:src/../h/kernel.h ****         __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  43:src/../h/kernel.h ****     }
  44:src/../h/kernel.h **** 
  45:src/../h/kernel.h ****     // cita registar sepc
  46:src/../h/kernel.h ****     static size_t r_sepc() {
  47:src/../h/kernel.h ****         size_t volatile sepc;
  48:src/../h/kernel.h ****         __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
  49:src/../h/kernel.h ****         return sepc;
  50:src/../h/kernel.h ****     }
  51:src/../h/kernel.h **** 
  52:src/../h/kernel.h ****     // upisuje u registar sepc
  53:src/../h/kernel.h ****     static void w_sepc(size_t sepc) {
  54:src/../h/kernel.h ****         __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
  55:src/../h/kernel.h ****     }
  56:src/../h/kernel.h **** 
  57:src/../h/kernel.h ****     // read register stvec
  58:src/../h/kernel.h ****     static size_t r_stvec() {
  59:src/../h/kernel.h ****         size_t volatile stvec;
  60:src/../h/kernel.h ****         __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
  61:src/../h/kernel.h ****         return stvec;
  62:src/../h/kernel.h ****     }
  63:src/../h/kernel.h **** 
  64:src/../h/kernel.h ****     // write register stvec
  65:src/../h/kernel.h ****     static void w_stvec(size_t stvec) {
  66:src/../h/kernel.h ****         __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  67:src/../h/kernel.h ****     }
  68:src/../h/kernel.h **** 
  69:src/../h/kernel.h ****     // read register stval
  70:src/../h/kernel.h ****     static size_t r_stval() {
  71:src/../h/kernel.h ****         size_t volatile stval;
  72:src/../h/kernel.h ****         __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
GAS LISTING /tmp/ccSxt52B.s 			page 3


  73:src/../h/kernel.h ****         return stval;
  74:src/../h/kernel.h ****     }
  75:src/../h/kernel.h **** 
  76:src/../h/kernel.h ****     // write register stval
  77:src/../h/kernel.h ****     static void w_stval(size_t stval) {
  78:src/../h/kernel.h ****         __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
  79:src/../h/kernel.h ****     }
  80:src/../h/kernel.h **** 
  81:src/../h/kernel.h ****     enum BitMaskSip
  82:src/../h/kernel.h ****     {
  83:src/../h/kernel.h ****         SIP_SSIE = (1 << 1), // da li su dozvoljeni softverski prekidi
  84:src/../h/kernel.h ****         SIP_SEIE = (1 << 9), // da li su dozvoljeni spoljasnji hardverski prekidi
  85:src/../h/kernel.h ****     };
  86:src/../h/kernel.h **** 
  87:src/../h/kernel.h ****     // postavljanje odredjenih bitova (BitMaskSip) u registar sip
  88:src/../h/kernel.h ****     static void ms_sip(size_t mask) {
  89:src/../h/kernel.h ****         __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
  90:src/../h/kernel.h ****     }
  91:src/../h/kernel.h **** 
  92:src/../h/kernel.h ****     // brisanje odredjenih bitova (BitMaskSip) iz registra sip
  93:src/../h/kernel.h ****     static void mc_sip(size_t mask) {
  94:src/../h/kernel.h ****         __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
  95:src/../h/kernel.h ****     }
  96:src/../h/kernel.h **** 
  97:src/../h/kernel.h ****     // citanje iz registra sip
  98:src/../h/kernel.h ****     static size_t r_sip() {
  99:src/../h/kernel.h ****         size_t volatile sip;
 100:src/../h/kernel.h ****         __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 101:src/../h/kernel.h ****         return sip;
 102:src/../h/kernel.h ****     }
 103:src/../h/kernel.h **** 
 104:src/../h/kernel.h ****     // upis u registar sip
 105:src/../h/kernel.h ****     static void w_sip(size_t sip) {
 106:src/../h/kernel.h ****         __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 107:src/../h/kernel.h ****     }
 108:src/../h/kernel.h **** 
 109:src/../h/kernel.h ****     enum BitMaskSstatus
 110:src/../h/kernel.h ****     {
 111:src/../h/kernel.h ****         SSTATUS_SIE = (1 << 1), // ako je 0 - maskiranje spoljasnjih prekida u sistemskom rezimu
 112:src/../h/kernel.h ****         SSTATUS_SPIE = (1 << 5), // prethodna vrednost sie
 113:src/../h/kernel.h ****         SSTATUS_SPP = (1 << 8), // u kom rezimu se desio prekid
 114:src/../h/kernel.h ****     };
 115:src/../h/kernel.h **** 
 116:src/../h/kernel.h ****     // mask set register sstatus
 117:src/../h/kernel.h ****     static void ms_sstatus(size_t mask) {
 118:src/../h/kernel.h ****         __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 119:src/../h/kernel.h ****     }
 120:src/../h/kernel.h **** 
 121:src/../h/kernel.h ****     // mask clear register sstatus
 122:src/../h/kernel.h ****     static void mc_sstatus(size_t mask) {
 123:src/../h/kernel.h ****         __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
  33              		.loc 2 123 9
  34              		.loc 2 123 72 is_stmt 0
  35 0018 93070010 		li	a5,256
  36              	#APP
  37              	# 123 "src/../h/kernel.h" 1
 124              	    }
GAS LISTING /tmp/ccSxt52B.s 			page 4


  38              		csrc sstatus, a5
  39              	# 0 "" 2
  40              	.LVL1:
  41              	#NO_APP
  42              	.LBE13:
  43              	.LBE12:
  11:src/../h/userMain.h ****     size_t volatile sepc = Kernel::r_sepc();
  44              		.loc 1 11 5 is_stmt 1
  45              	.LBB14:
  46              	.LBB15:
  47:src/../h/kernel.h ****         __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
  47              		.loc 2 47 9
  48:src/../h/kernel.h ****         return sepc;
  48              		.loc 2 48 9
  48:src/../h/kernel.h ****         return sepc;
  49              		.loc 2 48 68 is_stmt 0
  50              	#APP
  51              	# 48 "src/../h/kernel.h" 1
  52              		csrr a5, sepc
  53              	# 0 "" 2
  54              	#NO_APP
  55 0024 2330F4FE 		sd	a5,-32(s0)
  49:src/../h/kernel.h ****     }
  56              		.loc 2 49 9 is_stmt 1
  49:src/../h/kernel.h ****     }
  57              		.loc 2 49 16 is_stmt 0
  58 0028 833704FE 		ld	a5,-32(s0)
  59              	.LBE15:
  60              	.LBE14:
  61              		.loc 1 11 43
  62 002c 2334F4FE 		sd	a5,-24(s0)
  12:src/../h/userMain.h ****     sepc += 4;
  63              		.loc 1 12 5 is_stmt 1
  64              		.loc 1 12 10 is_stmt 0
  65 0030 833784FE 		ld	a5,-24(s0)
  66 0034 93874700 		addi	a5,a5,4
  67 0038 2334F4FE 		sd	a5,-24(s0)
  13:src/../h/userMain.h ****     Kernel::w_sepc(sepc);
  68              		.loc 1 13 5 is_stmt 1
  69              		.loc 1 13 19 is_stmt 0
  70 003c 833784FE 		ld	a5,-24(s0)
  71              	.LVL2:
  72              	.LBB16:
  73              	.LBB17:
  54:src/../h/kernel.h ****     }
  74              		.loc 2 54 9 is_stmt 1
  54:src/../h/kernel.h ****     }
  75              		.loc 2 54 69 is_stmt 0
  76              	#APP
  77              	# 54 "src/../h/kernel.h" 1
  78              		csrw sepc, a5
  79              	# 0 "" 2
  80              	.LVL3:
  81              	#NO_APP
  82              	.LBE17:
  83              	.LBE16:
  14:src/../h/userMain.h ****     asm volatile("sret");
GAS LISTING /tmp/ccSxt52B.s 			page 5


  84              		.loc 1 14 5 is_stmt 1
  85              		.loc 1 14 25 is_stmt 0
  86              	#APP
  87              	# 14 "src/../h/userMain.h" 1
  15              	}
  88              		sret
  89              	# 0 "" 2
  90              		.loc 1 15 1
  91              	#NO_APP
  92 0048 03348101 		ld	s0,24(sp)
  93              		.cfi_restore 8
  94              		.cfi_def_cfa 2, 32
  95 004c 13010102 		addi	sp,sp,32
  96              		.cfi_def_cfa_offset 0
  97 0050 67800000 		jr	ra
  98              		.cfi_endproc
  99              	.LFE30:
 101              		.align	2
 102              		.globl	idleProcess
 104              	idleProcess:
 105              	.LFB32:
 106              		.file 3 "src/main.cpp"
   1:src/main.cpp  **** #include "../h/hw.h"
   2:src/main.cpp  **** #include "../h/syscall_c.h"
   3:src/main.cpp  **** #include "../h/PCB.h"
   4:src/main.cpp  **** #include "../h/kernel.h"
   5:src/main.cpp  **** #include "../h/SCB.h"
   6:src/main.cpp  **** #include "../h/CCB.h"
   7:src/main.cpp  **** #include "../h/userMain.h"
   8:src/main.cpp  **** 
   9:src/main.cpp  **** // Kernel inicijalizacija
  10:src/main.cpp  **** extern "C" void interrupt();
  11:src/main.cpp  **** extern "C" void idleProcess(void*) {
 107              		.loc 3 11 36 is_stmt 1
 108              		.cfi_startproc
 109 0054 130101FF 		addi	sp,sp,-16
 110              		.cfi_def_cfa_offset 16
 111 0058 23348100 		sd	s0,8(sp)
 112              		.cfi_offset 8, -8
 113 005c 13040101 		addi	s0,sp,16
 114              		.cfi_def_cfa 8, 0
 115              	.L4:
  12:src/main.cpp  ****     while(true) {}
 116              		.loc 3 12 5 discriminator 1
 117              		.loc 3 12 5 discriminator 1
 118 0060 6F000000 		j	.L4
 119              		.cfi_endproc
 120              	.LFE32:
 122              		.align	2
 123              		.globl	_Z15userMainWrapperPv
 125              	_Z15userMainWrapperPv:
 126              	.LFB31:
  16:src/../h/userMain.h **** 
  17:src/../h/userMain.h **** void userMainWrapper(void*) {
 127              		.loc 1 17 29
 128              		.cfi_startproc
 129 0064 130101FF 		addi	sp,sp,-16
GAS LISTING /tmp/ccSxt52B.s 			page 6


 130              		.cfi_def_cfa_offset 16
 131 0068 23341100 		sd	ra,8(sp)
 132 006c 23308100 		sd	s0,0(sp)
 133              		.cfi_offset 1, -8
 134              		.cfi_offset 8, -16
 135 0070 13040101 		addi	s0,sp,16
 136              		.cfi_def_cfa 8, 0
  18:src/../h/userMain.h ****     asm volatile("csrw stvec, %0" : : "r" (&userMode));
 137              		.loc 1 18 5
 138              		.loc 1 18 55 is_stmt 0
 139 0074 97070000 		lla	a5,_Z8userModev
 139      93870700 
 140              	#APP
 141              	# 18 "src/../h/userMain.h" 1
  19              	    asm volatile("ecall"); // da bismo presli u korisnicki rezim
 142              		csrw stvec, a5
 143              	# 0 "" 2
 144              		.loc 1 19 5 is_stmt 1
 145              		.loc 1 19 26 is_stmt 0
 146              	# 19 "src/../h/userMain.h" 1
  20              	    userMain();
 147              		ecall
 148              	# 0 "" 2
 149              		.loc 1 20 5 is_stmt 1
 150              		.loc 1 20 13 is_stmt 0
 151              	#NO_APP
 152 0084 97000000 		call	_Z8userMainv@plt
 152      E7800000 
 153              	.LVL4:
  21:src/../h/userMain.h **** }
 154              		.loc 1 21 1
 155 008c 83308100 		ld	ra,8(sp)
 156              		.cfi_restore 1
 157 0090 03340100 		ld	s0,0(sp)
 158              		.cfi_restore 8
 159              		.cfi_def_cfa 2, 16
 160 0094 13010101 		addi	sp,sp,16
 161              		.cfi_def_cfa_offset 0
 162 0098 67800000 		jr	ra
 163              		.cfi_endproc
 164              	.LFE31:
 166              		.align	2
 167              		.globl	main
 169              	main:
 170              	.LFB33:
  13:src/main.cpp  **** }
  14:src/main.cpp  **** // ------------
  15:src/main.cpp  **** 
  16:src/main.cpp  **** int main() {
 171              		.loc 3 16 12 is_stmt 1
 172              		.cfi_startproc
 173 009c 130101FF 		addi	sp,sp,-16
 174              		.cfi_def_cfa_offset 16
 175 00a0 23341100 		sd	ra,8(sp)
 176 00a4 23308100 		sd	s0,0(sp)
 177              		.cfi_offset 1, -8
 178              		.cfi_offset 8, -16
GAS LISTING /tmp/ccSxt52B.s 			page 7


 179 00a8 13040101 		addi	s0,sp,16
 180              		.cfi_def_cfa 8, 0
  17:src/main.cpp  ****     // Kernel inicijalizacija
  18:src/main.cpp  ****     asm volatile("csrw stvec, %0" : : "r" (&interrupt));
 181              		.loc 3 18 5
 182              		.loc 3 18 56 is_stmt 0
 183 00ac 97070000 		la	a5,interrupt
 183      83B70700 
 184              	#APP
 185              	# 18 "src/main.cpp" 1
  19              	    PCB* main = PCB::createProccess(nullptr, nullptr); // main proces(ne pravimo stek)
 186              		csrw stvec, a5
 187              	# 0 "" 2
 188              		.loc 3 19 5 is_stmt 1
 189              		.loc 3 19 36 is_stmt 0
 190              	#NO_APP
 191 00b8 93050000 		li	a1,0
 192 00bc 13050000 		li	a0,0
 193 00c0 97000000 		call	_ZN3PCB14createProccessEPFvvEPv@plt
 193      E7800000 
 194              	.LVL5:
  20:src/main.cpp  ****     PCB::running = main;
 195              		.loc 3 20 5 is_stmt 1
 196              		.loc 3 20 18 is_stmt 0
 197 00c8 97070000 		la	a5,_ZN3PCB7runningE
 197      83B70700 
 198 00d0 23B0A700 		sd	a0,0(a5)
  21:src/main.cpp  **** 
  22:src/main.cpp  ****     sem_open(&CCB::semInput, 0);
 199              		.loc 3 22 5 is_stmt 1
 200              		.loc 3 22 13 is_stmt 0
 201 00d4 93050000 		li	a1,0
 202 00d8 17050000 		la	a0,_ZN3CCB8semInputE
 202      03350500 
 203              	.LVL6:
 204 00e0 97000000 		call	_Z8sem_openPP3SCBj@plt
 204      E7800000 
 205              	.LVL7:
  23:src/main.cpp  ****     sem_open(&CCB::semOutput, 0);
 206              		.loc 3 23 5 is_stmt 1
 207              		.loc 3 23 13 is_stmt 0
 208 00e8 93050000 		li	a1,0
 209 00ec 17050000 		la	a0,_ZN3CCB9semOutputE
 209      03350500 
 210 00f4 97000000 		call	_Z8sem_openPP3SCBj@plt
 210      E7800000 
 211              	.LVL8:
  24:src/main.cpp  ****     sem_open(&CCB::inputBufferEmpty, 0);
 212              		.loc 3 24 5 is_stmt 1
 213              		.loc 3 24 13 is_stmt 0
 214 00fc 93050000 		li	a1,0
 215 0100 17050000 		la	a0,_ZN3CCB16inputBufferEmptyE
 215      03350500 
 216 0108 97000000 		call	_Z8sem_openPP3SCBj@plt
 216      E7800000 
 217              	.LVL9:
  25:src/main.cpp  **** 
GAS LISTING /tmp/ccSxt52B.s 			page 8


  26:src/main.cpp  ****     Kernel::ms_sstatus(Kernel::SSTATUS_SIE); // dozvoljavaju se prekidi
 218              		.loc 3 26 5 is_stmt 1
 219              	.LBB18:
 220              	.LBB19:
 118:src/../h/kernel.h ****     }
 221              		.loc 2 118 9
 118:src/../h/kernel.h ****     }
 222              		.loc 2 118 72 is_stmt 0
 223 0110 93072000 		li	a5,2
 224              	#APP
 225              	# 118 "src/../h/kernel.h" 1
 226              		csrs sstatus, a5
 227              	# 0 "" 2
 228              	.LVL10:
 229              	#NO_APP
 230              	.LBE19:
 231              	.LBE18:
  27:src/main.cpp  ****     thread_create(&CCB::inputProcces, CCB::inputBody, nullptr); // getc nit (stavljamo je prvi put 
 232              		.loc 3 27 5 is_stmt 1
 233              		.loc 3 27 18 is_stmt 0
 234 0118 13060000 		li	a2,0
 235 011c 97050000 		la	a1,_ZN3CCB9inputBodyEPv
 235      83B50500 
 236 0124 17050000 		la	a0,_ZN3CCB12inputProccesE
 236      03350500 
 237 012c 97000000 		call	_Z13thread_createPP3PCBPFvPvES2_@plt
 237      E7800000 
 238              	.LVL11:
  28:src/main.cpp  ****     thread_create(&CCB::outputProcess, CCB::outputBody, nullptr); // putc nit ( stavljamo je prvi p
 239              		.loc 3 28 5 is_stmt 1
 240              		.loc 3 28 18 is_stmt 0
 241 0134 13060000 		li	a2,0
 242 0138 97050000 		la	a1,_ZN3CCB10outputBodyEPv
 242      83B50500 
 243 0140 17050000 		la	a0,_ZN3CCB13outputProcessE
 243      03350500 
 244 0148 97000000 		call	_Z13thread_createPP3PCBPFvPvES2_@plt
 244      E7800000 
 245              	.LVL12:
  29:src/main.cpp  ****     thread_create_only(&Scheduler::idleProcess, idleProcess, nullptr); // idle nit
 246              		.loc 3 29 5 is_stmt 1
 247              		.loc 3 29 23 is_stmt 0
 248 0150 13060000 		li	a2,0
 249 0154 97050000 		lla	a1,idleProcess
 249      93850500 
 250 015c 17050000 		la	a0,_ZN9Scheduler11idleProcessE
 250      03350500 
 251 0164 97000000 		call	_Z18thread_create_onlyPP3PCBPFvPvES2_@plt
 251      E7800000 
 252              	.LVL13:
  30:src/main.cpp  ****     thread_create(&userProcess, userMainWrapper, nullptr);
 253              		.loc 3 30 5 is_stmt 1
 254              		.loc 3 30 18 is_stmt 0
 255 016c 13060000 		li	a2,0
 256 0170 97050000 		lla	a1,_Z15userMainWrapperPv
 256      93850500 
 257 0178 17050000 		lla	a0,.LANCHOR0
GAS LISTING /tmp/ccSxt52B.s 			page 9


 257      13050500 
 258 0180 97000000 		call	_Z13thread_createPP3PCBPFvPvES2_@plt
 258      E7800000 
 259              	.LVL14:
 260              	.L10:
  31:src/main.cpp  ****     // ----
  32:src/main.cpp  **** 
  33:src/main.cpp  ****     while(!userProcess->isFinished()) {thread_dispatch();}
 261              		.loc 3 33 5 is_stmt 1 discriminator 2
 262              		.loc 3 33 11 discriminator 2
 263              		.loc 3 33 35 is_stmt 0 discriminator 2
 264 0188 97070000 		ld	a5,.LANCHOR0
 264      83B70700 
 265              	.LVL15:
 266              	.LBB20:
 267              	.LBB21:
 268              		.file 4 "src/../h/PCB.h"
   1:src/../h/PCB.h **** #ifndef PCB_H
   2:src/../h/PCB.h **** #define PCB_H
   3:src/../h/PCB.h **** 
   4:src/../h/PCB.h **** #include "hw.h"
   5:src/../h/PCB.h **** 
   6:src/../h/PCB.h **** extern "C" void interruptHandler();
   7:src/../h/PCB.h **** 
   8:src/../h/PCB.h **** class PCB {
   9:src/../h/PCB.h **** friend class Scheduler;
  10:src/../h/PCB.h **** friend void interruptHandler();
  11:src/../h/PCB.h **** friend class Kernel;
  12:src/../h/PCB.h **** friend class SCB;
  13:src/../h/PCB.h **** public:
  14:src/../h/PCB.h ****     // vraca true ako se proces zavrsio, false ako nije
  15:src/../h/PCB.h ****     bool isFinished() const {
  16:src/../h/PCB.h ****         return finished;
 269              		.loc 4 16 9 is_stmt 1 discriminator 2
 270              		.loc 4 16 16 is_stmt 0 discriminator 2
 271 0190 83C78702 		lbu	a5,40(a5)
 272              	.LVL16:
 273              	.LBE21:
 274              	.LBE20:
 275              		.loc 3 33 11 discriminator 2
 276 0194 63980700 		bnez	a5,.L9
 277              		.loc 3 33 40 is_stmt 1 discriminator 1
 278              		.loc 3 33 55 is_stmt 0 discriminator 1
 279 0198 97000000 		call	_Z15thread_dispatchv@plt
 279      E7800000 
 280              	.LVL17:
 281              		.loc 3 33 5 discriminator 1
 282 01a0 6FF09FFE 		j	.L10
 283              	.L9:
  34:src/main.cpp  ****     while(CCB::outputBuffer.peekFront() != 0) {thread_dispatch();}
 284              		.loc 3 34 5 is_stmt 1 discriminator 2
 285              		.loc 3 34 41 discriminator 2
 286              		.loc 3 34 38 is_stmt 0 discriminator 2
 287 01a4 17050000 		la	a0,_ZN3CCB12outputBufferE
 287      03350500 
 288 01ac 97000000 		call	_ZN8IOBuffer9peekFrontEv@plt
 288      E7800000 
GAS LISTING /tmp/ccSxt52B.s 			page 10


 289              	.LVL18:
 290              		.loc 3 34 41 discriminator 2
 291 01b4 63080500 		beqz	a0,.L11
 292              		.loc 3 34 48 is_stmt 1 discriminator 1
 293              		.loc 3 34 63 is_stmt 0 discriminator 1
 294 01b8 97000000 		call	_Z15thread_dispatchv@plt
 294      E7800000 
 295              	.LVL19:
 296              		.loc 3 34 5 discriminator 1
 297 01c0 6FF05FFE 		j	.L9
 298              	.L11:
  35:src/main.cpp  ****     return 0;
 299              		.loc 3 35 5 is_stmt 1
  36:src/main.cpp  **** }...
 300              		.loc 3 36 1 is_stmt 0
 301 01c4 13050000 		li	a0,0
 302 01c8 83308100 		ld	ra,8(sp)
 303              		.cfi_restore 1
 304 01cc 03340100 		ld	s0,0(sp)
 305              		.cfi_restore 8
 306              		.cfi_def_cfa 2, 16
 307 01d0 13010101 		addi	sp,sp,16
 308              		.cfi_def_cfa_offset 0
 309 01d4 67800000 		jr	ra
 310              		.cfi_endproc
 311              	.LFE33:
 313              		.globl	userProcess
 314              		.bss
 315              		.align	3
 316              		.set	.LANCHOR0,. + 0
 319              	userProcess:
 320 0000 00000000 		.zero	8
 320      00000000 
 321              		.text
 322              	.Letext0:
 323              		.file 5 "src/../h/hw.h"
 324              		.file 6 "src/../h/CCB.h"
 325              		.file 7 "src/../h/syscall_c.h"
GAS LISTING /tmp/ccSxt52B.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccSxt52B.s:9      .text:0000000000000000 _Z8userModev
     /tmp/ccSxt52B.s:13     .text:0000000000000000 .L0 
     /tmp/ccSxt52B.s:14     .text:0000000000000000 .L0 
     /tmp/ccSxt52B.s:15     .text:0000000000000004 .L0 
     /tmp/ccSxt52B.s:17     .text:0000000000000008 .L0 
     /tmp/ccSxt52B.s:19     .text:000000000000000c .L0 
     /tmp/ccSxt52B.s:21     .text:000000000000000c .L0 
     /tmp/ccSxt52B.s:22     .text:000000000000000c .L0 
     /tmp/ccSxt52B.s:33     .text:0000000000000018 .L0 
     /tmp/ccSxt52B.s:34     .text:0000000000000018 .L0 
     /tmp/ccSxt52B.s:35     .text:0000000000000018 .L0 
     /tmp/ccSxt52B.s:47     .text:0000000000000020 .L0 
     /tmp/ccSxt52B.s:48     .text:0000000000000020 .L0 
     /tmp/ccSxt52B.s:49     .text:0000000000000020 .L0 
   src/../h/kernel.h:48     .text:0000000000000020 .L0 
     /tmp/ccSxt52B.s:57     .text:0000000000000028 .L0 
     /tmp/ccSxt52B.s:58     .text:0000000000000028 .L0 
     /tmp/ccSxt52B.s:62     .text:000000000000002c .L0 
     /tmp/ccSxt52B.s:64     .text:0000000000000030 .L0 
     /tmp/ccSxt52B.s:65     .text:0000000000000030 .L0 
     /tmp/ccSxt52B.s:69     .text:000000000000003c .L0 
     /tmp/ccSxt52B.s:70     .text:000000000000003c .L0 
     /tmp/ccSxt52B.s:75     .text:0000000000000040 .L0 
   src/../h/kernel.h:54     .text:0000000000000040 .L0 
     /tmp/ccSxt52B.s:85     .text:0000000000000044 .L0 
 src/../h/userMain.h:14     .text:0000000000000044 .L0 
     /tmp/ccSxt52B.s:92     .text:0000000000000048 .L0 
     /tmp/ccSxt52B.s:93     .text:000000000000004c .L0 
     /tmp/ccSxt52B.s:94     .text:000000000000004c .L0 
     /tmp/ccSxt52B.s:96     .text:0000000000000050 .L0 
     /tmp/ccSxt52B.s:98     .text:0000000000000054 .L0 
     /tmp/ccSxt52B.s:104    .text:0000000000000054 idleProcess
     /tmp/ccSxt52B.s:108    .text:0000000000000054 .L0 
     /tmp/ccSxt52B.s:109    .text:0000000000000054 .L0 
     /tmp/ccSxt52B.s:110    .text:0000000000000058 .L0 
     /tmp/ccSxt52B.s:112    .text:000000000000005c .L0 
     /tmp/ccSxt52B.s:114    .text:0000000000000060 .L0 
     /tmp/ccSxt52B.s:117    .text:0000000000000060 .L0 
     /tmp/ccSxt52B.s:118    .text:0000000000000060 .L0 
     /tmp/ccSxt52B.s:119    .text:0000000000000064 .L0 
     /tmp/ccSxt52B.s:125    .text:0000000000000064 _Z15userMainWrapperPv
     /tmp/ccSxt52B.s:128    .text:0000000000000064 .L0 
     /tmp/ccSxt52B.s:129    .text:0000000000000064 .L0 
     /tmp/ccSxt52B.s:130    .text:0000000000000068 .L0 
     /tmp/ccSxt52B.s:133    .text:0000000000000070 .L0 
     /tmp/ccSxt52B.s:134    .text:0000000000000070 .L0 
     /tmp/ccSxt52B.s:136    .text:0000000000000074 .L0 
     /tmp/ccSxt52B.s:138    .text:0000000000000074 .L0 
     /tmp/ccSxt52B.s:139    .text:0000000000000074 .L0 
     /tmp/ccSxt52B.s:145    .text:0000000000000080 .L0 
 src/../h/userMain.h:19     .text:0000000000000080 .L0 
     /tmp/ccSxt52B.s:150    .text:0000000000000084 .L0 
     /tmp/ccSxt52B.s:152    .text:0000000000000084 .L0 
     /tmp/ccSxt52B.s:155    .text:000000000000008c .L0 
     /tmp/ccSxt52B.s:156    .text:0000000000000090 .L0 
GAS LISTING /tmp/ccSxt52B.s 			page 12


     /tmp/ccSxt52B.s:158    .text:0000000000000094 .L0 
     /tmp/ccSxt52B.s:159    .text:0000000000000094 .L0 
     /tmp/ccSxt52B.s:161    .text:0000000000000098 .L0 
     /tmp/ccSxt52B.s:163    .text:000000000000009c .L0 
     /tmp/ccSxt52B.s:169    .text:000000000000009c main
     /tmp/ccSxt52B.s:172    .text:000000000000009c .L0 
     /tmp/ccSxt52B.s:173    .text:000000000000009c .L0 
     /tmp/ccSxt52B.s:174    .text:00000000000000a0 .L0 
     /tmp/ccSxt52B.s:177    .text:00000000000000a8 .L0 
     /tmp/ccSxt52B.s:178    .text:00000000000000a8 .L0 
     /tmp/ccSxt52B.s:180    .text:00000000000000ac .L0 
     /tmp/ccSxt52B.s:182    .text:00000000000000ac .L0 
     /tmp/ccSxt52B.s:183    .text:00000000000000ac .L0 
     /tmp/ccSxt52B.s:189    .text:00000000000000b8 .L0 
     /tmp/ccSxt52B.s:191    .text:00000000000000b8 .L0 
     /tmp/ccSxt52B.s:196    .text:00000000000000c8 .L0 
     /tmp/ccSxt52B.s:197    .text:00000000000000c8 .L0 
     /tmp/ccSxt52B.s:200    .text:00000000000000d4 .L0 
     /tmp/ccSxt52B.s:201    .text:00000000000000d4 .L0 
     /tmp/ccSxt52B.s:207    .text:00000000000000e8 .L0 
     /tmp/ccSxt52B.s:208    .text:00000000000000e8 .L0 
     /tmp/ccSxt52B.s:213    .text:00000000000000fc .L0 
     /tmp/ccSxt52B.s:214    .text:00000000000000fc .L0 
     /tmp/ccSxt52B.s:221    .text:0000000000000110 .L0 
     /tmp/ccSxt52B.s:222    .text:0000000000000110 .L0 
     /tmp/ccSxt52B.s:223    .text:0000000000000110 .L0 
     /tmp/ccSxt52B.s:233    .text:0000000000000118 .L0 
     /tmp/ccSxt52B.s:234    .text:0000000000000118 .L0 
     /tmp/ccSxt52B.s:240    .text:0000000000000134 .L0 
     /tmp/ccSxt52B.s:241    .text:0000000000000134 .L0 
     /tmp/ccSxt52B.s:247    .text:0000000000000150 .L0 
     /tmp/ccSxt52B.s:248    .text:0000000000000150 .L0 
     /tmp/ccSxt52B.s:254    .text:000000000000016c .L0 
     /tmp/ccSxt52B.s:255    .text:000000000000016c .L0 
     /tmp/ccSxt52B.s:262    .text:0000000000000188 .L0 
     /tmp/ccSxt52B.s:263    .text:0000000000000188 .L0 
     /tmp/ccSxt52B.s:264    .text:0000000000000188 .L0 
     /tmp/ccSxt52B.s:270    .text:0000000000000190 .L0 
     /tmp/ccSxt52B.s:271    .text:0000000000000190 .L0 
     /tmp/ccSxt52B.s:276    .text:0000000000000194 .L0 
     /tmp/ccSxt52B.s:278    .text:0000000000000198 .L0 
     /tmp/ccSxt52B.s:279    .text:0000000000000198 .L0 
     /tmp/ccSxt52B.s:282    .text:00000000000001a0 .L0 
     /tmp/ccSxt52B.s:285    .text:00000000000001a4 .L0 
     /tmp/ccSxt52B.s:286    .text:00000000000001a4 .L0 
     /tmp/ccSxt52B.s:287    .text:00000000000001a4 .L0 
     /tmp/ccSxt52B.s:291    .text:00000000000001b4 .L0 
     /tmp/ccSxt52B.s:293    .text:00000000000001b8 .L0 
     /tmp/ccSxt52B.s:294    .text:00000000000001b8 .L0 
     /tmp/ccSxt52B.s:297    .text:00000000000001c0 .L0 
     /tmp/ccSxt52B.s:300    .text:00000000000001c4 .L0 
     /tmp/ccSxt52B.s:301    .text:00000000000001c4 .L0 
     /tmp/ccSxt52B.s:303    .text:00000000000001cc .L0 
     /tmp/ccSxt52B.s:305    .text:00000000000001d0 .L0 
     /tmp/ccSxt52B.s:306    .text:00000000000001d0 .L0 
     /tmp/ccSxt52B.s:308    .text:00000000000001d4 .L0 
     /tmp/ccSxt52B.s:310    .text:00000000000001d8 .L0 
GAS LISTING /tmp/ccSxt52B.s 			page 13


     /tmp/ccSxt52B.s:319    .bss:0000000000000000 userProcess
     /tmp/ccSxt52B.s:316    .bss:0000000000000000 .LANCHOR0
     /tmp/ccSxt52B.s:326    .text:00000000000001d8 .L0 
     /tmp/ccSxt52B.s:22     .text:000000000000000c .L0 
     /tmp/ccSxt52B.s:139    .text:0000000000000074 .L0 
     /tmp/ccSxt52B.s:183    .text:00000000000000ac .L0 
     /tmp/ccSxt52B.s:197    .text:00000000000000c8 .L0 
     /tmp/ccSxt52B.s:202    .text:00000000000000d8 .L0 
     /tmp/ccSxt52B.s:209    .text:00000000000000ec .L0 
     /tmp/ccSxt52B.s:215    .text:0000000000000100 .L0 
     /tmp/ccSxt52B.s:235    .text:000000000000011c .L0 
     /tmp/ccSxt52B.s:236    .text:0000000000000124 .L0 
     /tmp/ccSxt52B.s:242    .text:0000000000000138 .L0 
     /tmp/ccSxt52B.s:243    .text:0000000000000140 .L0 
     /tmp/ccSxt52B.s:249    .text:0000000000000154 .L0 
     /tmp/ccSxt52B.s:250    .text:000000000000015c .L0 
     /tmp/ccSxt52B.s:256    .text:0000000000000170 .L0 
     /tmp/ccSxt52B.s:257    .text:0000000000000178 .L0 
     /tmp/ccSxt52B.s:264    .text:0000000000000188 .L0 
     /tmp/ccSxt52B.s:287    .text:00000000000001a4 .L0 
     /tmp/ccSxt52B.s:115    .text:0000000000000060 .L4
     /tmp/ccSxt52B.s:283    .text:00000000000001a4 .L9
     /tmp/ccSxt52B.s:260    .text:0000000000000188 .L10
     /tmp/ccSxt52B.s:298    .text:00000000000001c4 .L11
     /tmp/ccSxt52B.s:1476   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccSxt52B.s:2672   .debug_str:000000000000069a .LASF138
     /tmp/ccSxt52B.s:2502   .debug_str:00000000000001f3 .LASF139
     /tmp/ccSxt52B.s:2642   .debug_str:00000000000005e4 .LASF140
     /tmp/ccSxt52B.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccSxt52B.s:322    .text:00000000000001d8 .Letext0
     /tmp/ccSxt52B.s:2440   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccSxt52B.s:2520   .debug_str:0000000000000260 .LASF0
     /tmp/ccSxt52B.s:2548   .debug_str:000000000000031a .LASF1
     /tmp/ccSxt52B.s:2626   .debug_str:0000000000000559 .LASF2
     /tmp/ccSxt52B.s:2630   .debug_str:000000000000057a .LASF4
     /tmp/ccSxt52B.s:2532   .debug_str:00000000000002b3 .LASF3
     /tmp/ccSxt52B.s:2446   .debug_str:000000000000001b .LASF5
     /tmp/ccSxt52B.s:2596   .debug_str:000000000000047d .LASF6
     /tmp/ccSxt52B.s:2540   .debug_str:00000000000002f3 .LASF7
     /tmp/ccSxt52B.s:2508   .debug_str:0000000000000211 .LASF8
     /tmp/ccSxt52B.s:2510   .debug_str:0000000000000221 .LASF9
     /tmp/ccSxt52B.s:2462   .debug_str:00000000000000b2 .LASF10
     /tmp/ccSxt52B.s:2500   .debug_str:00000000000001e4 .LASF11
     /tmp/ccSxt52B.s:2466   .debug_str:00000000000000c6 .LASF12
     /tmp/ccSxt52B.s:2460   .debug_str:00000000000000a2 .LASF13
     /tmp/ccSxt52B.s:2656   .debug_str:0000000000000647 .LASF14
     /tmp/ccSxt52B.s:2488   .debug_str:000000000000016e .LASF15
     /tmp/ccSxt52B.s:2648   .debug_str:0000000000000617 .LASF16
     /tmp/ccSxt52B.s:2662   .debug_str:000000000000066a .LASF17
     /tmp/ccSxt52B.s:2710   .debug_str:0000000000000876 .LASF19
     /tmp/ccSxt52B.s:2484   .debug_str:0000000000000155 .LASF18
     /tmp/ccSxt52B.s:2682   .debug_str:00000000000007af .LASF20
     /tmp/ccSxt52B.s:2660   .debug_str:000000000000065a .LASF21
     /tmp/ccSxt52B.s:2534   .debug_str:00000000000002c5 .LASF22
     /tmp/ccSxt52B.s:2494   .debug_str:00000000000001b1 .LASF25
     /tmp/ccSxt52B.s:2736   .debug_str:0000000000000944 .LASF27
     /tmp/ccSxt52B.s:2512   .debug_str:000000000000022f .LASF23
GAS LISTING /tmp/ccSxt52B.s 			page 14


     /tmp/ccSxt52B.s:2554   .debug_str:0000000000000359 .LASF24
     /tmp/ccSxt52B.s:2572   .debug_str:00000000000003d0 .LASF26
     /tmp/ccSxt52B.s:2734   .debug_str:0000000000000929 .LASF28
     /tmp/ccSxt52B.s:2664   .debug_str:0000000000000675 .LASF29
     /tmp/ccSxt52B.s:2720   .debug_str:00000000000008c6 .LASF30
     /tmp/ccSxt52B.s:2692   .debug_str:00000000000007f6 .LASF31
     /tmp/ccSxt52B.s:2674   .debug_str:000000000000075e .LASF32
     /tmp/ccSxt52B.s:2730   .debug_str:0000000000000912 .LASF33
     /tmp/ccSxt52B.s:2450   .debug_str:000000000000002d .LASF34
     /tmp/ccSxt52B.s:2644   .debug_str:0000000000000602 .LASF141
     /tmp/ccSxt52B.s:2552   .debug_str:0000000000000353 .LASF67
     /tmp/ccSxt52B.s:2556   .debug_str:0000000000000373 .LASF69
     /tmp/ccSxt52B.s:2668   .debug_str:0000000000000685 .LASF142
     /tmp/ccSxt52B.s:2546   .debug_str:0000000000000315 .LASF35
     /tmp/ccSxt52B.s:2724   .debug_str:00000000000008f4 .LASF36
     /tmp/ccSxt52B.s:2728   .debug_str:0000000000000905 .LASF37
     /tmp/ccSxt52B.s:2490   .debug_str:0000000000000184 .LASF38
     /tmp/ccSxt52B.s:2442   .debug_str:0000000000000000 .LASF39
     /tmp/ccSxt52B.s:2528   .debug_str:0000000000000291 .LASF76
     /tmp/ccSxt52B.s:2516   .debug_str:0000000000000248 .LASF71
     /tmp/ccSxt52B.s:2458   .debug_str:000000000000008c .LASF73
     /tmp/ccSxt52B.s:2472   .debug_str:00000000000000f2 .LASF143
     /tmp/ccSxt52B.s:2444   .debug_str:0000000000000010 .LASF40
     /tmp/ccSxt52B.s:2568   .debug_str:00000000000003ba .LASF41
     /tmp/ccSxt52B.s:2708   .debug_str:000000000000086d .LASF42
     /tmp/ccSxt52B.s:2542   .debug_str:0000000000000306 .LASF43
     /tmp/ccSxt52B.s:2726   .debug_str:0000000000000900 .LASF44
     /tmp/ccSxt52B.s:2646   .debug_str:000000000000060e .LASF45
     /tmp/ccSxt52B.s:2592   .debug_str:000000000000045c .LASF46
     /tmp/ccSxt52B.s:2562   .debug_str:00000000000003a2 .LASF47
     /tmp/ccSxt52B.s:2712   .debug_str:000000000000088d .LASF48
     /tmp/ccSxt52B.s:2482   .debug_str:0000000000000147 .LASF49
     /tmp/ccSxt52B.s:2678   .debug_str:000000000000078f .LASF50
     /tmp/ccSxt52B.s:2640   .debug_str:00000000000005d3 .LASF144
     /tmp/ccSxt52B.s:2480   .debug_str:000000000000013e .LASF56
     /tmp/ccSxt52B.s:2454   .debug_str:0000000000000062 .LASF58
     /tmp/ccSxt52B.s:2522   .debug_str:000000000000026d .LASF51
     /tmp/ccSxt52B.s:2704   .debug_str:0000000000000845 .LASF53
     /tmp/ccSxt52B.s:2524   .debug_str:000000000000027c .LASF52
     /tmp/ccSxt52B.s:2636   .debug_str:00000000000005a0 .LASF54
     /tmp/ccSxt52B.s:2560   .debug_str:0000000000000398 .LASF55
     /tmp/ccSxt52B.s:2608   .debug_str:00000000000004c9 .LASF57
     /tmp/ccSxt52B.s:2714   .debug_str:000000000000089a .LASF59
     /tmp/ccSxt52B.s:2566   .debug_str:00000000000003b5 .LASF60
     /tmp/ccSxt52B.s:2658   .debug_str:0000000000000653 .LASF61
     /tmp/ccSxt52B.s:2694   .debug_str:0000000000000804 .LASF145
     /tmp/ccSxt52B.s:2496   .debug_str:00000000000001c1 .LASF62
     /tmp/ccSxt52B.s:2670   .debug_str:000000000000068d .LASF63
     /tmp/ccSxt52B.s:2474   .debug_str:0000000000000105 .LASF64
     /tmp/ccSxt52B.s:2716   .debug_str:00000000000008b5 .LASF65
     /tmp/ccSxt52B.s:2530   .debug_str:000000000000029e .LASF66
     /tmp/ccSxt52B.s:2514   .debug_str:000000000000023d .LASF68
     /tmp/ccSxt52B.s:2594   .debug_str:0000000000000464 .LASF70
     /tmp/ccSxt52B.s:2688   .debug_str:00000000000007e8 .LASF72
     /tmp/ccSxt52B.s:2622   .debug_str:0000000000000538 .LASF74
     /tmp/ccSxt52B.s:2620   .debug_str:000000000000052f .LASF75
     /tmp/ccSxt52B.s:2610   .debug_str:00000000000004d9 .LASF77
GAS LISTING /tmp/ccSxt52B.s 			page 15


     /tmp/ccSxt52B.s:2606   .debug_str:00000000000004c2 .LASF78
     /tmp/ccSxt52B.s:2590   .debug_str:0000000000000448 .LASF79
     /tmp/ccSxt52B.s:2588   .debug_str:0000000000000441 .LASF80
     /tmp/ccSxt52B.s:2618   .debug_str:000000000000051b .LASF81
     /tmp/ccSxt52B.s:2576   .debug_str:00000000000003f3 .LASF82
     /tmp/ccSxt52B.s:2638   .debug_str:00000000000005be .LASF83
     /tmp/ccSxt52B.s:2578   .debug_str:00000000000003fb .LASF84
     /tmp/ccSxt52B.s:2558   .debug_str:0000000000000383 .LASF85
     /tmp/ccSxt52B.s:2564   .debug_str:00000000000003ad .LASF86
     /tmp/ccSxt52B.s:2574   .debug_str:00000000000003de .LASF87
     /tmp/ccSxt52B.s:2732   .debug_str:0000000000000921 .LASF88
     /tmp/ccSxt52B.s:2686   .debug_str:00000000000007d3 .LASF89
     /tmp/ccSxt52B.s:2652   .debug_str:0000000000000632 .LASF90
     /tmp/ccSxt52B.s:2600   .debug_str:0000000000000499 .LASF91
     /tmp/ccSxt52B.s:2634   .debug_str:0000000000000599 .LASF92
     /tmp/ccSxt52B.s:2478   .debug_str:000000000000012a .LASF93
     /tmp/ccSxt52B.s:2486   .debug_str:0000000000000168 .LASF94
     /tmp/ccSxt52B.s:2628   .debug_str:0000000000000567 .LASF95
     /tmp/ccSxt52B.s:2526   .debug_str:000000000000028b .LASF96
     /tmp/ccSxt52B.s:2586   .debug_str:000000000000042e .LASF97
     /tmp/ccSxt52B.s:2448   .debug_str:0000000000000022 .LASF98
     /tmp/ccSxt52B.s:2698   .debug_str:0000000000000818 .LASF99
     /tmp/ccSxt52B.s:2624   .debug_str:000000000000054e .LASF100
     /tmp/ccSxt52B.s:2582   .debug_str:0000000000000408 .LASF101
     /tmp/ccSxt52B.s:2706   .debug_str:0000000000000863 .LASF102
     /tmp/ccSxt52B.s:2498   .debug_str:00000000000001cd .LASF103
     /tmp/ccSxt52B.s:2700   .debug_str:0000000000000831 .LASF104
     /tmp/ccSxt52B.s:2456   .debug_str:0000000000000075 .LASF105
     /tmp/ccSxt52B.s:2536   .debug_str:00000000000002e1 .LASF106
     /tmp/ccSxt52B.s:2690   .debug_str:00000000000007f1 .LASF146
     /tmp/ccSxt52B.s:2464   .debug_str:00000000000000c1 .LASF107
     /tmp/ccSxt52B.s:2544   .debug_str:0000000000000310 .LASF108
     /tmp/ccSxt52B.s:2650   .debug_str:000000000000062d .LASF109
     /tmp/ccSxt52B.s:2580   .debug_str:0000000000000403 .LASF110
     /tmp/ccSxt52B.s:2470   .debug_str:00000000000000e9 .LASF111
     /tmp/ccSxt52B.s:2632   .debug_str:0000000000000581 .LASF112
     /tmp/ccSxt52B.s:2602   .debug_str:00000000000004ad .LASF113
     /tmp/ccSxt52B.s:2676   .debug_str:0000000000000777 .LASF114
     /tmp/ccSxt52B.s:2702   .debug_str:000000000000083b .LASF115
     /tmp/ccSxt52B.s:2476   .debug_str:0000000000000111 .LASF116
     /tmp/ccSxt52B.s:2718   .debug_str:00000000000008bd .LASF117
     /tmp/ccSxt52B.s:2722   .debug_str:00000000000008dc .LASF118
     /tmp/ccSxt52B.s:2666   .debug_str:0000000000000680 .LASF119
     /tmp/ccSxt52B.s:2506   .debug_str:0000000000000205 .LASF120
     /tmp/ccSxt52B.s:170    .text:000000000000009c .LFB33
     /tmp/ccSxt52B.s:311    .text:00000000000001d8 .LFE33
     /tmp/ccSxt52B.s:2389   .debug_loc:0000000000000000 .LLST2
     /tmp/ccSxt52B.s:219    .text:0000000000000110 .LBB18
     /tmp/ccSxt52B.s:231    .text:0000000000000118 .LBE18
     /tmp/ccSxt52B.s:2396   .debug_loc:0000000000000023 .LLST3
     /tmp/ccSxt52B.s:266    .text:0000000000000190 .LBB20
     /tmp/ccSxt52B.s:274    .text:0000000000000194 .LBE20
     /tmp/ccSxt52B.s:2404   .debug_loc:0000000000000047 .LLST4
     /tmp/ccSxt52B.s:194    .text:00000000000000c8 .LVL5
     /tmp/ccSxt52B.s:205    .text:00000000000000e8 .LVL7
     /tmp/ccSxt52B.s:211    .text:00000000000000fc .LVL8
     /tmp/ccSxt52B.s:217    .text:0000000000000110 .LVL9
GAS LISTING /tmp/ccSxt52B.s 			page 16


     /tmp/ccSxt52B.s:238    .text:0000000000000134 .LVL11
     /tmp/ccSxt52B.s:245    .text:0000000000000150 .LVL12
     /tmp/ccSxt52B.s:252    .text:000000000000016c .LVL13
     /tmp/ccSxt52B.s:259    .text:0000000000000188 .LVL14
     /tmp/ccSxt52B.s:280    .text:00000000000001a0 .LVL17
     /tmp/ccSxt52B.s:289    .text:00000000000001b4 .LVL18
     /tmp/ccSxt52B.s:295    .text:00000000000001c0 .LVL19
     /tmp/ccSxt52B.s:2604   .debug_str:00000000000004b6 .LASF121
     /tmp/ccSxt52B.s:105    .text:0000000000000054 .LFB32
     /tmp/ccSxt52B.s:120    .text:0000000000000064 .LFE32
     /tmp/ccSxt52B.s:2570   .debug_str:00000000000003c0 .LASF122
     /tmp/ccSxt52B.s:2680   .debug_str:0000000000000799 .LASF123
     /tmp/ccSxt52B.s:126    .text:0000000000000064 .LFB31
     /tmp/ccSxt52B.s:164    .text:000000000000009c .LFE31
     /tmp/ccSxt52B.s:153    .text:000000000000008c .LVL4
     /tmp/ccSxt52B.s:2538   .debug_str:00000000000002ea .LASF124
     /tmp/ccSxt52B.s:2584   .debug_str:0000000000000421 .LASF125
     /tmp/ccSxt52B.s:10     .text:0000000000000000 .LFB30
     /tmp/ccSxt52B.s:99     .text:0000000000000054 .LFE30
     /tmp/ccSxt52B.s:2684   .debug_str:00000000000007ce .LASF126
     /tmp/ccSxt52B.s:30     .text:0000000000000018 .LBB12
     /tmp/ccSxt52B.s:43     .text:0000000000000020 .LBE12
     /tmp/ccSxt52B.s:2411   .debug_loc:000000000000006a .LLST0
     /tmp/ccSxt52B.s:45     .text:0000000000000020 .LBB14
     /tmp/ccSxt52B.s:60     .text:000000000000002c .LBE14
     /tmp/ccSxt52B.s:72     .text:0000000000000040 .LBB16
     /tmp/ccSxt52B.s:83     .text:0000000000000044 .LBE16
     /tmp/ccSxt52B.s:2420   .debug_loc:0000000000000090 .LLST1
     /tmp/ccSxt52B.s:2696   .debug_str:0000000000000813 .LASF127
     /tmp/ccSxt52B.s:2504   .debug_str:0000000000000200 .LASF147
     /tmp/ccSxt52B.s:2614   .debug_str:00000000000004ff .LASF128
     /tmp/ccSxt52B.s:2616   .debug_str:0000000000000512 .LASF130
     /tmp/ccSxt52B.s:2492   .debug_str:0000000000000190 .LASF129
     /tmp/ccSxt52B.s:2654   .debug_str:0000000000000639 .LASF131
     /tmp/ccSxt52B.s:2550   .debug_str:000000000000032d .LASF132
     /tmp/ccSxt52B.s:2468   .debug_str:00000000000000d6 .LASF133
     /tmp/ccSxt52B.s:2452   .debug_str:000000000000004d .LASF134
     /tmp/ccSxt52B.s:2612   .debug_str:00000000000004ef .LASF135
     /tmp/ccSxt52B.s:2518   .debug_str:0000000000000253 .LASF136
     /tmp/ccSxt52B.s:2598   .debug_str:0000000000000490 .LASF137
     /tmp/ccSxt52B.s:203    .text:00000000000000e0 .LVL6
     /tmp/ccSxt52B.s:228    .text:0000000000000118 .LVL10
     /tmp/ccSxt52B.s:265    .text:0000000000000190 .LVL15
     /tmp/ccSxt52B.s:272    .text:0000000000000194 .LVL16
     /tmp/ccSxt52B.s:28     .text:0000000000000018 .LVL0
     /tmp/ccSxt52B.s:40     .text:0000000000000020 .LVL1
     /tmp/ccSxt52B.s:71     .text:0000000000000040 .LVL2
     /tmp/ccSxt52B.s:80     .text:0000000000000044 .LVL3
     /tmp/ccSxt52B.s:327    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
interrupt
_Z8userMainv
_ZN3PCB14createProccessEPFvvEPv
_ZN3PCB7runningE
_ZN3CCB8semInputE
_Z8sem_openPP3SCBj
GAS LISTING /tmp/ccSxt52B.s 			page 17


_ZN3CCB9semOutputE
_ZN3CCB16inputBufferEmptyE
_ZN3CCB9inputBodyEPv
_ZN3CCB12inputProccesE
_Z13thread_createPP3PCBPFvPvES2_
_ZN3CCB10outputBodyEPv
_ZN3CCB13outputProcessE
_ZN9Scheduler11idleProcessE
_Z18thread_create_onlyPP3PCBPFvPvES2_
_Z15thread_dispatchv
_ZN3CCB12outputBufferE
_ZN8IOBuffer9peekFrontEv

GAS LISTING /tmp/ccoyKs3S.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	idleProcess
   9              	idleProcess:
  10              	.LFB42:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../h/hw.h"
   2:src/main.cpp  **** #include "../h/console.h"
   3:src/main.cpp  **** #include "../h/MemoryAllocator.h"
   4:src/main.cpp  **** #include "../h/syscall_c.h"
   5:src/main.cpp  **** #include "../h/print.h"
   6:src/main.cpp  **** #include "../h/PCB.h"
   7:src/main.cpp  **** #include "../h/kernel.h"
   8:src/main.cpp  **** #include "../h/syscall_cpp.h"
   9:src/main.cpp  **** #include "../h/SCB.h"
  10:src/main.cpp  **** #include "../h/buffer.hpp"
  11:src/main.cpp  **** #include "../h/CCB.h"
  12:src/main.cpp  **** 
  13:src/main.cpp  **** 
  14:src/main.cpp  **** // Kernel inicijalizacija
  15:src/main.cpp  **** extern "C" void interrupt();
  16:src/main.cpp  **** extern "C" void userMode() {
  17:src/main.cpp  ****     asm volatile("csrw stvec, %0" : : "r" (&interrupt));
  18:src/main.cpp  ****     Kernel::mc_sstatus(Kernel::BitMaskSstatus::SSTATUS_SPP); // vraticemo se u korisnicki rezim
  19:src/main.cpp  ****     size_t volatile sepc = Kernel::r_sepc();
  20:src/main.cpp  ****     sepc += 4;
  21:src/main.cpp  ****     Kernel::w_sepc(sepc);
  22:src/main.cpp  ****     asm volatile("sret");
  23:src/main.cpp  **** }
  24:src/main.cpp  **** 
  25:src/main.cpp  **** extern "C" void idleProcess(void* arg) {
  12              		.loc 1 25 40
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  21              	.L2:
  26:src/main.cpp  ****     while(true) {}
  22              		.loc 1 26 5 discriminator 1
  23              		.loc 1 26 5 discriminator 1
  24 000c 6F000000 		j	.L2
  25              		.cfi_endproc
  26              	.LFE42:
  28              		.align	2
  29              		.globl	userMode
  31              	userMode:
  32              	.LFB41:
  16:src/main.cpp  ****     asm volatile("csrw stvec, %0" : : "r" (&interrupt));
  33              		.loc 1 16 28
GAS LISTING /tmp/ccoyKs3S.s 			page 2


  34              		.cfi_startproc
  35 0010 130101FE 		addi	sp,sp,-32
  36              		.cfi_def_cfa_offset 32
  37 0014 233C8100 		sd	s0,24(sp)
  38              		.cfi_offset 8, -8
  39 0018 13040102 		addi	s0,sp,32
  40              		.cfi_def_cfa 8, 0
  17:src/main.cpp  ****     Kernel::mc_sstatus(Kernel::BitMaskSstatus::SSTATUS_SPP); // vraticemo se u korisnicki rezim
  41              		.loc 1 17 5
  17:src/main.cpp  ****     Kernel::mc_sstatus(Kernel::BitMaskSstatus::SSTATUS_SPP); // vraticemo se u korisnicki rezim
  42              		.loc 1 17 56 is_stmt 0
  43 001c 97070000 		la	a5,interrupt
  43      83B70700 
  44              	#APP
  45              	# 17 "src/main.cpp" 1
  18:src/main.cpp  ****     size_t volatile sepc = Kernel::r_sepc();
  46              		csrw stvec, a5
  47              	# 0 "" 2
  48              		.loc 1 18 5 is_stmt 1
  49              	.LVL1:
  50              	#NO_APP
  51              	.LBB10:
  52              	.LBB11:
  53              		.file 2 "src/../h/kernel.h"
   1:src/../h/kernel.h **** #ifndef KERNEL_H
   2:src/../h/kernel.h **** #define KERNEL_H
   3:src/../h/kernel.h **** 
   4:src/../h/kernel.h **** #include "hw.h"
   5:src/../h/kernel.h **** 
   6:src/../h/kernel.h **** class Kernel {
   7:src/../h/kernel.h **** public:
   8:src/../h/kernel.h ****     // postavlja code u registar a0
   9:src/../h/kernel.h ****     static size_t setCode(size_t code) {
  10:src/../h/kernel.h ****         return code;
  11:src/../h/kernel.h ****     }
  12:src/../h/kernel.h **** 
  13:src/../h/kernel.h ****     // kodovi po kojima se prepoznaju sistemski pozivi
  14:src/../h/kernel.h ****     enum sysCallCodes {
  15:src/../h/kernel.h ****         mem_alloc = 0x01,
  16:src/../h/kernel.h ****         mem_free = 0x02,
  17:src/../h/kernel.h ****         thread_create = 0x11,
  18:src/../h/kernel.h ****         thread_exit = 0x12,
  19:src/../h/kernel.h ****         thread_dispatch = 0x13,
  20:src/../h/kernel.h ****         thread_start = 0x14,
  21:src/../h/kernel.h ****         sem_open = 0x21,
  22:src/../h/kernel.h ****         sem_close = 0x22,
  23:src/../h/kernel.h ****         sem_wait = 0x23,
  24:src/../h/kernel.h ****         sem_signal = 0x24,
  25:src/../h/kernel.h ****         time_sleep = 0x31,
  26:src/../h/kernel.h ****         getc = 0x41,
  27:src/../h/kernel.h ****         putc = 0x42
  28:src/../h/kernel.h ****     };
  29:src/../h/kernel.h **** 
  30:src/../h/kernel.h ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  31:src/../h/kernel.h ****     static void popSppSpie();
  32:src/../h/kernel.h **** 
  33:src/../h/kernel.h ****     // cita registar scause (uzrok nastanka prekida)
GAS LISTING /tmp/ccoyKs3S.s 			page 3


  34:src/../h/kernel.h ****     static size_t r_scause() {
  35:src/../h/kernel.h ****         size_t volatile scause;
  36:src/../h/kernel.h ****         __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  37:src/../h/kernel.h ****         return scause;
  38:src/../h/kernel.h ****     }
  39:src/../h/kernel.h **** 
  40:src/../h/kernel.h ****     // upisuje u registar scause (uzrok nastanka prekida)
  41:src/../h/kernel.h ****     static void w_scause(size_t scause) {
  42:src/../h/kernel.h ****         __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  43:src/../h/kernel.h ****     }
  44:src/../h/kernel.h **** 
  45:src/../h/kernel.h ****     // cita registar sepc
  46:src/../h/kernel.h ****     static size_t r_sepc() {
  47:src/../h/kernel.h ****         size_t volatile sepc;
  48:src/../h/kernel.h ****         __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
  49:src/../h/kernel.h ****         return sepc;
  50:src/../h/kernel.h ****     }
  51:src/../h/kernel.h **** 
  52:src/../h/kernel.h ****     // upisuje u registar sepc
  53:src/../h/kernel.h ****     static void w_sepc(size_t sepc) {
  54:src/../h/kernel.h ****         __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
  55:src/../h/kernel.h ****     }
  56:src/../h/kernel.h **** 
  57:src/../h/kernel.h ****     // read register stvec
  58:src/../h/kernel.h ****     static size_t r_stvec() {
  59:src/../h/kernel.h ****         size_t volatile stvec;
  60:src/../h/kernel.h ****         __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
  61:src/../h/kernel.h ****         return stvec;
  62:src/../h/kernel.h ****     }
  63:src/../h/kernel.h **** 
  64:src/../h/kernel.h ****     // write register stvec
  65:src/../h/kernel.h ****     static void w_stvec(size_t stvec) {
  66:src/../h/kernel.h ****         __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  67:src/../h/kernel.h ****     }
  68:src/../h/kernel.h **** 
  69:src/../h/kernel.h ****     // read register stval
  70:src/../h/kernel.h ****     static size_t r_stval() {
  71:src/../h/kernel.h ****         size_t volatile stval;
  72:src/../h/kernel.h ****         __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
  73:src/../h/kernel.h ****         return stval;
  74:src/../h/kernel.h ****     }
  75:src/../h/kernel.h **** 
  76:src/../h/kernel.h ****     // write register stval
  77:src/../h/kernel.h ****     static void w_stval(size_t stval) {
  78:src/../h/kernel.h ****         __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
  79:src/../h/kernel.h ****     }
  80:src/../h/kernel.h **** 
  81:src/../h/kernel.h ****     enum BitMaskSip
  82:src/../h/kernel.h ****     {
  83:src/../h/kernel.h ****         SIP_SSIE = (1 << 1), // da li su dozvoljeni softverski prekidi
  84:src/../h/kernel.h ****         SIP_SEIE = (1 << 9), // da li su dozvoljeni spoljasnji hardverski prekidi
  85:src/../h/kernel.h ****     };
  86:src/../h/kernel.h **** 
  87:src/../h/kernel.h ****     // postavljanje odredjenih bitova (BitMaskSip) u registar sip
  88:src/../h/kernel.h ****     static void ms_sip(size_t mask) {
  89:src/../h/kernel.h ****         __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
  90:src/../h/kernel.h ****     }
GAS LISTING /tmp/ccoyKs3S.s 			page 4


  91:src/../h/kernel.h **** 
  92:src/../h/kernel.h ****     // brisanje odredjenih bitova (BitMaskSip) iz registra sip
  93:src/../h/kernel.h ****     static void mc_sip(size_t mask) {
  94:src/../h/kernel.h ****         __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
  95:src/../h/kernel.h ****     }
  96:src/../h/kernel.h **** 
  97:src/../h/kernel.h ****     // citanje iz registra sip
  98:src/../h/kernel.h ****     static size_t r_sip() {
  99:src/../h/kernel.h ****         size_t volatile sip;
 100:src/../h/kernel.h ****         __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 101:src/../h/kernel.h ****         return sip;
 102:src/../h/kernel.h ****     }
 103:src/../h/kernel.h **** 
 104:src/../h/kernel.h ****     // upis u registar sip
 105:src/../h/kernel.h ****     static void w_sip(size_t sip) {
 106:src/../h/kernel.h ****         __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 107:src/../h/kernel.h ****     }
 108:src/../h/kernel.h **** 
 109:src/../h/kernel.h ****     enum BitMaskSstatus
 110:src/../h/kernel.h ****     {
 111:src/../h/kernel.h ****         SSTATUS_SIE = (1 << 1), // ako je 0 - maskiranje spoljasnjih prekida u sistemskom rezimu
 112:src/../h/kernel.h ****         SSTATUS_SPIE = (1 << 5), // prethodna vrednost sie
 113:src/../h/kernel.h ****         SSTATUS_SPP = (1 << 8), // u kom rezimu se desio prekid
 114:src/../h/kernel.h ****     };
 115:src/../h/kernel.h **** 
 116:src/../h/kernel.h ****     // mask set register sstatus
 117:src/../h/kernel.h ****     static void ms_sstatus(size_t mask) {
 118:src/../h/kernel.h ****         __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 119:src/../h/kernel.h ****     }
 120:src/../h/kernel.h **** 
 121:src/../h/kernel.h ****     // mask clear register sstatus
 122:src/../h/kernel.h ****     static void mc_sstatus(size_t mask) {
 123:src/../h/kernel.h ****         __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
  54              		.loc 2 123 9
  55              		.loc 2 123 72 is_stmt 0
  56 0028 93070010 		li	a5,256
  57              	#APP
  58              	# 123 "src/../h/kernel.h" 1
 124              	    }
  59              		csrc sstatus, a5
  60              	# 0 "" 2
  61              	.LVL2:
  62              	#NO_APP
  63              	.LBE11:
  64              	.LBE10:
  19:src/main.cpp  ****     sepc += 4;
  65              		.loc 1 19 5 is_stmt 1
  66              	.LBB12:
  67              	.LBB13:
  47:src/../h/kernel.h ****         __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
  68              		.loc 2 47 9
  48:src/../h/kernel.h ****         return sepc;
  69              		.loc 2 48 9
  48:src/../h/kernel.h ****         return sepc;
  70              		.loc 2 48 68 is_stmt 0
  71              	#APP
  72              	# 48 "src/../h/kernel.h" 1
GAS LISTING /tmp/ccoyKs3S.s 			page 5


  73              		csrr a5, sepc
  74              	# 0 "" 2
  75              	#NO_APP
  76 0034 2330F4FE 		sd	a5,-32(s0)
  49:src/../h/kernel.h ****     }
  77              		.loc 2 49 9 is_stmt 1
  49:src/../h/kernel.h ****     }
  78              		.loc 2 49 16 is_stmt 0
  79 0038 833704FE 		ld	a5,-32(s0)
  80              	.LBE13:
  81              	.LBE12:
  19:src/main.cpp  ****     sepc += 4;
  82              		.loc 1 19 43
  83 003c 2334F4FE 		sd	a5,-24(s0)
  20:src/main.cpp  ****     Kernel::w_sepc(sepc);
  84              		.loc 1 20 5 is_stmt 1
  20:src/main.cpp  ****     Kernel::w_sepc(sepc);
  85              		.loc 1 20 10 is_stmt 0
  86 0040 833784FE 		ld	a5,-24(s0)
  87 0044 93874700 		addi	a5,a5,4
  88 0048 2334F4FE 		sd	a5,-24(s0)
  21:src/main.cpp  ****     asm volatile("sret");
  89              		.loc 1 21 5 is_stmt 1
  21:src/main.cpp  ****     asm volatile("sret");
  90              		.loc 1 21 19 is_stmt 0
  91 004c 833784FE 		ld	a5,-24(s0)
  92              	.LVL3:
  93              	.LBB14:
  94              	.LBB15:
  54:src/../h/kernel.h ****     }
  95              		.loc 2 54 9 is_stmt 1
  54:src/../h/kernel.h ****     }
  96              		.loc 2 54 69 is_stmt 0
  97              	#APP
  98              	# 54 "src/../h/kernel.h" 1
  99              		csrw sepc, a5
 100              	# 0 "" 2
 101              	.LVL4:
 102              	#NO_APP
 103              	.LBE15:
 104              	.LBE14:
  22:src/main.cpp  **** }
 105              		.loc 1 22 5 is_stmt 1
  22:src/main.cpp  **** }
 106              		.loc 1 22 25 is_stmt 0
 107              	#APP
 108              	# 22 "src/main.cpp" 1
  23:src/main.cpp  **** 
 109              		sret
 110              	# 0 "" 2
 111              		.loc 1 23 1
 112              	#NO_APP
 113 0058 03348101 		ld	s0,24(sp)
 114              		.cfi_restore 8
 115              		.cfi_def_cfa 2, 32
 116 005c 13010102 		addi	sp,sp,32
 117              		.cfi_def_cfa_offset 0
GAS LISTING /tmp/ccoyKs3S.s 			page 6


 118 0060 67800000 		jr	ra
 119              		.cfi_endproc
 120              	.LFE41:
 122              		.align	2
 123              		.globl	main
 125              	main:
 126              	.LFB43:
  27:src/main.cpp  **** }
  28:src/main.cpp  **** // ------------
  29:src/main.cpp  **** 
  30:src/main.cpp  **** int main() {
 127              		.loc 1 30 12 is_stmt 1
 128              		.cfi_startproc
 129 0064 130101FF 		addi	sp,sp,-16
 130              		.cfi_def_cfa_offset 16
 131 0068 23341100 		sd	ra,8(sp)
 132 006c 23308100 		sd	s0,0(sp)
 133              		.cfi_offset 1, -8
 134              		.cfi_offset 8, -16
 135 0070 13040101 		addi	s0,sp,16
 136              		.cfi_def_cfa 8, 0
  31:src/main.cpp  ****     // Kernel inicijalizacija
  32:src/main.cpp  ****     //asm volatile("csrw stvec, %0" : : "r" (&userMode));
  33:src/main.cpp  ****     asm volatile("csrw stvec, %0" : : "r" (&interrupt));
 137              		.loc 1 33 5
 138              		.loc 1 33 56 is_stmt 0
 139 0074 97070000 		la	a5,interrupt
 139      83B70700 
 140              	#APP
 141              	# 33 "src/main.cpp" 1
  34              	    PCB* main = PCB::createProccess(nullptr, nullptr); // main proces(ne pravimo stek)
 142              		csrw stvec, a5
 143              	# 0 "" 2
 144              		.loc 1 34 5 is_stmt 1
 145              		.loc 1 34 36 is_stmt 0
 146              	#NO_APP
 147 0080 93050000 		li	a1,0
 148 0084 13050000 		li	a0,0
 149 0088 97000000 		call	_ZN3PCB14createProccessEPFvvEPv@plt
 149      E7800000 
 150              	.LVL5:
  35:src/main.cpp  ****     PCB::running = main;
 151              		.loc 1 35 5 is_stmt 1
 152              		.loc 1 35 18 is_stmt 0
 153 0090 97070000 		la	a5,_ZN3PCB7runningE
 153      83B70700 
 154 0098 23B0A700 		sd	a0,0(a5)
  36:src/main.cpp  **** 
  37:src/main.cpp  ****     sem_open(&CCB::semInput, 0);
 155              		.loc 1 37 5 is_stmt 1
 156              		.loc 1 37 13 is_stmt 0
 157 009c 93050000 		li	a1,0
 158 00a0 17050000 		la	a0,_ZN3CCB8semInputE
 158      03350500 
 159              	.LVL6:
 160 00a8 97000000 		call	_Z8sem_openPP3SCBj@plt
 160      E7800000 
GAS LISTING /tmp/ccoyKs3S.s 			page 7


 161              	.LVL7:
  38:src/main.cpp  ****     sem_open(&CCB::semOutput, 0);
 162              		.loc 1 38 5 is_stmt 1
 163              		.loc 1 38 13 is_stmt 0
 164 00b0 93050000 		li	a1,0
 165 00b4 17050000 		la	a0,_ZN3CCB9semOutputE
 165      03350500 
 166 00bc 97000000 		call	_Z8sem_openPP3SCBj@plt
 166      E7800000 
 167              	.LVL8:
  39:src/main.cpp  ****     sem_open(&CCB::inputBufferEmpty, 0);
 168              		.loc 1 39 5 is_stmt 1
 169              		.loc 1 39 13 is_stmt 0
 170 00c4 93050000 		li	a1,0
 171 00c8 17050000 		la	a0,_ZN3CCB16inputBufferEmptyE
 171      03350500 
 172 00d0 97000000 		call	_Z8sem_openPP3SCBj@plt
 172      E7800000 
 173              	.LVL9:
  40:src/main.cpp  **** 
  41:src/main.cpp  ****     Kernel::ms_sstatus(Kernel::SSTATUS_SIE); // dozvoljavaju se prekidi
 174              		.loc 1 41 5 is_stmt 1
 175              	.LBB16:
 176              	.LBB17:
 118:src/../h/kernel.h ****     }
 177              		.loc 2 118 9
 118:src/../h/kernel.h ****     }
 178              		.loc 2 118 72 is_stmt 0
 179 00d8 93072000 		li	a5,2
 180              	#APP
 181              	# 118 "src/../h/kernel.h" 1
 182              		csrs sstatus, a5
 183              	# 0 "" 2
 184              	.LVL10:
 185              	#NO_APP
 186              	.LBE17:
 187              	.LBE16:
  42:src/main.cpp  ****     thread_create(&CCB::inputProcces, CCB::inputBody, nullptr); // getc nit (stavljamo je prvi put 
 188              		.loc 1 42 5 is_stmt 1
 189              		.loc 1 42 18 is_stmt 0
 190 00e0 13060000 		li	a2,0
 191 00e4 97050000 		la	a1,_ZN3CCB9inputBodyEPv
 191      83B50500 
 192 00ec 17050000 		la	a0,_ZN3CCB12inputProccesE
 192      03350500 
 193 00f4 97000000 		call	_Z13thread_createPP3PCBPFvPvES2_@plt
 193      E7800000 
 194              	.LVL11:
  43:src/main.cpp  ****     thread_create(&CCB::outputProcess, CCB::outputBody, nullptr); // putc nit ( stavljamo je prvi p
 195              		.loc 1 43 5 is_stmt 1
 196              		.loc 1 43 18 is_stmt 0
 197 00fc 13060000 		li	a2,0
 198 0100 97050000 		la	a1,_ZN3CCB10outputBodyEPv
 198      83B50500 
 199 0108 17050000 		la	a0,_ZN3CCB13outputProcessE
 199      03350500 
 200 0110 97000000 		call	_Z13thread_createPP3PCBPFvPvES2_@plt
GAS LISTING /tmp/ccoyKs3S.s 			page 8


 200      E7800000 
 201              	.LVL12:
  44:src/main.cpp  ****     thread_create_only(&Scheduler::idleProcess, idleProcess, nullptr); // idle nit
 202              		.loc 1 44 5 is_stmt 1
 203              		.loc 1 44 23 is_stmt 0
 204 0118 13060000 		li	a2,0
 205 011c 97050000 		lla	a1,idleProcess
 205      93850500 
 206 0124 17050000 		la	a0,_ZN9Scheduler11idleProcessE
 206      03350500 
 207 012c 97000000 		call	_Z18thread_create_onlyPP3PCBPFvPvES2_@plt
 207      E7800000 
 208              	.LVL13:
  45:src/main.cpp  **** 
  46:src/main.cpp  ****     //asm volatile("ecall"); // da bismo presli u korisnicki rezim
  47:src/main.cpp  ****     // ----
  48:src/main.cpp  ****     putc('g');
 209              		.loc 1 48 5 is_stmt 1
 210              		.loc 1 48 9 is_stmt 0
 211 0134 13057006 		li	a0,103
 212 0138 97000000 		call	_Z4putcc@plt
 212      E7800000 
 213              	.LVL14:
  49:src/main.cpp  ****     putc('d');
 214              		.loc 1 49 5 is_stmt 1
 215              		.loc 1 49 9 is_stmt 0
 216 0140 13054006 		li	a0,100
 217 0144 97000000 		call	_Z4putcc@plt
 217      E7800000 
 218              	.LVL15:
  50:src/main.cpp  ****     //char c = getc();
  51:src/main.cpp  ****     //putc(c);
  52:src/main.cpp  ****     putc('e');
 219              		.loc 1 52 5 is_stmt 1
 220              		.loc 1 52 9 is_stmt 0
 221 014c 13055006 		li	a0,101
 222 0150 97000000 		call	_Z4putcc@plt
 222      E7800000 
 223              	.LVL16:
  53:src/main.cpp  ****     putc(' ');
 224              		.loc 1 53 5 is_stmt 1
 225              		.loc 1 53 9 is_stmt 0
 226 0158 13050002 		li	a0,32
 227 015c 97000000 		call	_Z4putcc@plt
 227      E7800000 
 228              	.LVL17:
  54:src/main.cpp  ****     putc('l');
 229              		.loc 1 54 5 is_stmt 1
 230              		.loc 1 54 9 is_stmt 0
 231 0164 1305C006 		li	a0,108
 232 0168 97000000 		call	_Z4putcc@plt
 232      E7800000 
 233              	.LVL18:
  55:src/main.cpp  ****     putc('a');
 234              		.loc 1 55 5 is_stmt 1
 235              		.loc 1 55 9 is_stmt 0
 236 0170 13051006 		li	a0,97
GAS LISTING /tmp/ccoyKs3S.s 			page 9


 237 0174 97000000 		call	_Z4putcc@plt
 237      E7800000 
 238              	.LVL19:
  56:src/main.cpp  ****     putc('k');
 239              		.loc 1 56 5 is_stmt 1
 240              		.loc 1 56 9 is_stmt 0
 241 017c 1305B006 		li	a0,107
 242 0180 97000000 		call	_Z4putcc@plt
 242      E7800000 
 243              	.LVL20:
  57:src/main.cpp  ****     putc('o');
 244              		.loc 1 57 5 is_stmt 1
 245              		.loc 1 57 9 is_stmt 0
 246 0188 1305F006 		li	a0,111
 247 018c 97000000 		call	_Z4putcc@plt
 247      E7800000 
 248              	.LVL21:
  58:src/main.cpp  ****     //time_sleep(10);
  59:src/main.cpp  ****     //userMain();
  60:src/main.cpp  ****     //__putc('l');
  61:src/main.cpp  ****     //while(true) {}
  62:src/main.cpp  ****     //time_sleep(100);
  63:src/main.cpp  ****     return 0;
 249              		.loc 1 63 5 is_stmt 1
  64:src/main.cpp  **** }...
 250              		.loc 1 64 1 is_stmt 0
 251 0194 13050000 		li	a0,0
 252 0198 83308100 		ld	ra,8(sp)
 253              		.cfi_restore 1
 254 019c 03340100 		ld	s0,0(sp)
 255              		.cfi_restore 8
 256              		.cfi_def_cfa 2, 16
 257 01a0 13010101 		addi	sp,sp,16
 258              		.cfi_def_cfa_offset 0
 259 01a4 67800000 		jr	ra
 260              		.cfi_endproc
 261              	.LFE43:
 263              	.Letext0:
 264              		.file 3 "src/../h/hw.h"
 265              		.file 4 "src/../h/PCB.h"
 266              		.file 5 "src/../h/syscall_c.h"
GAS LISTING /tmp/ccoyKs3S.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccoyKs3S.s:9      .text:0000000000000000 idleProcess
     /tmp/ccoyKs3S.s:13     .text:0000000000000000 .L0 
     /tmp/ccoyKs3S.s:15     .text:0000000000000000 .L0 
     /tmp/ccoyKs3S.s:16     .text:0000000000000004 .L0 
     /tmp/ccoyKs3S.s:18     .text:0000000000000008 .L0 
     /tmp/ccoyKs3S.s:20     .text:000000000000000c .L0 
     /tmp/ccoyKs3S.s:23     .text:000000000000000c .L0 
     /tmp/ccoyKs3S.s:24     .text:000000000000000c .L0 
     /tmp/ccoyKs3S.s:25     .text:0000000000000010 .L0 
     /tmp/ccoyKs3S.s:31     .text:0000000000000010 userMode
     /tmp/ccoyKs3S.s:34     .text:0000000000000010 .L0 
     /tmp/ccoyKs3S.s:35     .text:0000000000000010 .L0 
     /tmp/ccoyKs3S.s:36     .text:0000000000000014 .L0 
     /tmp/ccoyKs3S.s:38     .text:0000000000000018 .L0 
     /tmp/ccoyKs3S.s:40     .text:000000000000001c .L0 
     /tmp/ccoyKs3S.s:42     .text:000000000000001c .L0 
     /tmp/ccoyKs3S.s:43     .text:000000000000001c .L0 
     /tmp/ccoyKs3S.s:54     .text:0000000000000028 .L0 
     /tmp/ccoyKs3S.s:55     .text:0000000000000028 .L0 
     /tmp/ccoyKs3S.s:56     .text:0000000000000028 .L0 
     /tmp/ccoyKs3S.s:68     .text:0000000000000030 .L0 
     /tmp/ccoyKs3S.s:69     .text:0000000000000030 .L0 
     /tmp/ccoyKs3S.s:70     .text:0000000000000030 .L0 
   src/../h/kernel.h:48     .text:0000000000000030 .L0 
     /tmp/ccoyKs3S.s:78     .text:0000000000000038 .L0 
     /tmp/ccoyKs3S.s:79     .text:0000000000000038 .L0 
     /tmp/ccoyKs3S.s:83     .text:000000000000003c .L0 
     /tmp/ccoyKs3S.s:85     .text:0000000000000040 .L0 
     /tmp/ccoyKs3S.s:86     .text:0000000000000040 .L0 
     /tmp/ccoyKs3S.s:90     .text:000000000000004c .L0 
     /tmp/ccoyKs3S.s:91     .text:000000000000004c .L0 
     /tmp/ccoyKs3S.s:96     .text:0000000000000050 .L0 
   src/../h/kernel.h:54     .text:0000000000000050 .L0 
     /tmp/ccoyKs3S.s:106    .text:0000000000000054 .L0 
        src/main.cpp:22     .text:0000000000000054 .L0 
     /tmp/ccoyKs3S.s:113    .text:0000000000000058 .L0 
     /tmp/ccoyKs3S.s:114    .text:000000000000005c .L0 
     /tmp/ccoyKs3S.s:115    .text:000000000000005c .L0 
     /tmp/ccoyKs3S.s:117    .text:0000000000000060 .L0 
     /tmp/ccoyKs3S.s:119    .text:0000000000000064 .L0 
     /tmp/ccoyKs3S.s:125    .text:0000000000000064 main
     /tmp/ccoyKs3S.s:128    .text:0000000000000064 .L0 
     /tmp/ccoyKs3S.s:129    .text:0000000000000064 .L0 
     /tmp/ccoyKs3S.s:130    .text:0000000000000068 .L0 
     /tmp/ccoyKs3S.s:133    .text:0000000000000070 .L0 
     /tmp/ccoyKs3S.s:134    .text:0000000000000070 .L0 
     /tmp/ccoyKs3S.s:136    .text:0000000000000074 .L0 
     /tmp/ccoyKs3S.s:138    .text:0000000000000074 .L0 
     /tmp/ccoyKs3S.s:139    .text:0000000000000074 .L0 
     /tmp/ccoyKs3S.s:145    .text:0000000000000080 .L0 
     /tmp/ccoyKs3S.s:147    .text:0000000000000080 .L0 
     /tmp/ccoyKs3S.s:152    .text:0000000000000090 .L0 
     /tmp/ccoyKs3S.s:153    .text:0000000000000090 .L0 
     /tmp/ccoyKs3S.s:156    .text:000000000000009c .L0 
     /tmp/ccoyKs3S.s:157    .text:000000000000009c .L0 
GAS LISTING /tmp/ccoyKs3S.s 			page 11


     /tmp/ccoyKs3S.s:163    .text:00000000000000b0 .L0 
     /tmp/ccoyKs3S.s:164    .text:00000000000000b0 .L0 
     /tmp/ccoyKs3S.s:169    .text:00000000000000c4 .L0 
     /tmp/ccoyKs3S.s:170    .text:00000000000000c4 .L0 
     /tmp/ccoyKs3S.s:177    .text:00000000000000d8 .L0 
     /tmp/ccoyKs3S.s:178    .text:00000000000000d8 .L0 
     /tmp/ccoyKs3S.s:179    .text:00000000000000d8 .L0 
     /tmp/ccoyKs3S.s:189    .text:00000000000000e0 .L0 
     /tmp/ccoyKs3S.s:190    .text:00000000000000e0 .L0 
     /tmp/ccoyKs3S.s:196    .text:00000000000000fc .L0 
     /tmp/ccoyKs3S.s:197    .text:00000000000000fc .L0 
     /tmp/ccoyKs3S.s:203    .text:0000000000000118 .L0 
     /tmp/ccoyKs3S.s:204    .text:0000000000000118 .L0 
     /tmp/ccoyKs3S.s:210    .text:0000000000000134 .L0 
     /tmp/ccoyKs3S.s:211    .text:0000000000000134 .L0 
     /tmp/ccoyKs3S.s:215    .text:0000000000000140 .L0 
     /tmp/ccoyKs3S.s:216    .text:0000000000000140 .L0 
     /tmp/ccoyKs3S.s:220    .text:000000000000014c .L0 
     /tmp/ccoyKs3S.s:221    .text:000000000000014c .L0 
     /tmp/ccoyKs3S.s:225    .text:0000000000000158 .L0 
     /tmp/ccoyKs3S.s:226    .text:0000000000000158 .L0 
     /tmp/ccoyKs3S.s:230    .text:0000000000000164 .L0 
     /tmp/ccoyKs3S.s:231    .text:0000000000000164 .L0 
     /tmp/ccoyKs3S.s:235    .text:0000000000000170 .L0 
     /tmp/ccoyKs3S.s:236    .text:0000000000000170 .L0 
     /tmp/ccoyKs3S.s:240    .text:000000000000017c .L0 
     /tmp/ccoyKs3S.s:241    .text:000000000000017c .L0 
     /tmp/ccoyKs3S.s:245    .text:0000000000000188 .L0 
     /tmp/ccoyKs3S.s:246    .text:0000000000000188 .L0 
     /tmp/ccoyKs3S.s:250    .text:0000000000000194 .L0 
     /tmp/ccoyKs3S.s:251    .text:0000000000000194 .L0 
     /tmp/ccoyKs3S.s:253    .text:000000000000019c .L0 
     /tmp/ccoyKs3S.s:255    .text:00000000000001a0 .L0 
     /tmp/ccoyKs3S.s:256    .text:00000000000001a0 .L0 
     /tmp/ccoyKs3S.s:258    .text:00000000000001a4 .L0 
     /tmp/ccoyKs3S.s:260    .text:00000000000001a8 .L0 
     /tmp/ccoyKs3S.s:267    .text:00000000000001a8 .L0 
     /tmp/ccoyKs3S.s:43     .text:000000000000001c .L0 
     /tmp/ccoyKs3S.s:139    .text:0000000000000074 .L0 
     /tmp/ccoyKs3S.s:153    .text:0000000000000090 .L0 
     /tmp/ccoyKs3S.s:158    .text:00000000000000a0 .L0 
     /tmp/ccoyKs3S.s:165    .text:00000000000000b4 .L0 
     /tmp/ccoyKs3S.s:171    .text:00000000000000c8 .L0 
     /tmp/ccoyKs3S.s:191    .text:00000000000000e4 .L0 
     /tmp/ccoyKs3S.s:192    .text:00000000000000ec .L0 
     /tmp/ccoyKs3S.s:198    .text:0000000000000100 .L0 
     /tmp/ccoyKs3S.s:199    .text:0000000000000108 .L0 
     /tmp/ccoyKs3S.s:205    .text:000000000000011c .L0 
     /tmp/ccoyKs3S.s:206    .text:0000000000000124 .L0 
     /tmp/ccoyKs3S.s:21     .text:000000000000000c .L2
     /tmp/ccoyKs3S.s:1317   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccoyKs3S.s:2372   .debug_str:00000000000005df .LASF119
     /tmp/ccoyKs3S.s:2226   .debug_str:00000000000001c0 .LASF120
     /tmp/ccoyKs3S.s:2344   .debug_str:000000000000052e .LASF121
     /tmp/ccoyKs3S.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccoyKs3S.s:263    .text:00000000000001a8 .Letext0
     /tmp/ccoyKs3S.s:2170   .debug_line:0000000000000000 .Ldebug_line0
GAS LISTING /tmp/ccoyKs3S.s 			page 12


     /tmp/ccoyKs3S.s:2238   .debug_str:000000000000020f .LASF0
     /tmp/ccoyKs3S.s:2262   .debug_str:00000000000002bb .LASF1
     /tmp/ccoyKs3S.s:2330   .debug_str:00000000000004bb .LASF2
     /tmp/ccoyKs3S.s:2334   .debug_str:00000000000004dc .LASF4
     /tmp/ccoyKs3S.s:2250   .debug_str:0000000000000262 .LASF3
     /tmp/ccoyKs3S.s:2176   .debug_str:000000000000001b .LASF5
     /tmp/ccoyKs3S.s:2306   .debug_str:0000000000000401 .LASF6
     /tmp/ccoyKs3S.s:2256   .debug_str:0000000000000299 .LASF7
     /tmp/ccoyKs3S.s:2228   .debug_str:00000000000001cd .LASF8
     /tmp/ccoyKs3S.s:2230   .debug_str:00000000000001dd .LASF9
     /tmp/ccoyKs3S.s:2192   .debug_str:00000000000000a6 .LASF10
     /tmp/ccoyKs3S.s:2224   .debug_str:00000000000001b1 .LASF11
     /tmp/ccoyKs3S.s:2194   .debug_str:00000000000000b5 .LASF12
     /tmp/ccoyKs3S.s:2190   .debug_str:0000000000000096 .LASF13
     /tmp/ccoyKs3S.s:2356   .debug_str:000000000000058c .LASF14
     /tmp/ccoyKs3S.s:2212   .debug_str:000000000000013b .LASF15
     /tmp/ccoyKs3S.s:2350   .debug_str:0000000000000561 .LASF16
     /tmp/ccoyKs3S.s:2280   .debug_str:0000000000000356 .LASF17
     /tmp/ccoyKs3S.s:2362   .debug_str:00000000000005af .LASF18
     /tmp/ccoyKs3S.s:2402   .debug_str:000000000000077e .LASF20
     /tmp/ccoyKs3S.s:2208   .debug_str:0000000000000122 .LASF19
     /tmp/ccoyKs3S.s:2378   .debug_str:00000000000006c6 .LASF21
     /tmp/ccoyKs3S.s:2360   .debug_str:000000000000059f .LASF22
     /tmp/ccoyKs3S.s:2252   .debug_str:0000000000000274 .LASF23
     /tmp/ccoyKs3S.s:2218   .debug_str:000000000000017e .LASF26
     /tmp/ccoyKs3S.s:2424   .debug_str:000000000000082b .LASF28
     /tmp/ccoyKs3S.s:2232   .debug_str:00000000000001eb .LASF24
     /tmp/ccoyKs3S.s:2268   .debug_str:00000000000002fa .LASF25
     /tmp/ccoyKs3S.s:2286   .debug_str:0000000000000366 .LASF27
     /tmp/ccoyKs3S.s:2422   .debug_str:0000000000000810 .LASF29
     /tmp/ccoyKs3S.s:2364   .debug_str:00000000000005ba .LASF30
     /tmp/ccoyKs3S.s:2410   .debug_str:00000000000007c5 .LASF31
     /tmp/ccoyKs3S.s:2386   .debug_str:0000000000000708 .LASF32
     /tmp/ccoyKs3S.s:2374   .debug_str:00000000000006a3 .LASF33
     /tmp/ccoyKs3S.s:2418   .debug_str:00000000000007f9 .LASF34
     /tmp/ccoyKs3S.s:2180   .debug_str:000000000000002d .LASF35
     /tmp/ccoyKs3S.s:2346   .debug_str:000000000000054c .LASF122
     /tmp/ccoyKs3S.s:2266   .debug_str:00000000000002f4 .LASF67
     /tmp/ccoyKs3S.s:2270   .debug_str:0000000000000314 .LASF69
     /tmp/ccoyKs3S.s:2368   .debug_str:00000000000005ca .LASF123
     /tmp/ccoyKs3S.s:2260   .debug_str:00000000000002b6 .LASF36
     /tmp/ccoyKs3S.s:2412   .debug_str:00000000000007db .LASF37
     /tmp/ccoyKs3S.s:2416   .debug_str:00000000000007ec .LASF38
     /tmp/ccoyKs3S.s:2214   .debug_str:0000000000000151 .LASF39
     /tmp/ccoyKs3S.s:2172   .debug_str:0000000000000000 .LASF40
     /tmp/ccoyKs3S.s:2246   .debug_str:0000000000000240 .LASF76
     /tmp/ccoyKs3S.s:2236   .debug_str:0000000000000204 .LASF71
     /tmp/ccoyKs3S.s:2188   .debug_str:0000000000000080 .LASF73
     /tmp/ccoyKs3S.s:2198   .debug_str:00000000000000d8 .LASF124
     /tmp/ccoyKs3S.s:2174   .debug_str:0000000000000010 .LASF41
     /tmp/ccoyKs3S.s:2282   .debug_str:000000000000035b .LASF42
     /tmp/ccoyKs3S.s:2400   .debug_str:0000000000000775 .LASF43
     /tmp/ccoyKs3S.s:2258   .debug_str:00000000000002ac .LASF44
     /tmp/ccoyKs3S.s:2414   .debug_str:00000000000007e7 .LASF45
     /tmp/ccoyKs3S.s:2348   .debug_str:0000000000000558 .LASF46
     /tmp/ccoyKs3S.s:2302   .debug_str:00000000000003e0 .LASF47
     /tmp/ccoyKs3S.s:2276   .debug_str:0000000000000343 .LASF48
GAS LISTING /tmp/ccoyKs3S.s 			page 13


     /tmp/ccoyKs3S.s:2404   .debug_str:0000000000000795 .LASF49
     /tmp/ccoyKs3S.s:2206   .debug_str:0000000000000114 .LASF50
     /tmp/ccoyKs3S.s:2376   .debug_str:00000000000006bc .LASF51
     /tmp/ccoyKs3S.s:2342   .debug_str:000000000000051d .LASF125
     /tmp/ccoyKs3S.s:2204   .debug_str:000000000000010b .LASF57
     /tmp/ccoyKs3S.s:2184   .debug_str:0000000000000056 .LASF59
     /tmp/ccoyKs3S.s:2240   .debug_str:000000000000021c .LASF52
     /tmp/ccoyKs3S.s:2396   .debug_str:000000000000074d .LASF54
     /tmp/ccoyKs3S.s:2242   .debug_str:000000000000022b .LASF53
     /tmp/ccoyKs3S.s:2338   .debug_str:00000000000004ea .LASF55
     /tmp/ccoyKs3S.s:2274   .debug_str:0000000000000339 .LASF56
     /tmp/ccoyKs3S.s:2314   .debug_str:000000000000043b .LASF58
     /tmp/ccoyKs3S.s:2406   .debug_str:00000000000007a2 .LASF60
     /tmp/ccoyKs3S.s:2358   .debug_str:0000000000000598 .LASF61
     /tmp/ccoyKs3S.s:2388   .debug_str:0000000000000716 .LASF126
     /tmp/ccoyKs3S.s:2220   .debug_str:000000000000018e .LASF62
     /tmp/ccoyKs3S.s:2370   .debug_str:00000000000005d2 .LASF63
     /tmp/ccoyKs3S.s:2200   .debug_str:00000000000000eb .LASF64
     /tmp/ccoyKs3S.s:2408   .debug_str:00000000000007bd .LASF65
     /tmp/ccoyKs3S.s:2248   .debug_str:000000000000024d .LASF66
     /tmp/ccoyKs3S.s:2234   .debug_str:00000000000001f9 .LASF68
     /tmp/ccoyKs3S.s:2304   .debug_str:00000000000003e8 .LASF70
     /tmp/ccoyKs3S.s:2384   .debug_str:00000000000006ff .LASF72
     /tmp/ccoyKs3S.s:2326   .debug_str:000000000000049a .LASF74
     /tmp/ccoyKs3S.s:2324   .debug_str:0000000000000491 .LASF75
     /tmp/ccoyKs3S.s:2316   .debug_str:000000000000044b .LASF77
     /tmp/ccoyKs3S.s:2312   .debug_str:0000000000000434 .LASF78
     /tmp/ccoyKs3S.s:2300   .debug_str:00000000000003cc .LASF79
     /tmp/ccoyKs3S.s:2298   .debug_str:00000000000003c5 .LASF80
     /tmp/ccoyKs3S.s:2322   .debug_str:000000000000047d .LASF81
     /tmp/ccoyKs3S.s:2290   .debug_str:0000000000000389 .LASF82
     /tmp/ccoyKs3S.s:2340   .debug_str:0000000000000508 .LASF83
     /tmp/ccoyKs3S.s:2292   .debug_str:0000000000000391 .LASF84
     /tmp/ccoyKs3S.s:2272   .debug_str:0000000000000324 .LASF85
     /tmp/ccoyKs3S.s:2278   .debug_str:000000000000034e .LASF86
     /tmp/ccoyKs3S.s:2288   .debug_str:0000000000000374 .LASF87
     /tmp/ccoyKs3S.s:2420   .debug_str:0000000000000808 .LASF88
     /tmp/ccoyKs3S.s:2382   .debug_str:00000000000006ea .LASF89
     /tmp/ccoyKs3S.s:2352   .debug_str:0000000000000577 .LASF90
     /tmp/ccoyKs3S.s:2308   .debug_str:0000000000000414 .LASF91
     /tmp/ccoyKs3S.s:2336   .debug_str:00000000000004e3 .LASF92
     /tmp/ccoyKs3S.s:2202   .debug_str:00000000000000f7 .LASF93
     /tmp/ccoyKs3S.s:2210   .debug_str:0000000000000135 .LASF94
     /tmp/ccoyKs3S.s:2332   .debug_str:00000000000004c9 .LASF95
     /tmp/ccoyKs3S.s:2244   .debug_str:000000000000023a .LASF96
     /tmp/ccoyKs3S.s:2296   .debug_str:00000000000003b2 .LASF97
     /tmp/ccoyKs3S.s:2178   .debug_str:0000000000000022 .LASF98
     /tmp/ccoyKs3S.s:2392   .debug_str:000000000000072a .LASF99
     /tmp/ccoyKs3S.s:2328   .debug_str:00000000000004b0 .LASF100
     /tmp/ccoyKs3S.s:2294   .debug_str:0000000000000399 .LASF101
     /tmp/ccoyKs3S.s:2398   .debug_str:000000000000076b .LASF102
     /tmp/ccoyKs3S.s:2222   .debug_str:000000000000019a .LASF103
     /tmp/ccoyKs3S.s:2394   .debug_str:0000000000000743 .LASF104
     /tmp/ccoyKs3S.s:2186   .debug_str:0000000000000069 .LASF105
     /tmp/ccoyKs3S.s:2366   .debug_str:00000000000005c5 .LASF106
     /tmp/ccoyKs3S.s:126    .text:0000000000000064 .LFB43
     /tmp/ccoyKs3S.s:261    .text:00000000000001a8 .LFE43
GAS LISTING /tmp/ccoyKs3S.s 			page 14


     /tmp/ccoyKs3S.s:2126   .debug_loc:0000000000000000 .LLST2
     /tmp/ccoyKs3S.s:175    .text:00000000000000d8 .LBB16
     /tmp/ccoyKs3S.s:187    .text:00000000000000e0 .LBE16
     /tmp/ccoyKs3S.s:2133   .debug_loc:0000000000000023 .LLST3
     /tmp/ccoyKs3S.s:150    .text:0000000000000090 .LVL5
     /tmp/ccoyKs3S.s:161    .text:00000000000000b0 .LVL7
     /tmp/ccoyKs3S.s:167    .text:00000000000000c4 .LVL8
     /tmp/ccoyKs3S.s:173    .text:00000000000000d8 .LVL9
     /tmp/ccoyKs3S.s:194    .text:00000000000000fc .LVL11
     /tmp/ccoyKs3S.s:201    .text:0000000000000118 .LVL12
     /tmp/ccoyKs3S.s:208    .text:0000000000000134 .LVL13
     /tmp/ccoyKs3S.s:213    .text:0000000000000140 .LVL14
     /tmp/ccoyKs3S.s:218    .text:000000000000014c .LVL15
     /tmp/ccoyKs3S.s:223    .text:0000000000000158 .LVL16
     /tmp/ccoyKs3S.s:228    .text:0000000000000164 .LVL17
     /tmp/ccoyKs3S.s:233    .text:0000000000000170 .LVL18
     /tmp/ccoyKs3S.s:238    .text:000000000000017c .LVL19
     /tmp/ccoyKs3S.s:243    .text:0000000000000188 .LVL20
     /tmp/ccoyKs3S.s:248    .text:0000000000000194 .LVL21
     /tmp/ccoyKs3S.s:2310   .debug_str:0000000000000428 .LASF107
     /tmp/ccoyKs3S.s:10     .text:0000000000000000 .LFB42
     /tmp/ccoyKs3S.s:26     .text:0000000000000010 .LFE42
     /tmp/ccoyKs3S.s:2254   .debug_str:0000000000000290 .LASF108
     /tmp/ccoyKs3S.s:32     .text:0000000000000010 .LFB41
     /tmp/ccoyKs3S.s:120    .text:0000000000000064 .LFE41
     /tmp/ccoyKs3S.s:2380   .debug_str:00000000000006e5 .LASF109
     /tmp/ccoyKs3S.s:51     .text:0000000000000028 .LBB10
     /tmp/ccoyKs3S.s:64     .text:0000000000000030 .LBE10
     /tmp/ccoyKs3S.s:2141   .debug_loc:0000000000000047 .LLST0
     /tmp/ccoyKs3S.s:66     .text:0000000000000030 .LBB12
     /tmp/ccoyKs3S.s:81     .text:000000000000003c .LBE12
     /tmp/ccoyKs3S.s:93     .text:0000000000000050 .LBB14
     /tmp/ccoyKs3S.s:104    .text:0000000000000054 .LBE14
     /tmp/ccoyKs3S.s:2150   .debug_loc:000000000000006d .LLST1
     /tmp/ccoyKs3S.s:2390   .debug_str:0000000000000725 .LASF110
     /tmp/ccoyKs3S.s:2318   .debug_str:0000000000000461 .LASF111
     /tmp/ccoyKs3S.s:2320   .debug_str:0000000000000474 .LASF113
     /tmp/ccoyKs3S.s:2216   .debug_str:000000000000015d .LASF112
     /tmp/ccoyKs3S.s:2354   .debug_str:000000000000057e .LASF114
     /tmp/ccoyKs3S.s:2264   .debug_str:00000000000002ce .LASF115
     /tmp/ccoyKs3S.s:2196   .debug_str:00000000000000c5 .LASF116
     /tmp/ccoyKs3S.s:2182   .debug_str:000000000000004d .LASF117
     /tmp/ccoyKs3S.s:2284   .debug_str:0000000000000361 .LASF118
     /tmp/ccoyKs3S.s:159    .text:00000000000000a8 .LVL6
     /tmp/ccoyKs3S.s:184    .text:00000000000000e0 .LVL10
     /tmp/ccoyKs3S.s:49     .text:0000000000000028 .LVL1
     /tmp/ccoyKs3S.s:61     .text:0000000000000030 .LVL2
     /tmp/ccoyKs3S.s:92     .text:0000000000000050 .LVL3
     /tmp/ccoyKs3S.s:101    .text:0000000000000054 .LVL4
     /tmp/ccoyKs3S.s:268    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
interrupt
_ZN3PCB14createProccessEPFvvEPv
_ZN3PCB7runningE
_ZN3CCB8semInputE
_Z8sem_openPP3SCBj
GAS LISTING /tmp/ccoyKs3S.s 			page 15


_ZN3CCB9semOutputE
_ZN3CCB16inputBufferEmptyE
_ZN3CCB9inputBodyEPv
_ZN3CCB12inputProccesE
_Z13thread_createPP3PCBPFvPvES2_
_ZN3CCB10outputBodyEPv
_ZN3CCB13outputProcessE
_ZN9Scheduler11idleProcessE
_Z18thread_create_onlyPP3PCBPFvPvES2_
_Z4putcc
